{"version":3,"sources":["Components/MainInterface/AnimatedBackground.tsx","Components/neumorphColors.ts","Components/MainInterface/RotatedBackground.tsx","Components/MainInterface/InterfaceWrapper.tsx","Components/MainInterface/EditButton.tsx","Components/MainInterface/OtherButtons.tsx","api/api.ts","hooks/movePos.ts","redux/interfaceReducer.ts","redux/stateReducer.ts","Components/MainInterface/MainInterfaceContainer.tsx","Components/AppAnimatedWrappers/ScrollableElements/ScrollBar.tsx","Components/AppAnimatedWrappers/ScrollableElements/ScrollableWrapper.tsx","Components/Tasks/TaskButtons.tsx","hooks/validate.ts","Components/Tasks/TaskCheckbox.tsx","Components/Tasks/TodoListTask.tsx","Components/Tasks/TasksContainer.tsx","Components/SingleToDoList/TodoListTitle.tsx","Components/SingleToDoList/ContextButtons.tsx","Components/SingleToDoList/TodoList.tsx","Components/AppAnimatedWrappers/DruggedLists/CloseButton.tsx","Components/AppAnimatedWrappers/DruggedLists/AllListsContainer.tsx","hooks/swap.ts","Components/AppAnimatedWrappers/ScrollableElements/ScrollContainer.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["library","add","far","fas","Background","styled","animated","div","withConfig","displayName","componentId","AnimatedBackground","currentPalette","useSelector","store","interface","currentPaletteIndex","shallowEqual","_useSpring","useSpring","background","_useSpring2","Object","slicedToArray","animateBackground","setBackground","useEffect","react_default","a","createElement","style","neumorphColors","concaveBackground","shadows","innerShadows","littleShadows","innerLittleShadows","progressBarColor","progressBarHoverColor","color","defaultPalette","default","props","$palette","InnerShadow","React","memo","_ref","palette","height","rotateZ","x","RotatedBackground_Background","isEqual","WholeWrapper","ButtonsWrapper","$height","InterfaceWrapper","width","children","interfaceHeight","EditButtonWrapper","ProgressBackground","InnerBackground","$cantBeHovered","InnerEditButtonText","ProgressCounter","switchEditMode","cantBeHovered","actionMessage","progressBarAnimation","textTransition","useTransition","from","opacity","y","enter","leave","onClick","value","to","toFixed","objectSpread2","translateY","RightButton","$editable","LeftButton","AdditionalButton","InnerSmallerButtonText","editable","switchScrollableState","addTodoList","rejectAllChanges","scrollableState","Fragment","isMobile","instance","axios","create","baseURL","withCredentials","headers","API-KEY","loginInstance","api","get","then","res","data","post","email","password","rememberMe","title","todoListId","concat","taskId","newTask","put","delete","newTitle","swappedTask","beforeSwappedTask","putAfterItemId","swappedList","beforeSwappedList","movePos","array","moveIndex","toIndex","item","length","diff","toConsumableArray","slice","initialState","focusedStatus","initialLoadingState","fetchingState","allTasks","completedTasks","closeLookState","animationInProgress","interfaceActions","status","type","tasks","restore","state","interfaceReducer","arguments","undefined","action","todoLists","deepCopy","listsOrder","tasksOrder","newListsId","newTasksId","stateActions","newTodoList","task","todoListTitle","newTasksOrder","newListsOrder","newTodoLists","getStateFromServer","initial","dispatch","lists","listsWithTasks","getTasks","regenerator_default","async","_context3","prev","next","awrap","sent","map","_context2","id","index","findIndex","list","items","abrupt","stop","Promise","all","setTimeout","stateReducer","filter","newSwappedTasks","i","cloneDeep","MainInterfaceContainer","useDispatch","todoList","initialLoading","closeLook","_useState","useState","_useState2","buttonsWrapperHeight","setButtonsHeight","isMounted","timeoutId","getHeight","getButtonHeight","window","innerHeight","Math","sqrt","pow","innerWidth","buttonHeight","resizeListener","clearTimeout","newHeight","newButtonHeight","addEventListener","removeEventListener","useCallback","replace","c","r","random","toString","getState","oldTodoLists","todoListsWithNewId","addedLists","deletedLists","editedLists","addedTasks","editedTasks","deletedTasks","createAndChangeIdOfTasksInOrderList","listPromises","currentOrder","swapOrder","addedTasksInLists","currentListsStateOnServer","requiredOrder","_currentOrder","_swapOrder","groupedSwapOrder","swapOrderPending","_context10","oldList","newList","forEach","find","push","oldTask","resultCode","tasksPromises","_context5","_context4","newId","oldId","tasksWithNewId","_context6","newListId","t0","thisListPosId","swappedId","beforeSwappedId","oldIndex","listId","currentList","listsToUpdate","listsOnServer","getListOrder","_context8","_context7","t1","currItem","orderFromCurrentState","itemWithUpdatedState","curItem","newOrder","currOrder","newTaskPosId","consistentSwapOrder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_order","_context9","Symbol","iterator","done","order","return","finish","backgroundHeight","spring","setSpring","_useSpring3","_useSpring4","setProgressBar","isNaN","animate","_context","delay","prop","config","friction","useMemo","MainInterface_RotatedBackground","MainInterface_InterfaceWrapper","MainInterface_EditButton","MainInterface_OtherButtons","ScrollBarWrapper","$interfaceHeight","$visible","ScrollBarThing","$drugged","bindDraggedScrollBar","scrollBarHeight","visible","drugged","top","assign","AllLists","$closeLook","ScrollWrapper","$top","ScrollableWrapper","wrapperAnimation","measuredRef","translateX","ref","TaskButtonWrapper","Button","deleteTask","editTask","onEditClickHandler","useDrag","_ref2","tap","event","stopPropagation","onDeleteClickHandler","_ref3","react_fontawesome_index_es","icon","validate","test","CheckboxWrapper","Checkbox","input","Svg","svg","changeDoneStatus","checked","disabled","onChange","e","d","TaskWrapper","$editorState","TaskBackground","TaskText","contentEditable","editorState","setEditorState","textRef","useRef","current","focus","useLayoutEffect","textContent","currentTarget","onBlurHandler","taskTitle","onKeyDownHandler","keyCode","preventDefault","blur","captureClick","Tasks_TaskButtons","Tasks_TaskCheckbox","onKeyDown","onBlur","TasksWrapper","setHeight","setHoveredStatus","settings","down","originalIndex","calcY","bounds","scale","zIndex","initialYofDragged","immediate","initialY","indexOf","memoizedOrder","memoizedTasksId","heights","elementsBorder","elementsRef","setCurrentHeight","_useSprings","useSprings","_useSprings2","springs","setSprings","_useState3","_useState4","forceRerender","rerender","createRef","calcPositions","heightsArray","reduce","total","topBorder","center","bottomBorder","_","offsetHeight","deletedTaskIndex","deletedOrder","heightsSum","sum","getNewIndex","newIndex","abs","gesture","_ref2$args","args","trueIndex","movement","curIndex","curRow","newHeights","filterTaps","hovering","useHover","TasksContainer_TaskWrapper","key","Tasks_TodoListTask","ListTitle","listTitle","isTitleEditable","deleteTodoList","switchTitleMode","onKeyPressHandler","ButtonWrapper","styles","colors","addTask","editList","ContextButtons_Button","SingleListWrapper","$closeLookState","$animationInProgress","ListOuterLayer","ListShadow","$focusedStatus","$isTasksHovered","ListInnerLayer","listTasks","paletteIndex","setNewHeights","deleteList","currentLook","isTasksHovered","setTasksHoveredStatus","currHeight","filterValue","t","bind","_useState5","_useState6","setTitleEditMode","SingleToDoList_ContextButtons","SingleToDoList_TodoListTitle","Tasks_TasksContainer","CloseButtonAnimatedWrapper","CloseButton","closeButtonAnimation","returnFromCloseLook","TodoListContainer","$width","setWrapperAnimation","scrollByListDrugging","setCloseLookState","returnFromCloseLookState","switchScrollBar","gridItems","display","currentSettings","columns","currWidth","recalculateMeasures","Array","fill","heightInMeasuredArray","temporaryValue","column","rightX","botY","horizontalCenter","verticalCenter","max","apply","findHeight","newHeightsArray","deletedListIndex","deletedList","reorder","arr","index1","index2","val","idx","calculatePositions","xPos","yPos","halfHeight","setActualSprings","springsIndex","tension","clamp","n","left","right","bottom","pageTop","pageBottom","eventCoords","virtualY","addedY","getBounds","offsetX","offsetY","clientY","_ref2$movement","active","first","draggedList","clientX","awaitScroll","promise","resolve","setCloseButtonAnimation","indexOfLookedList","setIndexOfLookedList","itemY","itemX","rotateX","DruggedLists_CloseButton","SingleToDoList_TodoList","ScrollContainer","offsetWidth","border","_useState2$","setBorders","setDrugged","setVisible","_useState7","_useState8","closeLookForWrapper","setCloseLookForWrapper","scrolledY","scrolledPercent","addedScrollConst","memoizedData","scrollingAnimation","setScroll","newBorder","newScrollBarHeight","useWheel","delta","domTarget","swipeY","swipe","scrolledHeight","posY","eventOptions","passive","absY","direction","elementHeight","visibility","ScrollableElements_ScrollableWrapper","DruggedLists_AllListsContainer","ScrollableElements_ScrollBar","GlobalStyles","createGlobalStyle","_templateObject","Wrapper","App","reloadFunction","document","location","reload","MainInterface_AnimatedBackground","MainInterface_MainInterfaceContainer","ScrollableElements_ScrollContainer","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","root","getElementById","ReactDOM","unstable_createRoot","render","es","src_App_0"],"mappings":"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","file":"static/js/main.bdcefde0.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst Background = styled(animated.div)` \r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AnimatedBackground:React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.interface.currentPaletteIndex, shallowEqual);\r\n\r\n    const [animateBackground, setBackground] = useSpring(() => ({\r\n        background: currentPalette.background\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setBackground({background: currentPalette.background})\r\n    }, [currentPalette, setBackground])\r\n\r\n    return <Background style={animateBackground}/>\r\n}\r\n\r\nexport default AnimatedBackground;\r\n\r\n","\r\nexport const neumorphColors: Array<NeumorphColorsType> = [\r\n    {\r\n        background: '#F9DCC4',\r\n        concaveBackground: 'linear-gradient(145deg, #e0c6b0, #ffebd2)',\r\n        shadows: '14px 14px 35px #c2ac99, -14px -14px 35px #ffffef',\r\n        innerShadows: 'inset 14px 14px 35px #c2ac99, inset -14px -14px 35px #ffffef',\r\n        littleShadows: '5px 5px 10px #c2ac99, -5px -5px 10px #ffffef',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c2ac99, inset -5px -5px 10px #ffffef',\r\n        progressBarColor: '#ffffef',\r\n        progressBarHoverColor: '#c2ac99',\r\n        color: '#141718'\r\n    },\r\n    {\r\n        background: '#F8EDEB',\r\n        concaveBackground: 'linear-gradient(145deg, #dfd5d4, #fffefb)',\r\n        shadows: '14px 14px 35px #c1b9b7, -14px -14px 35px #ffffff',\r\n        innerShadows: 'inset 14px 14px 35px #c1b9b7, inset -14px -14px 35px #ffffff',\r\n        littleShadows: '5px 5px 10px #c1b9b7, -5px -5px 10px #ffffff',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c1b9b7, inset -5px -5px 10px #ffffff',\r\n        progressBarColor: '#ffffff',\r\n        progressBarHoverColor: '#c1b9b7',\r\n        color: '#141718'\r\n    },\r\n    {\r\n        background: '#FCD5CE',\r\n        concaveBackground: 'linear-gradient(145deg, #e3c0b9, #ffe4dc)',\r\n        shadows: '14px 14px 35px #c5a6a1, -14px -14px 35px #fffffb',\r\n        innerShadows: 'inset 14px 14px 35px #c5a6a1, inset -14px -14px 35px #fffffb',\r\n        littleShadows: '5px 5px 10px #c5a6a1, -5px -5px 10px #fffffb',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c5a6a1, inset -5px -5px 10px #fffffb',\r\n        progressBarColor: '#fffffb',\r\n        progressBarHoverColor: '#c5a6a1',\r\n        color: '#141718'\r\n    },\r\n    {\r\n        background: '#FFB5A7',\r\n        concaveBackground: 'linear-gradient(145deg, #e6a396, #ffc2b3)',\r\n        shadows: '14px 14px 35px #c78d82, -14px -14px 35px #ffddcc',\r\n        innerShadows: 'inset 14px 14px 35px #c78d82, inset -14px -14px 35px #ffddcc',\r\n        littleShadows: '5px 5px 10px #c78d82, -5px -5px 10px #ffddcc',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c78d82, inset -5px -5px 10px #ffddcc',\r\n        progressBarColor: '#ffddcc',\r\n        progressBarHoverColor: '#c78d82',\r\n        color: '#141718'\r\n    }\r\n];\r\n\r\n/*export const defaultPalette: NeumorphColorsType = {\r\n    background: '#FDA85D',\r\n    concaveBackground: 'linear-gradient(145deg, #e49754, #ffb464)',\r\n    shadows: '14px 14px 35px #c58349, -14px -14px 35px #ffcd71',\r\n    innerShadows: 'inset 14px 14px 35px #c58349, inset -14px -14px 35px #ffcd71',\r\n    littleShadows: '5px 5px 10px #c58349, -5px -5px 10px #ffcd71',\r\n    color: '#141718',\r\n    innerLittleShadows: 'inset 5px 5px 10px #c58349, inset -5px -5px 10px #ffcd71',\r\n    progressBarColor: '#ffcd71',\r\n    progressBarHoverColor: '#c58349',\r\n    default: true\r\n};*/\r\n\r\nexport const defaultPalette: NeumorphColorsType = {\r\n    background: '#EAE8DE',\r\n    concaveBackground: ' linear-gradient(145deg, #d3d1c8, #faf8ee)',\r\n    shadows: '14px 14px 35px #b9b7af, -14px -14px 35px #ffffff',\r\n    innerShadows: 'inset 14px 14px 35px #b9b7af, inset -14px -14px 35px #ffffff',\r\n    littleShadows: '5px 5px 10px #b9b7af, -5px -5px 10px #ffffff',\r\n    color: '#141718',\r\n    innerLittleShadows: 'inset 5px 5px 10px #b9b7af, inset -5px -5px 10px #ffffff',\r\n    progressBarColor: '#ffffff',\r\n    progressBarHoverColor: '#b9b7af',\r\n    default: true\r\n};\r\n\r\nexport type NeumorphColorsType = {\r\n    background: string,\r\n    concaveBackground: string,\r\n    shadows: string,\r\n    innerShadows: string,\r\n    littleShadows: string,\r\n    innerLittleShadows: string,\r\n    progressBarColor: string,\r\n    progressBarHoverColor: string,\r\n    color: string,\r\n    default?: boolean\r\n};","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst Background = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n   position: absolute;\r\n   z-index: 998;\r\n   background-color: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n   width: 300%;\r\n   transform-origin: 50% 0;\r\n   left: -150%;\r\n   transition: background-color 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n   box-shadow: ${props => props.$palette.default ? defaultPalette.shadows : props.$palette.shadows};\r\n`;\r\n\r\nconst InnerShadow = styled.div<{ $palette: NeumorphColorsType }>`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  width: 100%;\r\n  height: calc(100% - 10px);\r\n  box-shadow: ${props => props.$palette.default ? defaultPalette.innerShadows : props.$palette.innerShadows};\r\n`;\r\n\r\ntype PropsType = {\r\n    palette: NeumorphColorsType,\r\n    height:  SpringValue<number>,\r\n    rotateZ:  SpringValue<number>,\r\n    x: SpringValue<string>\r\n}\r\n\r\nconst RotatedBackground: React.FC<PropsType> = ({palette, height, rotateZ, x}) => {\r\n\r\n    return(\r\n        <Background $palette={palette} style={{height, rotateZ, x}}>\r\n            <InnerShadow $palette={palette}/>\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default React.memo(RotatedBackground, isEqual)","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\n\r\nconst WholeWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  font-family: NunitoSans-ExtraLight, sans-serif;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div<{$height: number}>`\r\n  position: absolute;\r\n  width: ${props => props.$height * 0.8}px;\r\n  height: ${props => props.$height * 0.8}px;\r\n  border-radius:30px;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\ntype PropsType = {\r\n    width: SpringValue<number>,\r\n    height: SpringValue<number>,\r\n    interfaceHeight: number,\r\n    x: SpringValue<string>\r\n}\r\n\r\nconst InterfaceWrapper: React.FC<PropsType> = ({width, height, children,\r\n                                               interfaceHeight, x}) => {\r\n\r\n    return(\r\n        <WholeWrapper style={{width, height, x}}>\r\n            <ButtonsWrapper $height={interfaceHeight}>\r\n                {children}\r\n            </ButtonsWrapper>\r\n        </WholeWrapper>\r\n    )\r\n}\r\n\r\nexport default InterfaceWrapper","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport {animated, SpringValue, useTransition} from \"react-spring\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst EditButtonWrapper = styled.div<{ $palette: NeumorphColorsType, $height: number }>`\r\n  position: relative;\r\n  z-index: 3;\r\n  width: ${props => props.$height * 0.8}px;\r\n  height: ${props => props.$height * 0.8}px;\r\n  border-radius: 30px;\r\n  box-shadow: ${props => props.$palette.default ? defaultPalette.shadows : props.$palette.shadows} ;\r\n  background: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n`;\r\n\r\nconst ProgressBackground = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  border-radius: 30px;\r\n  top: 0;\r\n  background-color: red;\r\n`;\r\n\r\nconst InnerBackground = styled.div<{ $palette: NeumorphColorsType, $cantBeHovered: boolean }>`\r\n  cursor: ${props => props.$cantBeHovered ? 'inherit' : 'pointer'};\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  position: absolute;\r\n  background-color: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.default ? defaultPalette.color : props.$palette.color};\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 30px;\r\n  &:before {\r\n    border-radius: 25px;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateY(-50%) translateX(-50%);\r\n    z-index: 1;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    box-shadow: ${props => props.$palette.innerShadows};\r\n    opacity: 0;\r\n    transition: opacity .3s linear;\r\n  }\r\n  ${props => !props.$cantBeHovered && `&:hover:before {opacity: 1}`}\r\n`;\r\n\r\n//calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));\r\nconst InnerEditButtonText = styled(animated.div)`\r\n  z-index: 12;\r\n  text-align: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  font-size: calc(20px + (35 - 20) * ((100vw - 300px) / (2000 - 300)));\r\n`;\r\n\r\nconst ProgressCounter = styled(animated.div)`\r\n  font-size: calc(12px + (25 - 12) * ((100vw - 300px) / (2000 - 300)));\r\n  text-align: center;\r\n  position: absolute;\r\n  bottom: 10%;\r\n  border-radius: 30px;\r\n`;\r\n\r\ntype PropsType = {\r\n    switchEditMode: () => void,\r\n    palette: NeumorphColorsType,\r\n    cantBeHovered: boolean,\r\n    actionMessage: string,\r\n    progressBarAnimation: { value: SpringValue<number>, height: SpringValue<string>, opacity: SpringValue<number> },\r\n    interfaceHeight: number\r\n}\r\n\r\nconst EditButton: React.FC<PropsType> = ({\r\n                                             switchEditMode, palette, cantBeHovered, actionMessage,\r\n                                             progressBarAnimation, interfaceHeight\r\n                                         }) => {\r\n\r\n    const textTransition = useTransition(actionMessage, {\r\n        from: {opacity: 1, y: '-100%'},\r\n        enter: {opacity: 1, y: '0%'},\r\n        leave: {opacity: 0, y: '100%'},\r\n    })\r\n\r\n    return (\r\n        <EditButtonWrapper onClick={switchEditMode} $palette={palette} $height={interfaceHeight}>\r\n            <InnerBackground $palette={palette}\r\n                             $cantBeHovered={cantBeHovered}>\r\n                <ProgressBackground style={{\r\n                    height: progressBarAnimation.height,\r\n                    opacity: progressBarAnimation.opacity\r\n                }}/>\r\n                <ProgressCounter style={{opacity: progressBarAnimation.opacity}}>\r\n                    {progressBarAnimation.value.to(value => value.toFixed(0) + ' %')}\r\n                </ProgressCounter>\r\n                {textTransition((style) =>\r\n                    <InnerEditButtonText style={{...style, translateY: '-50%'}}>\r\n                        {actionMessage}\r\n                    </InnerEditButtonText>)}\r\n            </InnerBackground>\r\n        </EditButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(EditButton, isEqual)","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nconst RightButton = styled.div<{ $palette: NeumorphColorsType, $editable: boolean, $height: number }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: ${props => props.$height * 0.5}px;\r\n  height: ${props => props.$height * 0.5}px;\r\n  border-radius: 30px;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? defaultPalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: ${props => props.$editable ? '150%' : '50%'};\r\n  transition: left 0.4s cubic-bezier(0.25, 0, 0, 1) 0.3s, background, color 0.4s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? defaultPalette.color : props.$palette.color};\r\n  };\r\n  &:before {\r\n    border-radius: 25px;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateY(-50%) translateX(-50%);\r\n    z-index: 1;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    box-shadow: ${props => props.$palette.innerLittleShadows};\r\n    opacity: 0;\r\n    transition: opacity .3s linear;\r\n  }\r\n  &:hover:before {opacity: 1}\r\n`;\r\n\r\nconst LeftButton = styled(RightButton)`\r\n  left: ${props => props.$editable ? '-50%' : '50%'};\r\n`;\r\n\r\nconst AdditionalButton = styled(RightButton)`\r\n  left: ${props => props.$editable ? '-150%' : '50%'};\r\n`;\r\n\r\nconst InnerSmallerButtonText = styled.div`\r\n  text-align: center;\r\n  font-size: calc(15px + (25 - 15) * ((100vw - 300px) / (2000 - 300)));\r\n`;\r\n\r\ntype PropsType = {\r\n    palette: NeumorphColorsType,\r\n    editable: boolean,\r\n    addTodoList: () => void,\r\n    rejectAllChanges: () => void,\r\n    interfaceHeight: number,\r\n    switchScrollableState: () => void,\r\n    scrollableState: boolean\r\n}\r\n\r\nconst OtherButtons: React.FC<PropsType> = ({palette, editable, switchScrollableState,\r\n                                               interfaceHeight, addTodoList, rejectAllChanges, scrollableState}) => {\r\n\r\n    return (\r\n        <>\r\n            <LeftButton onClick={addTodoList} $palette={palette} $editable={editable} $height={interfaceHeight}>\r\n                <InnerSmallerButtonText>\r\n                    Add list\r\n                </InnerSmallerButtonText>\r\n            </LeftButton>\r\n            <RightButton onClick={rejectAllChanges} $palette={palette} $editable={editable} $height={interfaceHeight}>\r\n                <InnerSmallerButtonText>\r\n                    remove changes\r\n                </InnerSmallerButtonText>\r\n            </RightButton>\r\n            {isMobile &&\r\n                <AdditionalButton onClick={switchScrollableState} $palette={palette} $editable={editable} $height={interfaceHeight}>\r\n                    {scrollableState ? 'Drug' : 'Scroll'}\r\n                </AdditionalButton>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(OtherButtons, isEqual)","import axios from \"axios\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport axiosRetry from \"axios-retry\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'\r\n    },\r\n});\r\n/*axiosRetry(instance, { retries: 4 });*/\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/auth\",\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'\r\n    }\r\n});\r\n/*axiosRetry(loginInstance, { retries: 4 });*/\r\n\r\ntype CommonResponseType<T> = {\r\n    resultCode: number;\r\n    messages: string[];\r\n    data: T\r\n};\r\ntype RestoreTasksResponseType = {\r\n    items: TaskType[];\r\n    totalCount: number;\r\n    error?: string\r\n};\r\ntype GetMeType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n};\r\n\r\nexport const api = {\r\n    getAuthState: () => {\r\n        return loginInstance.get<CommonResponseType<GetMeType>>('/me').then(res => res.data)\r\n    },\r\n    logIn: () => {\r\n        const requestObject = {email: \"npikolist@gmail.com\", password: \"512347\", rememberMe: false};\r\n        return loginInstance.post<CommonResponseType<{ userId: string }>>('/login', requestObject)\r\n            .then(res => res.data)\r\n    },\r\n    restoreState: () => {\r\n        return instance.get<Array<TodoListType>>('').then(res => res.data)\r\n    },\r\n    addTodoList: (title: string) => {\r\n        return instance.post<CommonResponseType<{ item: TodoListType }>>(\"\", {title}).then(res => res.data)\r\n    },\r\n    restoreTasks: (todoListId: string) => {\r\n        return instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`).then(res => res.data)\r\n    },\r\n    addTask: (title: string, todoListId: string) => {\r\n        return instance.post<CommonResponseType<{ item: TaskType }>>(`/${todoListId}/tasks`, {title})\r\n            .then(res => res.data)\r\n    },\r\n    changeTask: (todoListId: string, taskId: string, newTask: TaskType) => {\r\n        return instance.put<CommonResponseType<{ item: TaskType }>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n            .then(res => res.data)\r\n    },\r\n    deleteTodoList: (todoListId: string) => {\r\n        return instance.delete<CommonResponseType<{}>>(`/${todoListId}`).then(res => res.data)\r\n    },\r\n    deleteTask: (todoListId: string, taskId: string) => {\r\n        return instance.delete<CommonResponseType<{ item: TaskType }>>(`/${todoListId}/tasks/${taskId}`)\r\n            .then(res => res.data)\r\n    },\r\n    changeTodoListTitle: (todoListId: string, newTitle: string) => {\r\n        return instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n            .then(res => res.data)\r\n    },\r\n    swapTasks: (todoListId: string, swappedTask: string, beforeSwappedTask: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`, {putAfterItemId: beforeSwappedTask})\r\n            .then(res => res.data)\r\n    },\r\n    swapTodoList: (swappedList: string, beforeSwappedList: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`, {putAfterItemId: beforeSwappedList})\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","export const movePos  = (array: Array<any>, moveIndex: number, toIndex: number) => {\r\n    /* #move - Moves an array item from one position in an array to another.\r\n\r\n       Note: This is a pure function so a new array will be returned, instead\r\n       of altering the array argument.\r\n\r\n      Arguments:\r\n      1. array     (String) : Array in which to move an item.         (required)\r\n      2. moveIndex (Object) : The index of the item to move.          (required)\r\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\r\n    */\r\n    let item = array[moveIndex];\r\n    let length = array.length;\r\n    let diff = moveIndex - toIndex;\r\n\r\n    if (diff > 0) {\r\n        // move left\r\n        return [\r\n            ...array.slice(0, toIndex),\r\n            item,\r\n            ...array.slice(toIndex, moveIndex),\r\n            ...array.slice(moveIndex + 1, length)\r\n        ];\r\n    } else if (diff < 0) {\r\n        // move right\r\n        return [\r\n            ...array.slice(0, moveIndex),\r\n            ...array.slice(moveIndex + 1, toIndex + 1),\r\n            item,\r\n            ...array.slice(toIndex + 1, length)\r\n        ];\r\n    }\r\n    return array;\r\n}","import {InferActionTypes} from \"./store\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../Components/neumorphColors\";\r\n\r\ntype InitialStateType = {\r\n    focusedStatus: boolean,\r\n    currentPaletteIndex: NeumorphColorsType,\r\n    initialLoadingState: boolean,\r\n    fetchingState: null | string,\r\n    height: number,\r\n    width: number,\r\n    interfaceHeight: number,\r\n    allTasks: number,\r\n    completedTasks: number,\r\n    closeLookState: boolean,\r\n    scrollableState: boolean,\r\n    animationInProgress: boolean\r\n};\r\n\r\nconst initialState = {\r\n    focusedStatus: false,\r\n    currentPaletteIndex: defaultPalette,\r\n    initialLoadingState: true,\r\n    fetchingState: null,\r\n    height: 0,\r\n    width: 0,\r\n    interfaceHeight: 0,\r\n    allTasks: 0,\r\n    completedTasks: 0,\r\n    closeLookState: false,\r\n    scrollableState: true,\r\n    animationInProgress: false\r\n};\r\n\r\nconst interfaceReducer = (state: InitialStateType = initialState, action: InterfaceActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"interfaceReducer/SET_FOCUSED_STATUS\":\r\n            return {\r\n                ...state,\r\n                focusedStatus: action.status\r\n            };\r\n        case \"interfaceReducer/SET_CURRENT_PALETTE_INDEX\":\r\n            return {\r\n                ...state,\r\n                currentPaletteIndex: action.palette\r\n            }\r\n        case \"interfaceReducer/COMPLETE_INITIAL_LOADING_STATE\":\r\n            return {\r\n                ...state,\r\n                initialLoadingState: false\r\n            }\r\n        case \"interfaceReducer/SET_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case \"interfaceReducer/SET_WIDTH\":\r\n            return {\r\n                ...state,\r\n                width: action.width\r\n            }\r\n        case \"interfaceReducer/SET_INTERFACE_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                interfaceHeight: action.height\r\n            }\r\n        case \"interfaceReducer/SET_ALL_TASKS\":\r\n            return {\r\n                ...state,\r\n                allTasks: action.tasks\r\n            }\r\n        case \"interfaceReducer/SET_COMPLETED_TASK\":\r\n            return {\r\n                ...state,\r\n                completedTasks: action.restore ? 0 : state.completedTasks+1\r\n            }\r\n        case \"interfaceReducer/SET_CLOSE_LOOK_STATE\":\r\n            return {\r\n                ...state,\r\n                closeLookState: action.state,\r\n                animationInProgress: action.state\r\n            }\r\n        case \"interfaceReducer/SET_SCROLLABLE_STATE\":\r\n            return {\r\n                ...state,\r\n                scrollableState: action.state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const interfaceActions = {\r\n    setFocusedStatus: (status: boolean) => ({type: 'interfaceReducer/SET_FOCUSED_STATUS', status} as const),\r\n    setPalette: (palette: NeumorphColorsType) => ({type: 'interfaceReducer/SET_CURRENT_PALETTE_INDEX', palette} as const),\r\n    completeInitialLoadingState: () => ({type: 'interfaceReducer/COMPLETE_INITIAL_LOADING_STATE'} as const),\r\n    setHeight: (height: number) => ({type: 'interfaceReducer/SET_HEIGHT', height} as const),\r\n    setWidth: (width: number) => ({type: 'interfaceReducer/SET_WIDTH', width} as const),\r\n    setInterfaceHeight: (height: number) => ({type: 'interfaceReducer/SET_INTERFACE_HEIGHT', height} as const),\r\n    setAllTasks: (tasks: number) => ({type: 'interfaceReducer/SET_ALL_TASKS', tasks} as const),\r\n    setCompletedTask: (restore: boolean) => ({type: 'interfaceReducer/SET_COMPLETED_TASK', restore} as const),\r\n    setFetchingState: (state: string | null) => ({type: 'interfaceReducer/SET_FETCHING_STATE', state} as const),\r\n    setCloseLookState: (state: boolean) => ({type: 'interfaceReducer/SET_CLOSE_LOOK_STATE', state} as const),\r\n    setScrollableState: (state: boolean) => ({type: 'interfaceReducer/SET_SCROLLABLE_STATE', state} as const),\r\n}\r\n\r\ntype InterfaceActionsTypes = InferActionTypes<typeof interfaceActions>;\r\n\r\nexport default interfaceReducer","import {api} from \"../api/api\";\r\nimport {TaskType, TodoListType} from \"../api/entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport cloneDeep from \"lodash-es/cloneDeep\";\r\nimport {movePos} from \"../hooks/movePos\";\r\nimport {interfaceActions} from \"./interfaceReducer\";\r\n\r\ntype InitialStateType = {\r\n    todoLists: Array<TodoListType>,\r\n    deepCopy: Array<TodoListType>,\r\n    editable: boolean,\r\n    listsOrder: Array<string>,\r\n    tasksOrder: Array<{ todoListId: string, newTasksOrder: Array<string> }>,\r\n    newListsId: Array<{ oldId: string, newId: string }>,\r\n    newTasksId: Array<{ oldId: string, newId: string, todoListId: string }>,\r\n};\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    deepCopy: [],\r\n    editable: false,\r\n    listsOrder: [],\r\n    tasksOrder: [],\r\n    newListsId: [],\r\n    newTasksId: [],\r\n};\r\n\r\nconst stateReducer = (state: InitialStateType = initialState, action: StateActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'stateReducer/SET_TODO_LISTS':\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        case 'stateReducer/SET_TASKS':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: action.tasks}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/ADD_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [action.newTodoList, ...state.todoLists],\r\n            };\r\n        case 'stateReducer/ADD_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: [action.newTask, ...list.tasks]}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list, tasks: list.tasks.map(task => {\r\n                                if (task.id === action.task.id) {\r\n                                    return {...action.task}\r\n                                } else return task;\r\n                            })\r\n                        }\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/DELETE_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(list => list.id !== action.todoListId),\r\n            };\r\n        case 'stateReducer/DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: list.tasks.filter(task => task.id !== action.taskId)}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/CHANGE_TODO_LIST_TITLE':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, title: action.todoListTitle}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case \"stateReducer/SWAP_TODO_LISTS\":\r\n            return {\r\n                ...state,\r\n                listsOrder: action.newListsOrder\r\n            }\r\n        case \"stateReducer/SWAP_TASKS\":\r\n            const index = state.tasksOrder.findIndex(item => item.todoListId === action.todoListId);\r\n            const newSwappedTasks = index !== -1 ? state.tasksOrder.map((item, i) => {\r\n                if (i === index) return {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}\r\n                return item\r\n            }) : [...state.tasksOrder, {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}]\r\n            return {\r\n                ...state,\r\n                tasksOrder: newSwappedTasks\r\n            }\r\n        case \"stateReducer/ENABLE_EDIT_MODE\": //глянуть\r\n            return {\r\n                ...state,\r\n                editable: true,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n                deepCopy: cloneDeep(state.todoLists)\r\n            };\r\n        case \"stateReducer/DISABLE_EDIT_MODE\":\r\n            return {\r\n                ...state,\r\n                editable: false\r\n            }\r\n        case \"stateReducer/SET_NEW_ID\":\r\n            return {\r\n                ...state,\r\n                todoLists: action.newTodoLists\r\n            };\r\n        case \"stateReducer/REJECT_ALL_CHANGES\":\r\n            return {\r\n                ...state,\r\n                todoLists: state.deepCopy,\r\n                editable: false,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const stateActions = {\r\n    addTodoList: (newTodoList: TodoListType) => ({type: 'stateReducer/ADD_TODO_LIST', newTodoList} as const),\r\n    addTask: (newTask: TaskType, todoListId: string) => ({type: 'stateReducer/ADD_TASK', newTask, todoListId} as const),\r\n    changeTask: (task: TaskType) => ({type: 'stateReducer/CHANGE_TASK', task} as const),\r\n    deleteTodoList: (todoListId: string) => ({type: 'stateReducer/DELETE_TODO_LIST', todoListId} as const),\r\n    deleteTask: (todoListId: string, taskId: string) => ({type: 'stateReducer/DELETE_TASK', taskId, todoListId} as const),\r\n    restoreTodoList: (todoLists: TodoListType[]) => ({type: 'stateReducer/SET_TODO_LISTS', todoLists} as const),\r\n    restoreTasks: (tasks: TaskType[], todoListId: string) => ({\r\n        type: 'stateReducer/SET_TASKS',\r\n        tasks,\r\n        todoListId\r\n    } as const),\r\n    changeTodoListTitle: (todoListId: string, todoListTitle: string) => ({\r\n        type: 'stateReducer/CHANGE_TODO_LIST_TITLE',\r\n        todoListId,\r\n        todoListTitle\r\n    } as const),\r\n    enableEditMode: () => ({type: 'stateReducer/ENABLE_EDIT_MODE'} as const),\r\n    disableEditMode: () => ({type: 'stateReducer/DISABLE_EDIT_MODE'} as const),\r\n    swapTasks: (todoListId: string, newTasksOrder: Array<string>) => ({\r\n        type: 'stateReducer/SWAP_TASKS', todoListId, newTasksOrder\r\n    } as const),\r\n    swapTodoLists: (newListsOrder: Array<string>) => ({type: 'stateReducer/SWAP_TODO_LISTS', newListsOrder} as const),\r\n    setTodoLists: (newTodoLists: Array<TodoListType>) => ({type: 'stateReducer/SET_NEW_ID', newTodoLists} as const),\r\n    rejectAllChanges: () => ({type: 'stateReducer/REJECT_ALL_CHANGES'} as const),\r\n}\r\n\r\ntype StateActionsType = InferActionTypes<typeof stateActions>;\r\ntype DispatchedActionsTypes = InferActionTypes<typeof stateActions & typeof interfaceActions>;\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, DispatchedActionsTypes>;\r\ntype ThunkActionType = ThunkDispatch<AppStateType, unknown, DispatchedActionsTypes>;\r\n\r\nexport const loadTodoListsTC = (): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreState().then(data => {\r\n        dispatch(stateActions.restoreTodoList(data))\r\n    })\r\n};\r\nexport const addTodoListTC = (title: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.addTodoList(title).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.addTodoList(data.data.item))\r\n    })\r\n};\r\nexport const changeTaskTC = (todoListId: string, taskId: string, newTask: TaskType): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTask(todoListId, taskId, newTask).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.changeTask(data.data.item))\r\n    })\r\n};\r\nexport const deleteTaskTC = (todoListId: string, taskId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTask(todoListId, taskId).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.deleteTask(todoListId, taskId))\r\n    })\r\n};\r\nexport const changeTodoListTitleTC = (todoListId: string, todoListTitle: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTodoListTitle(todoListId, todoListTitle).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.changeTodoListTitle(todoListId, todoListTitle))\r\n    })\r\n};\r\n\r\n\r\n\r\nexport const initialization = (): ThunkType => async (dispatch: ThunkActionType) => {\r\n    const authState = await api.getAuthState();\r\n    if (!authState.data.id) {\r\n        await api.logIn()\r\n    }\r\n    dispatch(getStateFromServer(true));\r\n};\r\n\r\nconst getStateFromServer = (initial: boolean): ThunkType => async (dispatch: ThunkActionType) => {\r\n    if (!initial) dispatch(interfaceActions.setFetchingState('fetching new data'));\r\n    const lists = await api.restoreState();\r\n    let listsWithTasks = lists;\r\n    if (lists.length !== 0) {\r\n        dispatch(interfaceActions.setAllTasks(lists.length));\r\n        dispatch(interfaceActions.setCompletedTask(true))\r\n        const getTasks = lists.map(async (item) => {\r\n            return await api.restoreTasks(item.id).then(data => {\r\n                const index = listsWithTasks.findIndex(list => item.id === list.id);\r\n                listsWithTasks[index] = {...item, tasks: data.items};\r\n                dispatch(interfaceActions.setCompletedTask(false))\r\n            })\r\n        });\r\n        await Promise.all(getTasks)\r\n    }\r\n    dispatch(stateActions.setTodoLists(listsWithTasks));\r\n    if (initial) setTimeout(() => dispatch(interfaceActions.completeInitialLoadingState()), 600);\r\n};\r\n\r\nexport const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n\r\n        dispatch(stateActions.disableEditMode());\r\n        dispatch(interfaceActions.setFetchingState('sending data'))\r\n        /*dispatch(actions.setPendingState(true))*/\r\n\r\n        const oldTodoLists = getState().todoList.deepCopy;\r\n        const newTodoLists = getState().todoList.todoLists;\r\n        let listsOrder = getState().todoList.listsOrder;\r\n        let tasksOrder = getState().todoList.tasksOrder;\r\n\r\n        const newListsId: Array<{ oldId: string, newId: string }> = [];\r\n        const newTasksId: Array<{ oldId: string, newId: string, todoListId: string }> = [];\r\n        let todoListsWithNewId: Array<TodoListType> = [];\r\n\r\n        //added items\r\n        const addedLists = newTodoLists.filter(list => oldTodoLists.findIndex(oldList => oldList.id === list.id) === -1);\r\n        const deletedLists = oldTodoLists.filter(list => newTodoLists.findIndex(newList => newList.id === list.id) === -1);\r\n        const editedLists: Array<TodoListType> = []\r\n        newTodoLists.forEach(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList && list.title !== oldList.title) {\r\n                editedLists.push(list)\r\n            }\r\n        })\r\n\r\n        let addedTasks: Array<TaskType> = [];\r\n        const editedTasks: Array<TaskType> = [];\r\n        newTodoLists.forEach(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList) {\r\n                list.tasks.forEach(task => {\r\n                    const oldTask = oldList.tasks.find(oldTask => oldTask.id === task.id)\r\n                    if (!oldTask) {\r\n                        addedTasks.push(task);\r\n                        return\r\n                    }\r\n                    if (oldTask && oldTask.title !== task.title) {\r\n                        editedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n            if (!oldList && list.tasks.length !== 0) {\r\n                list.tasks.forEach(task => addedTasks.push(task))\r\n            }\r\n        })\r\n        const deletedTasks: Array<TaskType> = [];\r\n        oldTodoLists.forEach(list => {\r\n            const newList = newTodoLists.find(newList => newList.id === list.id);\r\n            if (newList) {\r\n                list.tasks.forEach(task => {\r\n                    const newTask = newList.tasks.find(newTask => newTask.id === task.id)\r\n                    if (!newTask) {\r\n                        deletedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        //progress bar logic\r\n        let allTasks = 0;\r\n        if (deletedLists.length !== 0) allTasks = allTasks + deletedLists.length;\r\n        if (deletedTasks.length !== 0) allTasks = allTasks + deletedTasks.length;\r\n        if (addedLists.length !== 0) allTasks = allTasks + addedLists.length;\r\n        if (addedTasks.length !== 0) allTasks = allTasks + addedTasks.length;\r\n        if (editedLists.length !== 0) allTasks = allTasks + editedLists.length;\r\n        if (editedTasks.length !== 0) allTasks = allTasks + editedTasks.length;\r\n        dispatch(interfaceActions.setAllTasks(allTasks));\r\n\r\n        //queries\r\n        dispatch(interfaceActions.setCompletedTask(true))\r\n        if (deletedLists.length !== 0) {\r\n            deletedLists.forEach(list => {\r\n                api.deleteTodoList(list.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.forEach(task => {\r\n                api.deleteTask(task.todoListId, task.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedLists.length !== 0) {\r\n            editedLists.forEach(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedTasks.length !== 0) {\r\n            editedTasks.forEach(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n\r\n        const createAndChangeIdOfTasksInOrderList = async () => {\r\n            if (addedTasks.length !== 0) {\r\n                const tasksPromises = addedTasks.map(async (task) => {\r\n                    return await api.addTask(task.title, task.todoListId).then(data => {\r\n                        if (data.resultCode === 0) newTasksId.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            todoListId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                    });\r\n                })\r\n                await Promise.all(tasksPromises);\r\n                if (tasksOrder.length !== 0) {\r\n                    tasksOrder = tasksOrder.map(item => {\r\n                        const newList = newListsId.find(list => list.oldId === item.todoListId)\r\n                        const tasksWithNewId = item.newTasksOrder.map(taskId => {\r\n                            const newTask = newTasksId.find(newTask => newTask.oldId === taskId);\r\n                            if (newTask) return newTask.newId;\r\n                            return taskId\r\n                        })\r\n                        return {todoListId: newList ? newList.newId : item.todoListId, newTasksOrder: tasksWithNewId}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addedLists.length !== 0) {\r\n            const listPromises = addedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        newListsId.push({newId: data.data.item.id, oldId: list.id});\r\n                        dispatch(interfaceActions.setCompletedTask(false))\r\n                    }\r\n                })\r\n\r\n            })\r\n            await Promise.all(listPromises);\r\n            if (addedTasks.length !== 0) {\r\n                addedTasks = addedTasks.map(task => {\r\n                    const newListId = newListsId.find(list => list.oldId === task.todoListId);\r\n                    if (newListId) return {...task, todoListId: newListId.newId}\r\n                    return task\r\n                })\r\n            }\r\n            if (listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.map(item => {\r\n                    const newList = newListsId.find(list => list.oldId === item)\r\n                    if (newList) return newList.newId;\r\n                    return item\r\n                })\r\n            }\r\n            await createAndChangeIdOfTasksInOrderList()\r\n        } else await createAndChangeIdOfTasksInOrderList();\r\n\r\n        //swap progress\r\n        dispatch(interfaceActions.setFetchingState('swap items'));\r\n\r\n        //changing id\r\n        if (newListsId.length !== 0) {\r\n            todoListsWithNewId = newTodoLists.map(list => {\r\n                const newList = newListsId.find(item => item.oldId === list.id)\r\n                if (newList) return {...list, id: newList.newId};\r\n                return list\r\n            })\r\n        } else todoListsWithNewId = newTodoLists;\r\n        if (newTasksId.length !== 0) {\r\n            todoListsWithNewId = todoListsWithNewId.map(list => {\r\n                const tasks = list.tasks.map(task => {\r\n                    const newTask = newTasksId.find(item => item.oldId === task.id)\r\n                    if (newTask) return {...task, id: newTask.newId}\r\n                    return task\r\n                })\r\n                return {...list, tasks}\r\n            })\r\n        }\r\n\r\n        //swap items\r\n        if (listsOrder.length !== 0 || addedLists.length > 1) {\r\n            if (deletedLists.length !== 0 && listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.filter(list => todoListsWithNewId.findIndex(item => item.id === list) !== -1)\r\n            }\r\n            let currentOrder = addedLists.length > 1 ? await api.restoreState().then(data => data.map(item => item.id))\r\n                : todoListsWithNewId.map(list => list.id);\r\n            const swapOrder: Array<{ swappedId: string, beforeSwappedId: string | null }> = [];\r\n            const order = listsOrder.length !== 0 ? listsOrder : todoListsWithNewId.map(list => list.id);\r\n            order.forEach((thisListPosId, index) => {\r\n                if (thisListPosId !== currentOrder[index]) {\r\n                    if (index === 0) swapOrder.push({swappedId: thisListPosId, beforeSwappedId: null})\r\n                    else swapOrder.push({swappedId: thisListPosId, beforeSwappedId: listsOrder[index - 1]});\r\n                    const oldIndex = currentOrder.findIndex(listId => listId === thisListPosId)\r\n                    currentOrder = movePos(currentOrder, oldIndex, index)\r\n                }\r\n            });\r\n            swapOrder.forEach(item => {\r\n                api.swapTodoList(item.swappedId, item.beforeSwappedId)/*.then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });*/\r\n            })\r\n        }\r\n\r\n        if (tasksOrder.length !== 0 || addedTasks.length > 1) {\r\n            if (deletedTasks.length !== 0 && tasksOrder.length !== 0) {\r\n                tasksOrder = tasksOrder.map(item => {\r\n                    const currentList = todoListsWithNewId.find(list => list.id === item.todoListId)\r\n                    if (currentList) {\r\n                        const newTasksOrder = item.newTasksOrder.filter(taskId => currentList.tasks.findIndex(task =>\r\n                            task.id === taskId) !== -1)\r\n                        return {...item, newTasksOrder}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            let addedTasksInLists: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            const currentListsStateOnServer = newTasksId.length > 1 ? await (async () => {\r\n                newTasksId.forEach(task => {\r\n                    const list = addedTasksInLists.length !== 0 ?\r\n                        addedTasksInLists.find(list => list.todoListId === task.todoListId) : undefined;\r\n                    if (list) {\r\n                        const index = addedTasksInLists.findIndex(list => list.todoListId === task.todoListId);\r\n                        addedTasksInLists[index] = {...list, tasks: [...list.tasks, task.newId]}\r\n                    } else addedTasksInLists.push({todoListId: task.todoListId, tasks: [task.newId]})\r\n                })\r\n                let listsToUpdate: Array<string> = [];\r\n                addedTasksInLists.forEach(item => {\r\n                    if (item.tasks.length > 1) listsToUpdate.push(item.todoListId)\r\n                })\r\n                if (listsToUpdate.length !== 0) {\r\n                    let listsOnServer: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n                    const getListOrder = listsToUpdate.map(async (item) => {\r\n                        return await api.restoreTasks(item).then(res => {\r\n                            const tasks = res.items.map(item => item.id);\r\n                            listsOnServer.push({todoListId: item, tasks})\r\n                        });\r\n                    });\r\n                    await Promise.all(getListOrder);\r\n                    return listsOnServer\r\n                } else return undefined\r\n            })() : undefined;\r\n\r\n            /*console.log(currentListsStateOnServer,\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .Tasks.map(item => item.id),\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .Tasks.map(item => item.title))*/\r\n\r\n            let requiredOrder: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            if (currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                currentListsStateOnServer.forEach(item => {\r\n                    const isItemInOrder = tasksOrder.find(currItem =>\r\n                        currItem.todoListId === item.todoListId);\r\n                    if (isItemInOrder) return;\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n                tasksOrder.forEach(item => requiredOrder.push({todoListId: item.todoListId, tasks: item.newTasksOrder}))\r\n            } else if (!currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                requiredOrder = tasksOrder.map(item => ({todoListId: item.todoListId, tasks: item.newTasksOrder}));\r\n            } else if (currentListsStateOnServer && tasksOrder.length === 0) {\r\n                currentListsStateOnServer.forEach(item => {\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n            }\r\n\r\n            const currentOrder = requiredOrder.map(item => {\r\n                const itemWithUpdatedState = currentListsStateOnServer ? currentListsStateOnServer\r\n                    .find(list => list.todoListId === item.todoListId) : undefined;\r\n                const curItem = todoListsWithNewId.find(list => list.id === item.todoListId)!;\r\n                if (itemWithUpdatedState) return itemWithUpdatedState;\r\n                return {todoListId: curItem.id, tasks: curItem.tasks.map(task => task.id)}\r\n            });\r\n\r\n            const swapOrder: Array<{ todoListId: string, swappedId: string, beforeSwappedId: string | null }> = [];\r\n            requiredOrder.forEach(newOrder => {\r\n                let currOrder = currentOrder.find(item => item.todoListId === newOrder.todoListId)!.tasks;\r\n                newOrder.tasks.forEach((newTaskPosId, index) => {\r\n                    if (newTaskPosId !== currOrder[index]) {\r\n                        if (index === 0) swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId, beforeSwappedId: null\r\n                        });\r\n                        else swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId,\r\n                            beforeSwappedId: currOrder[index - 1]\r\n                        });\r\n                        const oldIndex = currOrder.findIndex(taskId => taskId === newTaskPosId)\r\n                        currOrder = movePos(currOrder, oldIndex, index)\r\n                    }\r\n                })\r\n            });\r\n            const groupedSwapOrder: Array<{todoListId: string, swapOrder: Array<{swappedId: string, beforeSwappedId: string | null}>}> = [];\r\n            swapOrder.forEach(task => {\r\n                const currentList = groupedSwapOrder.find(item => item.todoListId === task.todoListId);\r\n                if (currentList) groupedSwapOrder.map(item => item.todoListId === currentList.todoListId ?\r\n                    item.swapOrder.push({swappedId: task.swappedId, beforeSwappedId: task.todoListId}) : item\r\n                );\r\n                groupedSwapOrder.push({\r\n                    todoListId: task.todoListId,\r\n                    swapOrder: [{swappedId: task.swappedId, beforeSwappedId: task.beforeSwappedId}]\r\n                })\r\n            });\r\n            const swapOrderPending = groupedSwapOrder.map(async (item) => {\r\n                const consistentSwapOrder = item.swapOrder\r\n                for (let order of consistentSwapOrder) {\r\n                    await api.swapTasks(item.todoListId, order.swappedId, order.beforeSwappedId)/*.then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })*/\r\n                }\r\n            });\r\n            await Promise.all(swapOrderPending)\r\n        }\r\n        dispatch(interfaceActions.setFetchingState(null));\r\n\r\n\r\n        if (addedLists.length !== 0 || addedTasks.length !== 0) {\r\n            dispatch(getStateFromServer(false))\r\n        }\r\n    };\r\n\r\nexport default stateReducer","import React, {useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useSpring} from \"react-spring\";\r\nimport RotatedBackground from \"./RotatedBackground\";\r\nimport InterfaceWrapper from \"./InterfaceWrapper\";\r\nimport EditButton from \"./EditButton\";\r\nimport OtherButtons from \"./OtherButtons\";\r\nimport {stateActions, submitAllChanges} from \"../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\n\r\n\r\nconst MainInterfaceContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const currentPalette = useSelector((state: AppStateType) => state.interface.currentPaletteIndex, shallowEqual);\r\n    const initialLoading = useSelector((state: AppStateType) => state.interface.initialLoadingState, shallowEqual);\r\n    const allTasks = useSelector((state: AppStateType) => state.interface.allTasks, shallowEqual);\r\n    const completedTasks = useSelector((state: AppStateType) => state.interface.completedTasks, shallowEqual);\r\n    const fetchingState = useSelector((state: AppStateType) => state.interface.fetchingState, shallowEqual);\r\n    const closeLook = useSelector((state: AppStateType) => state.interface.closeLookState, shallowEqual);\r\n    const interfaceHeight = useSelector((state: AppStateType) => state.interface.interfaceHeight, shallowEqual);\r\n    const width = useSelector((state: AppStateType) => state.interface.width, shallowEqual);\r\n    const scrollableState = useSelector((state: AppStateType) => state.interface.scrollableState, shallowEqual);\r\n\r\n    const [buttonsWrapperHeight, setButtonsHeight] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const getHeight = (getButtonHeight: boolean) => {\r\n            if (!getButtonHeight) return editable ? (window.innerHeight * 0.17 > 230 ? 230 :\r\n                window.innerHeight * 0.17 < 150 ? 150 : window.innerHeight * 0.17) :\r\n                (Math.sqrt((window.innerHeight * 0.23) ** 2 + (window.innerWidth * 0.23) ** 2) > 300 ? 300 :\r\n                    Math.sqrt((window.innerHeight * 0.23) ** 2 + (window.innerWidth * 0.23) ** 2));\r\n            return window.innerHeight * 0.17 > 230 ? 230 :\r\n                window.innerHeight * 0.17 < 150 ? 150 : window.innerHeight * 0.17\r\n        }\r\n        if (isMounted) {\r\n            const height = getHeight(false);\r\n            dispatch(interfaceActions.setInterfaceHeight(height));\r\n            const buttonHeight = getHeight(true);\r\n            setButtonsHeight(buttonHeight);\r\n        }\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => {\r\n                    const newHeight = getHeight(false);\r\n                    dispatch(interfaceActions.setInterfaceHeight(newHeight));\r\n                    const newButtonHeight = getHeight(true);\r\n                    setButtonsHeight(newButtonHeight);\r\n                }, 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, [editable, dispatch]);\r\n\r\n    const addTodoList = useCallback(() => {\r\n        const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        const newList = {\r\n            id,\r\n            title: '',\r\n            tasks: []\r\n        }\r\n        dispatch(stateActions.addTodoList(newList));\r\n    }, [dispatch]);\r\n\r\n    const rejectAllChanges = useCallback(() => {\r\n        dispatch(stateActions.rejectAllChanges())\r\n    }, [dispatch]);\r\n\r\n    const switchScrollableState = useCallback(() => {\r\n        dispatch(interfaceActions.setScrollableState(!scrollableState))\r\n    }, [scrollableState, dispatch]);\r\n\r\n    const switchEditMode = useCallback(() => {\r\n        if (!editable) dispatch(stateActions.enableEditMode());\r\n        if (editable) dispatch(submitAllChanges());\r\n    }, [editable, dispatch]);\r\n\r\n    //animation logic\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n        backgroundHeight: Math.sqrt(window.innerHeight ** 2 + window.innerWidth ** 2),\r\n        rotateZ: -35,\r\n        x: '0vw',\r\n    }));\r\n\r\n    const [progressBarAnimation, setProgressBar] = useSpring(() => ({\r\n        value: 0,\r\n        height: '0%',\r\n        opacity: 1\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (editable) setSpring({width: window.innerWidth})\r\n    }, [width, setSpring, editable]);\r\n\r\n    useEffect(() => {\r\n        setProgressBar(() => {\r\n            if (completedTasks / allTasks !== 1) return {\r\n                value: isNaN(completedTasks / allTasks * 100) ? 0 : completedTasks / allTasks * 100,\r\n                height: `${completedTasks / allTasks * 100}%`,\r\n            };\r\n            else return {\r\n                to: async animate => {\r\n                    await animate({\r\n                        value: isNaN(completedTasks / allTasks * 100) ? 0 : completedTasks / allTasks * 100,\r\n                        height: `${completedTasks / allTasks * 100}%`});\r\n                    await animate({opacity: 0})\r\n                }\r\n            }\r\n        })\r\n    }, [allTasks, completedTasks, setProgressBar]);\r\n\r\n    useEffect(() => {\r\n        if (!initialLoading && !editable && !closeLook) {\r\n            setSpring({\r\n                height: interfaceHeight,\r\n                width: buttonsWrapperHeight,\r\n                backgroundHeight: interfaceHeight,\r\n                rotateZ: -35,\r\n                x: '0vw',\r\n                delay: (prop) => prop === 'rotateZ' ? 300 : 0,\r\n                config: {friction: 50}\r\n            })\r\n        } else if (editable) {\r\n            setSpring({\r\n                backgroundHeight: interfaceHeight,\r\n                height: interfaceHeight,\r\n                width: window.innerWidth,\r\n                rotateZ: 0,\r\n                delay: (prop) => prop === 'width' ? 300 : 0\r\n            })\r\n        } else if (closeLook) {\r\n            setSpring({\r\n                x: '-100vw'\r\n            })\r\n        }\r\n    }, [editable, initialLoading, fetchingState, closeLook, interfaceHeight, setSpring, buttonsWrapperHeight]);\r\n\r\n    const actionMessage = useMemo(() =>\r\n            initialLoading ? 'Loading' : editable ? 'Submit' : fetchingState !== null ? fetchingState : 'Edit'\r\n        , [editable, fetchingState, initialLoading]);\r\n\r\n    return (\r\n        <>\r\n            <RotatedBackground palette={currentPalette} height={spring.backgroundHeight} rotateZ={spring.rotateZ} x={spring.x}/>\r\n            <InterfaceWrapper height={spring.height} width={spring.width} interfaceHeight={buttonsWrapperHeight} x={spring.x}>\r\n                <EditButton actionMessage={actionMessage} interfaceHeight={buttonsWrapperHeight}\r\n                            cantBeHovered={initialLoading || !!fetchingState}\r\n                            switchEditMode={switchEditMode} palette={currentPalette}\r\n                            progressBarAnimation={progressBarAnimation}/>\r\n                <OtherButtons palette={currentPalette} editable={editable} addTodoList={addTodoList} switchScrollableState={switchScrollableState}\r\n                              rejectAllChanges={rejectAllChanges} interfaceHeight={buttonsWrapperHeight} scrollableState={scrollableState}/>\r\n            </InterfaceWrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MainInterfaceContainer","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../../neumorphColors\";\r\nimport {isMobile} from \"react-device-detect\";\r\nimport {ReactEventHandlers} from \"react-use-gesture/dist/types\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst ScrollBarWrapper = styled(animated.div)<{ $palette: NeumorphColorsType, $visible: boolean, $editable: boolean, $interfaceHeight: number }>`\r\n  position: absolute;\r\n  width: 30px;\r\n  border-radius: 10px;\r\n  height: ${props => props.$editable ? window.innerHeight - props.$interfaceHeight : window.innerHeight}px;\r\n  top: ${props => props.$editable ? props.$interfaceHeight : 0}px;\r\n  right: ${props => props.$visible ? 0 : -50}px;\r\n  overflow: hidden;\r\n  transition: .6s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.progressBarColor};\r\n`;\r\n\r\nconst ScrollBarThing = styled(animated.div)<{ $palette: NeumorphColorsType, $height: number, $drugged: boolean }>`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: ${props => props.$height}%;\r\n  border-radius: 10px;\r\n  transition: background 0.3s cubic-bezier(0.25, 0, 0, 1), height 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$drugged ? defaultPalette.background : props.$palette.background};\r\n  cursor: grab;\r\n  &:active {\r\n      cursor: grabbing;\r\n      background-color: ${props => props.$palette.progressBarHoverColor}\r\n  }\r\n  &:hover {\r\n      background-color: ${props => props.$palette.progressBarHoverColor}\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    palette: NeumorphColorsType,\r\n    visible: boolean,\r\n    editable: boolean,\r\n    interfaceHeight: number,\r\n    drugged: boolean,\r\n    top: SpringValue<string>,\r\n    bindDraggedScrollBar: (...args: any[]) => ReactEventHandlers,\r\n    scrollBarHeight: number\r\n}\r\n\r\nconst ScrollBar: React.FC<PropsType> = ({\r\n                                            palette, interfaceHeight, editable, bindDraggedScrollBar, scrollBarHeight,\r\n                                            visible, drugged, top\r\n                                        }) => {\r\n\r\n    return (\r\n        <ScrollBarWrapper $palette={palette} $visible={visible}\r\n                          $editable={editable} $interfaceHeight={interfaceHeight}>\r\n            <ScrollBarThing $palette={palette} $drugged={drugged}\r\n                            style={{top}} {...!isMobile && {...bindDraggedScrollBar()}}\r\n                            $height={scrollBarHeight}/>\r\n        </ScrollBarWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ScrollBar, isEqual)","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nconst AllLists = styled(animated.div)<{ $editable: boolean, $closeLook: boolean, $interfaceHeight: number }>`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  width: 70vw;\r\n  top: ${props => props.$editable && !props.$closeLook ? props.$interfaceHeight : 0}px;\r\n  height: calc(100vh - 280px);\r\n  transform-origin: 50% 100%;\r\n  transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n  @media screen and (max-width: 1210px) {\r\n    top: ${props => props.$editable ? `${props.$interfaceHeight}px` : props.$closeLook ?\r\n    '0px' : '-38vh'};\r\n    width: 90vw\r\n  }\r\n`;\r\n\r\nconst ScrollWrapper = styled(animated.div)<{ $top: number }>`\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n  z-index: 1;\r\n  left: 50%;\r\n  top: ${props => props.$top}px;\r\n  transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n  max-width: 2000px;\r\n`;\r\n\r\ntype PropsType = {\r\n    wrapperAnimation: { x: SpringValue<string>, rotateX: SpringValue<number>, rotateZ: SpringValue<number>, y: SpringValue<number> },\r\n    editable: boolean,\r\n    closeLook: boolean,\r\n    interfaceHeight: number,\r\n    y: SpringValue<number>,\r\n    height: SpringValue<number>,\r\n    measuredRef: React.RefObject<HTMLDivElement>,\r\n    visible: boolean,\r\n}\r\n\r\nconst ScrollableWrapper: React.FC<PropsType> = ({\r\n                                                    children, wrapperAnimation,\r\n                                                    editable, closeLook, height, interfaceHeight,\r\n                                                    y, visible, measuredRef\r\n                                                }) => {\r\n\r\n    return (\r\n        <AllLists style={wrapperAnimation} $editable={editable} $closeLook={closeLook}\r\n                  $interfaceHeight={interfaceHeight}>\r\n            <ScrollWrapper style={{y, height, translateX: '-50%'}} ref={measuredRef}\r\n                           $top={closeLook && visible && isMobile ? 50 : closeLook && visible && !isMobile ? 125 : 25}>\r\n                {children}\r\n            </ScrollWrapper>\r\n        </AllLists>\r\n    )\r\n}\r\n\r\nexport default ScrollableWrapper","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {useDrag} from \"react-use-gesture\";\r\n\r\nexport const TaskButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    transform: translateX(-70%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Button = styled.div<{$palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    left: 10px;\r\n    font-size: 15px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.$palette.background};\r\n    box-shadow: ${props => props.$palette.littleShadows};\r\n    color: ${props => props.$palette.color};\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.$palette.color};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n    &:first-child:nth-last-child(2),\r\n        &:first-child:nth-last-child(2) ~ * { \r\n            &:nth-child(1) {\r\n                top: 5px;\r\n            }\r\n            &:nth-child(2) {\r\n                bottom: 5px;\r\n            }\r\n        }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    deleteTask: () => void;\r\n    editTask: () => void;\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskButtons: React.FC<PropsType> = ({deleteTask, editTask, palette}) => {\r\n\r\n    const onEditClickHandler = useDrag(({tap, event}) => {\r\n        event?.stopPropagation()\r\n        if (tap) editTask()\r\n    });\r\n\r\n    const onDeleteClickHandler = useDrag(({tap, event}) => {\r\n        event?.stopPropagation()\r\n        if (tap) deleteTask()\r\n    })\r\n\r\n    return (\r\n        <TaskButtonWrapper>\r\n            <Button {...onEditClickHandler()} $palette={palette}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n            <Button {...onDeleteClickHandler()} $palette={palette}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n        </TaskButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskButtons);\r\n\r\n","\r\n\r\nexport const validate = (value: string | null): boolean => {\r\n    return value !== null && !/^\\s*$/.test(value) && value.length < 100\r\n};","import React from \"react\";\r\nimport {TaskType} from \"../../api/entities\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst CheckboxWrapper = styled.div<{$editable: boolean}>`\r\n    width: 31px;\r\n    height:31px;\r\n    position: relative;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    opacity: ${props => props.$editable ? 0 : 1};\r\n    --background: #fff;\r\n    --border: #D1D6EE;\r\n    --border-hover: #BBC1E1;\r\n    --border-active: #1E2235;\r\n    --tick: #fff;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    z-index: 9;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    outline: none;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: box-shadow .3s;\r\n    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));\r\n    &:hover {\r\n        --s: 2px;\r\n        --b: var(--border-hover);\r\n    }\r\n    &:checked {\r\n        --b: var(--border-active);\r\n        --s: 2px;\r\n        transition-delay: .4s;\r\n        & + svg {\r\n            --a: 16.1 86.12;\r\n            --o: 102.22;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    z-index: 10;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    pointer-events: none;\r\n    fill: none;\r\n    stroke-width: 2px;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    stroke: var(--stroke, var(--border-active));\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    transform: scale(var(--scale, 1)) translateZ(0);\r\n    stroke-dasharray: var(--a, 86.12);\r\n    stroke-dashoffset: var(--o, 86.12);\r\n    transition: stroke-dasharray .6s, stroke-dashoffset .6s;\r\n`;\r\n\r\ntype PropsType = {\r\n    task: TaskType;\r\n    changeDoneStatus: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editable: boolean,\r\n}\r\n\r\nconst TaskCheckbox: React.FC<PropsType> = ({task, changeDoneStatus, editable}) => {\r\n\r\n    return (\r\n        <CheckboxWrapper $editable={editable}>\r\n            <Checkbox type=\"checkbox\" checked={task.status === 2} disabled={editable}\r\n                      onChange={(e) => changeDoneStatus(e)}/>\r\n            <Svg>\r\n                <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"/>\r\n            </Svg>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskCheckbox);\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {TaskType} from \"../../api/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport TaskButtons, {TaskButtonWrapper} from \"./TaskButtons\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {useDrag} from \"react-use-gesture\";\r\n\r\nconst TaskWrapper = styled.div<{ $editable: boolean, $editorState: boolean}>`\r\n    position: relative;\r\n    text-align: left;\r\n    z-index: ${props => props.$editorState ? 2 : 1};\r\n    cursor: ${props => props.$editable ? \"grab\" : \"inherit\"};\r\n    ${props => props.$editable &&\r\n    `&:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n       width: 4rem;\r\n       height: calc(100% + 10px);\r\n       left: -10px;\r\n       top: -5px\r\n     }`}\r\n`;\r\n\r\nconst TaskBackground = styled.div<{$palette: NeumorphColorsType, $editable: boolean, $editorState: boolean}>`\r\n    padding: 15px 0;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    display: flex;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    z-index: 2;\r\n    transform: scale(${props => props.$editorState ? 1.3 : 1});\r\n    transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n    &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: -1;\r\n      box-shadow: ${props => props.$palette.littleShadows};\r\n    };\r\n    &:after {\r\n      border-radius: 7px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translateY(-50%) translateX(-50%);\r\n      z-index: 1;\r\n      width: calc(100% - 10px);\r\n      height: calc(100% - 10px);\r\n      box-shadow: ${props => props.$palette.innerLittleShadows};\r\n      opacity: 0;\r\n      transition: opacity .3s linear;\r\n    };\r\n    ${props => props.$editable && `\r\n        &:hover:after {opacity: 1};\r\n        &:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n           width: 4rem;\r\n           height: 5rem;\r\n           left: -10px\r\n        }\r\n        &:active {\r\n           cursor: grabbing;\r\n           &:before {box-shadow: 10px 10px 20px rgba(0, 0, 0, .4)};\r\n           &:after {opacity: 1}\r\n        }`}\r\n    ${props => props.$editorState && `\r\n    &:after {opacity: 1}\r\n    &:before {box-shadow: 10px 10px 20px rgba(0, 0, 0, .4)}`}\r\n`;\r\n\r\nconst TaskText = styled.div<{ contentEditable: boolean}>`\r\n  position: relative;\r\n    padding: 10px;\r\n    outline: none;\r\n    display: inline-block;\r\n    min-width: 100px;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-break: after-white-space;\r\n    width: 100%;\r\n    font-size: 20px;\r\n    z-index: 3;\r\n    cursor: ${props => props.contentEditable ? 'text' : 'inherit'}\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    task: TaskType,\r\n    todoListId: string,\r\n    palette: NeumorphColorsType,\r\n};\r\n\r\nconst TodoListTask: React.FC<PropsType> = ({task, todoListId, palette}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.interface.focusedStatus, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [editorState, setEditorState] = useState<boolean>(false);\r\n    const editTask = useCallback(() => {\r\n        setEditorState(true);\r\n        dispatch(interfaceActions.setPalette(palette));\r\n        dispatch(interfaceActions.setFocusedStatus(true))\r\n    }, [palette, dispatch]);\r\n\r\n    const textRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (editorState) textRef.current!.focus()\r\n    }, [editorState]);\r\n\r\n    const deleteTask = useCallback(() => {\r\n        dispatch(stateActions.deleteTask(todoListId, task.id))\r\n    }, [todoListId, task.id, dispatch]);\r\n\r\n    useLayoutEffect(() => {\r\n        textRef.current!.textContent = task.title;\r\n        if (task.title === '') editTask()\r\n    }, [task, editTask]);\r\n\r\n    const changeDoneStatus = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newTask = {...task, status: e.currentTarget.checked ? 2 : 0};\r\n        dispatch(stateActions.changeTask(newTask))\r\n    }, [task, dispatch]);\r\n\r\n    const onBlurHandler = useCallback(() => {\r\n        const taskTitle = textRef.current!.textContent;\r\n        if (validate(taskTitle)) {\r\n            let newTask = {...task, title: taskTitle!};\r\n            dispatch(stateActions.changeTask(newTask));\r\n            setEditorState(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else if (!validate(taskTitle) && task.title !== '') {\r\n            textRef.current!.textContent = task.title;\r\n            setEditorState(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n            deleteTask()\r\n        }\r\n    }, [task, deleteTask, dispatch]);\r\n\r\n    const onKeyDownHandler = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.keyCode === 13 || e.keyCode === 27) {\r\n            e.preventDefault();\r\n            textRef.current!.blur()\r\n        }\r\n    }, []);\r\n\r\n    const captureClick = useDrag(({event}) => {\r\n        event?.stopPropagation();\r\n    });\r\n\r\n    /*const priority = task.priority === 0 ? 'Low' : 1 ? 'Middle' : 2 ?\r\n        'High' : 3 ? 'Urgently' : 'Later';*/\r\n\r\n    return (\r\n        <TaskWrapper $editable={editable && !focusedStatus} $editorState={editorState}>\r\n            <TaskButtons editTask={editTask} deleteTask={deleteTask} palette={palette}/>\r\n            <TaskBackground $editable={editable} $palette={palette} $editorState={editorState}>\r\n                <TaskCheckbox task={task} changeDoneStatus={changeDoneStatus} editable={editable}/>\r\n                <TaskText contentEditable={editorState} onKeyDown={e => onKeyDownHandler(e)}\r\n                          ref={textRef} onBlur={onBlurHandler} {...editorState && {...captureClick()}}/>\r\n            </TaskBackground>\r\n        </TaskWrapper>\r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTask, isEqual);\r\n\r\n","import React, {RefObject, useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport {TaskType} from \"../../api/entities\";\r\nimport {animated, useSprings} from \"react-spring\";\r\nimport {useDrag, useHover} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {movePos} from \"../../hooks/movePos\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nexport const TasksWrapper = styled.div<{ $height: number }>`\r\n  user-select: none;\r\n  position: relative;\r\n  height: ${props => props.$height}px;\r\n  transition: height 0.3s cubic-bezier(0.25, 0, 0, 1) 0.2s;\r\n`;\r\n\r\nconst TaskWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  overflow: visible;\r\n  padding: 10px 0;\r\n  pointer-events: auto;\r\n  text-align: center;\r\n  font-size: 14.5px;\r\n`;\r\n\r\ntype PropsType = {\r\n    todoListId: string;\r\n    tasks: TaskType[],\r\n    setHeight: (height: number) => void,\r\n    palette: NeumorphColorsType,\r\n    setHoveredStatus: (status: boolean) => void\r\n};\r\n\r\nconst TasksContainer: React.FC<PropsType> = ({tasks, todoListId, setHeight, palette, setHoveredStatus}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const width = useSelector((store: AppStateType) => store.interface.width, shallowEqual);\r\n    const scrollableState = useSelector((store: AppStateType) => store.interface.scrollableState, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = useCallback((order: Array<number>, down?: boolean, originalIndex?: number, y?: number): any => (index: number) => {\r\n            if (down && index === originalIndex && y !== undefined) {\r\n                const calcY = y > bounds.current[1] ? bounds.current[1] + (y - bounds.current[1]) * 0.1 : y < bounds.current[0] ?\r\n                    bounds.current[0] + (y - bounds.current[0]) * 0.1 : y;\r\n                return {\r\n                    scale: 1.2,\r\n                    zIndex: 2,\r\n                    y: initialYofDragged.current! + calcY,\r\n                    opacity: 1,\r\n                    immediate: (prop: string): boolean => prop === 'zIndex' || prop === 'y',\r\n                }\r\n            } else {\r\n                return {\r\n                    scale: 1,\r\n                    y: initialY.current.length < tasks.length ? initialY.current[order.indexOf(tasks.length-index-2)] || 0\r\n                        : initialY.current[order.indexOf(tasks.length-index-1)] || 0,\r\n                    zIndex: 'inherit',\r\n                    opacity: 1,\r\n                    immediate: false,\r\n                }\r\n            }\r\n        }, [tasks]);\r\n\r\n    const order = useRef<Array<number>>([]);\r\n    const initialYofDragged = useRef<number | null>(null);\r\n    const memoizedOrder = useRef<Array<number>>([]);\r\n    const memoizedTasksId = useRef<Array<string>>([]);\r\n    const initialY = useRef<Array<number>>([]);\r\n    const heights = useRef<Array<number>>([]);\r\n    const bounds = useRef<Array<number>>([]);\r\n    const elementsBorder = useRef<Array<{topBorder: number, center: number, bottomBorder: number}>>([]);\r\n    const elementsRef = useRef<Array<RefObject<HTMLDivElement>>>([]);\r\n    const [height, setCurrentHeight] = useState<number>(0)\r\n\r\n    const [springs, setSprings] = useSprings(tasks.length, settings(order.current), [tasks]);\r\n\r\n    const [forceRerender, rerender] = useState<number>(0);\r\n    useEffect(() => {\r\n        elementsRef.current = tasks.map(() => React.createRef());\r\n        rerender(Math.random())\r\n    }, [tasks]);\r\n\r\n    const calcPositions = useCallback((heightsArray: Array<number>) => {\r\n        initialY.current = heightsArray.map((height, index) => {\r\n            return heightsArray.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += heightsArray[i - 1]\r\n                }\r\n                return total\r\n            }, 0)\r\n        });\r\n        elementsBorder.current = initialY.current.map((item, i) => ({\r\n            topBorder: item,\r\n            center: item + heightsArray[i]/2,\r\n            bottomBorder: item + heightsArray[i]\r\n        }));\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        if (!editable && tasks.length !== 0) {\r\n            order.current = tasks.map((_, i) => i);\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        }\r\n        if (editable && tasks.length === 1) {\r\n            order.current = [0]\r\n        }\r\n        if (editable && tasks.length > memoizedTasksId.current.length && elementsRef.current.length !== 0) {\r\n            order.current = [0, ...order.current.map(item => item + 1)];\r\n            heights.current = [elementsRef.current[0].current!.offsetHeight, ...heights.current];\r\n        }\r\n        if (editable && tasks.length < memoizedTasksId.current.length) {\r\n            const deletedTaskIndex = memoizedTasksId.current.findIndex(taskId => tasks.findIndex(item => item.id === taskId) === -1);\r\n            const deletedOrder = order.current.indexOf(deletedTaskIndex);\r\n            order.current = order.current.filter(index => index !== deletedTaskIndex)\r\n                .map(item => item > deletedTaskIndex ? item - 1 : item);\r\n            heights.current = heights.current.filter((_, index) => index !== deletedOrder);\r\n        }\r\n        if (tasks.length === memoizedTasksId.current.length) {\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        }\r\n        calcPositions(heights.current);\r\n        setSprings(settings(order.current));\r\n        const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n        setCurrentHeight(heightsSum);\r\n        setHeight(heightsSum);\r\n        memoizedTasksId.current = tasks.map(item => item.id);\r\n    }, [forceRerender, width, calcPositions, setHeight, setSprings, setCurrentHeight, editable, tasks, settings]);\r\n\r\n    const getNewIndex = useCallback((index: number, y: number) => {\r\n        if (y > 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (y > height + heights.current[index + 1] / 2) {\r\n                newIndex += 1;\r\n                height += heights.current[index + 1];\r\n            }\r\n            return newIndex > heights.current.length - 1 ? heights.current.length - 1 : newIndex;\r\n        }\r\n        if (y < 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (Math.abs(y) > height + heights.current[index - 1] / 2) {\r\n                newIndex -= 1;\r\n                height += heights.current[index - 1];\r\n            }\r\n            return newIndex < 0 ? 0 : newIndex;\r\n        }\r\n        return index\r\n    }, [])\r\n\r\n    const gesture = useDrag(({args: [originalIndex, trueIndex], down, movement: [, y], event}) => {\r\n        if (isMobile && scrollableState) return;\r\n        event?.stopPropagation();\r\n        const curIndex = order.current.indexOf(trueIndex);\r\n        if (initialYofDragged.current === null) {\r\n            initialYofDragged.current = initialY.current[curIndex];\r\n            bounds.current = [-initialYofDragged.current, initialY.current[tasks.length-1] - initialYofDragged.current];\r\n            dispatch(interfaceActions.setFocusedStatus(true))\r\n        }\r\n        if (!initialYofDragged.current) initialYofDragged.current = initialY.current[curIndex];\r\n        const curRow = getNewIndex(curIndex, y);//текущий новый индекс\r\n        const newOrder = movePos(order.current, curIndex, curRow);// новый порядок\r\n        const newHeights = movePos(heights.current, curIndex, curRow);//новый массив высот\r\n        calcPositions(newHeights);\r\n        setSprings(settings(newOrder, down, originalIndex, y));\r\n        if (!down) {\r\n            order.current = newOrder;\r\n            heights.current = newHeights;\r\n            initialYofDragged.current = null;\r\n            if (!isEqual(order.current, memoizedOrder.current)) {\r\n                const newOrder = order.current.map(item => tasks[item].id)\r\n                dispatch(stateActions.swapTasks(todoListId, newOrder))\r\n            }\r\n            dispatch(interfaceActions.setFocusedStatus(false))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const hovering = useHover(({hovering}) => {\r\n        if (hovering) setHoveredStatus(true);\r\n        if (!hovering) setHoveredStatus(false)\r\n    });\r\n\r\n    return (\r\n        <TasksWrapper $height={height} {...editable && {...hovering()}}>\r\n            {tasks.map((task, i) =>\r\n                <TaskWrapper {...editable && {...gesture(tasks.length-i-1, i)}} key={task.id} style={springs[tasks.length-i-1]}\r\n                             ref={elementsRef.current[i]}>\r\n                    <TodoListTask task={task} todoListId={todoListId} palette={palette}/>\r\n                </TaskWrapper>)}\r\n        </TasksWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TasksContainer, isEqual);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef} from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\nimport {useDrag} from \"react-use-gesture\";\r\n\r\nconst ListTitle = styled.div<{$palette: NeumorphColorsType, contentEditable: boolean}>`\r\n  background-color: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  position: relative;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  margin: 0 auto 10px auto;\r\n  width: 100%;\r\n  cursor: ${props => props.contentEditable ? 'text' : 'inherit'};\r\n  border-radius: 10px;\r\n  outline: none;\r\n  display: inline-block;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-break: after-white-space;\r\n  transform: scale(${props => props.contentEditable ? 1.3 : 1});\r\n  transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n  &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: ${props => props.$palette.innerShadows};\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    listTitle: string,\r\n    id: string,\r\n    switchTitleMode: (state: boolean) => void,\r\n    isTitleEditable: boolean,\r\n    palette: NeumorphColorsType,\r\n    deleteTodoList: () => void\r\n};\r\n\r\nconst TodoListTitle: React.FC<PropsType> = ({listTitle, id, isTitleEditable,\r\n                                                deleteTodoList, switchTitleMode, palette}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && isTitleEditable) {\r\n            ref.current.focus();\r\n            dispatch(interfaceActions.setFocusedStatus(true))\r\n        }\r\n    }, [isTitleEditable, dispatch]);\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    useLayoutEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.textContent = listTitle;\r\n            if (listTitle === '') switchTitleMode(true)\r\n        }\r\n    }, [listTitle, switchTitleMode]);\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.keyCode === 13 || e.keyCode === 27 ) {\r\n            e.preventDefault();\r\n            ref.current!.blur()\r\n        }\r\n    };\r\n    const onBlurHandler = () => {\r\n        if (validate(ref.current!.textContent)) {\r\n            dispatch(stateActions.changeTodoListTitle(id, ref.current!.textContent!));\r\n            switchTitleMode(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else if (!validate(ref.current!.textContent) && listTitle !== '') {\r\n            ref.current!.textContent = listTitle;\r\n            switchTitleMode(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n            deleteTodoList()\r\n        }\r\n    };\r\n\r\n    const captureClick = useDrag(({event}) => {\r\n        event?.stopPropagation();\r\n    })\r\n\r\n    return (\r\n        <ListTitle contentEditable={isTitleEditable} ref={ref} onKeyDown={e => onKeyPressHandler(e)}\r\n                   onBlur={onBlurHandler} $palette={palette} {...isTitleEditable && {...captureClick()}}/>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTitle);\r\n\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 7px;\r\n    left: 7px;\r\n    border-radius: 100%;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity .6s cubic-bezier(0.25, 0, 0, 1), width 0s linear .6s, height 0s linear .6s;\r\n`;\r\n\r\nexport const Button = styled.div<{ styles: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.styles.background};\r\n    color: ${props => props.styles.color};\r\n    box-shadow: ${props => props.styles.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.styles.color};\r\n        color: ${props => props.styles.background};\r\n    }\r\n    &:first-child:nth-last-child(3),\r\n        &:first-child:nth-last-child(3) ~ * {\r\n            &:nth-child(1) {\r\n                left: 50px;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(3) {\r\n                left: 0;\r\n                top: 50px;\r\n            }\r\n        }\r\n`;\r\n\r\ntype PropsType = {\r\n    colors: NeumorphColorsType,\r\n    deleteTodoList: () => void,\r\n    addTask: () => void,\r\n    editList: (state: boolean) => void,\r\n};\r\n\r\nconst ContextButtons: React.FC<PropsType> = ({colors, deleteTodoList, addTask, editList}) => {\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Button styles={colors}\r\n                    onClick={addTask}>\r\n                <FontAwesomeIcon icon=\"plus\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={deleteTodoList}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={() => editList(true)}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(ContextButtons);\r\n\r\n","import React, {useCallback, useRef, useState} from \"react\";\r\nimport TodoListTasks from '../Tasks/TasksContainer';\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {TaskType} from \"../../api/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useHover} from \"react-use-gesture\";\r\nimport ContextButtons, {ButtonWrapper} from \"./ContextButtons\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\n\r\nconst SingleListWrapper = styled.div<{ $editable: boolean, $closeLookState: boolean, $animationInProgress: boolean }>`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 50%;\r\n  backface-visibility: hidden;\r\n  overflow: visible;\r\n  padding: 35px;\r\n  cursor: ${props => props.$editable || props.$closeLookState ? 'inherit' : 'pointer'};\r\n  font-family: NunitoSans-Light;\r\n  &:hover {\r\n      z-index: 5;\r\n  }\r\n  ${props => !props.$editable && !props.$closeLookState && !props.$animationInProgress &&\r\n    `&:hover ${ListOuterLayer}{\r\n        transform: translateZ(100px)\r\n     }\r\n     &:hover ${ListShadow}{\r\n        box-shadow: 0 0 35px 20px rgba(0, 0, 0, 0.8);\r\n        opacity: 0.5\r\n     }`}\r\n`;\r\n\r\nconst ListOuterLayer = styled.div<{$palette: number, $editable: boolean, $closeLookState: boolean, $isTasksHovered: boolean, $focusedStatus: boolean}>`\r\n  cursor: ${props => props.$editable ? 'grab' : 'inherit'};\r\n  border-radius: 30px;\r\n  padding: 35px;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 100%;\r\n  background: ${props => neumorphColors[props.$palette].concaveBackground};\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  transition: transform .6s cubic-bezier(0.25, 0, 0, 1);\r\n  &:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      transition: opacity .3s linear;\r\n      box-shadow: ${props => neumorphColors[props.$palette].shadows};\r\n      opacity: ${props => props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && !props.$focusedStatus && !props.$isTasksHovered &&\r\n    `&:hover ${ButtonWrapper},  ${ButtonWrapper}:hover {\r\n           width: 120px;\r\n           height: 120px;\r\n           opacity: 1;\r\n           transition: opacity .6s cubic-bezier(0.25, 0, 0, 1);\r\n       }\r\n       &:hover ${ListInnerLayer} {\r\n           opacity: 1\r\n       }`};\r\n  &:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: 14px 14px 35px rgba(0, 0, 0, .4);\r\n      transition: opacity .3s linear;\r\n      opacity: ${props => !props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && `\r\n    &:hover:after {opacity: 0};\r\n    &:hover:before {opacity: 1};\r\n    &:active {\r\n        cursor: grabbing;\r\n        &:after {opacity: 1};\r\n        &:before {opacity: 0};\r\n        ${ListInnerLayer} {opacity: 1}\r\n    }`}\r\n`;\r\n\r\nconst ListInnerLayer = styled.div<{ $palette: number }>`\r\n  position: absolute;\r\n  border-radius: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  height: calc(100% - 20px);\r\n  width: calc(100% - 20px);\r\n  padding: 25px;\r\n  box-shadow: ${props => neumorphColors[props.$palette].innerShadows};\r\n  opacity: 0;\r\n  transition: opacity .3s linear;\r\n`;\r\n\r\nconst ListShadow = styled.div<{ $editable: boolean, $closeLookState: boolean }>`\r\n  display: ${props => props.$editable || props.$closeLookState ? 'none' : 'block'};\r\n  position: absolute;\r\n  z-index: -2;\r\n  width: calc(100% - 80px);\r\n  height: calc(100% - 80px);\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  border-radius: 30px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.8);\r\n  opacity: 0.7;\r\n  transition-property: box-shadow, opacity;\r\n  transition-duration: .6s;\r\n  transition-timing-function: cubic-bezier(0.25, 0, 0, 1);\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    listTitle: string,\r\n    listTasks?: TaskType[],\r\n    paletteIndex: number,\r\n    setNewHeights: (height: number, id: string) => void,\r\n    deleteList: (id: string) => void,\r\n    currentLook: boolean\r\n};\r\n\r\nconst TodoList: React.FC<PropsType> = ({\r\n                                           id, listTitle, listTasks, paletteIndex,\r\n                                           setNewHeights, deleteList, currentLook\r\n                                       }) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.interface.focusedStatus, shallowEqual);\r\n    const closeLook = useSelector((state: AppStateType) => state.interface.closeLookState, shallowEqual);\r\n    const animationInProgress = useSelector((state: AppStateType) => state.interface.animationInProgress, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [isTasksHovered, setTasksHoveredStatus] = useState<boolean>(false);\r\n    const setHoveredStatus = useCallback((status: boolean) => {\r\n        setTasksHoveredStatus(status)\r\n    }, []);\r\n\r\n    const currHeight = useRef<number>(0);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const setHeight = useCallback((height: number) => {\r\n        if (currHeight.current === 0 && ref.current) {\r\n            currHeight.current = ref.current.offsetHeight\r\n        }\r\n        if (currHeight.current !== height) {\r\n            setNewHeights(height + currHeight.current, id);\r\n        }\r\n    }, [id, setNewHeights]);\r\n\r\n    const addTask = useCallback(() => {\r\n        const taskId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        const newTask = {\r\n            title: '',\r\n            id: taskId,\r\n            todoListId: id,\r\n        }\r\n        dispatch(stateActions.addTask(newTask, id));\r\n    }, [id, dispatch]);\r\n\r\n    const deleteTodoList = useCallback(() => {\r\n        deleteList(id)\r\n        dispatch(stateActions.deleteTodoList(id))\r\n    }, [id, dispatch, deleteList]);\r\n\r\n    const [filterValue] = useState<string>('All');\r\n   /* const changeFilter = (newFilterValue: string) => {\r\n        setFilterValue(newFilterValue)\r\n    };*/\r\n    const tasks = listTasks ? listTasks.filter(t => {\r\n        if (filterValue === \"Active\") {\r\n            return t.status === 0;\r\n        }\r\n        if (filterValue === \"Completed\") {\r\n            return t.status === 2;\r\n        }\r\n        return true;\r\n    }) : [];\r\n\r\n    //hover Effect\r\n\r\n    const bind = useHover(({hovering}) => {\r\n        if (hovering && !closeLook && !focusedStatus) {\r\n            dispatch(interfaceActions.setPalette(neumorphColors[paletteIndex]));\r\n        }\r\n        if (!hovering && !closeLook && !focusedStatus) {\r\n            dispatch(interfaceActions.setPalette(defaultPalette));\r\n        }\r\n    });\r\n    //close look animations\r\n\r\n    const [isTitleEditable, setTitleEditMode] = useState<boolean>(false);\r\n    const switchTitleMode = useCallback((state: boolean) => {\r\n        setTitleEditMode(state)\r\n    }, []);\r\n\r\n    /*console.log(`${listTitle} render`)*/\r\n    return (\r\n        <SingleListWrapper {...bind()} ref={ref} $editable={editable} $closeLookState={currentLook}\r\n                           $animationInProgress={animationInProgress}>\r\n            <ListShadow $editable={editable} $closeLookState={currentLook}/>\r\n            <ListOuterLayer $palette={paletteIndex} $editable={editable} $isTasksHovered={isTasksHovered}\r\n                            $closeLookState={currentLook} $focusedStatus={focusedStatus}>\r\n                <ListInnerLayer $palette={paletteIndex}/>\r\n                <ContextButtons colors={neumorphColors[paletteIndex]} deleteTodoList={deleteTodoList}\r\n                                addTask={addTask} editList={switchTitleMode}/>\r\n                <TodoListTitle listTitle={listTitle} id={id} isTitleEditable={isTitleEditable}\r\n                               deleteTodoList={deleteTodoList}\r\n                               switchTitleMode={switchTitleMode} palette={neumorphColors[paletteIndex]}/>\r\n                <TodoListTasks todoListId={id} tasks={tasks} setHeight={setHeight}\r\n                               palette={neumorphColors[paletteIndex]}\r\n                               setHoveredStatus={setHoveredStatus}/>\r\n                {/* <TodoListFooter filterValue={filterValue} changeFilter={changeFilter}/>*/}\r\n            </ListOuterLayer>\r\n        </SingleListWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoList, isEqual);\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {NeumorphColorsType} from \"../../neumorphColors\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nconst CloseButtonAnimatedWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  border-radius: 100%;\r\n`;\r\n\r\nconst CloseButton = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    width: ${isMobile ? 60 : 40}px;\r\n    height: ${isMobile ? 60 : 40}px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    box-shadow: ${props => props.$palette.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background: ${props => props.$palette.color};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n`;\r\n\r\ntype PropsType ={\r\n    closeButtonAnimation: {x: SpringValue<number>, y: SpringValue<number>, opacity: SpringValue<number>, display: SpringValue<string>},\r\n    returnFromCloseLook: () => Promise<void>\r\n}\r\n\r\nconst ClosingButton: React.FC<PropsType> = ({closeButtonAnimation, returnFromCloseLook}) => {\r\n\r\n    const currentPalette = useSelector((state: AppStateType) => state.interface.currentPaletteIndex, shallowEqual);\r\n\r\n    return (\r\n        <CloseButtonAnimatedWrapper onClick={returnFromCloseLook} style={closeButtonAnimation}>\r\n            <CloseButton $palette={currentPalette}>\r\n                <FontAwesomeIcon icon=\"times\"/>\r\n            </CloseButton>\r\n        </CloseButtonAnimatedWrapper>\r\n    )\r\n};\r\n\r\nexport default React.memo(ClosingButton, isEqual)","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {animated, useSprings, SpringStartFn, useSpring} from \"react-spring\";\r\nimport {swap} from \"../../../hooks/swap\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport TodoList from \"../../SingleToDoList/TodoList\";\r\nimport {defaultPalette, neumorphColors} from \"../../neumorphColors\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport ClosingButton from \"./CloseButton\";\r\nimport {interfaceActions} from \"../../../redux/interfaceReducer\";\r\nimport {stateActions} from \"../../../redux/stateReducer\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\n\r\nconst TodoListContainer = styled(animated.div)<{ $width: number }>` \r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  width: ${props => props.$width}px;\r\n`;\r\n\r\ntype PropsType = {\r\n    setWrapperAnimation: SpringStartFn<{ x: string, rotateX: number, rotateZ: number, y: number }>,\r\n    scrollByListDrugging: (direction: string) => void,\r\n    setCloseLookState: (height: number) => void,\r\n    returnFromCloseLookState: () => void,\r\n    switchScrollBar: (visibility: boolean) => void,\r\n}\r\n\r\ntype GridItemsType = {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    id: string,\r\n    rightX: number,\r\n    botY: number,\r\n    horizontalCenter: number,\r\n    verticalCenter: number,\r\n    index: number\r\n}\r\n\r\nconst AllListsContainer: React.FC<PropsType> = ({\r\n                                              setWrapperAnimation, scrollByListDrugging,\r\n                                              setCloseLookState, returnFromCloseLookState, switchScrollBar\r\n                                          }) => {\r\n    //resize logic\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const todoLists = useSelector((store: AppStateType) => store.todoList.todoLists, isEqual);\r\n    const width = useSelector((store: AppStateType) => store.interface.width, shallowEqual);\r\n    const interfaceHeight = useSelector((store: AppStateType) => store.interface.interfaceHeight, shallowEqual);\r\n    const scrollableState = useSelector((state: AppStateType) => state.interface.scrollableState, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.interface.focusedStatus, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //state-like mutable container\r\n    const gridItems = useRef<Array<GridItemsType>>([]);\r\n\r\n    const [springs, setSprings] = useSprings(todoLists.length, i => {\r\n        if (gridItems.current.length === 0) return {\r\n            x: 0, y: 0, zIndex: 3, opacity: 1, display: 'block'\r\n        };\r\n        const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i);\r\n        return {\r\n            x: currentSettings ? currentSettings.x : 0,\r\n            y: currentSettings ? currentSettings.y : 0,\r\n            opacity: 1,\r\n            zIndex: 3,\r\n            display: 'block',\r\n        }\r\n    })\r\n\r\n// child height calculation logic\r\n    const columns = useMemo(() => {\r\n        return width >= 1700 ? 4 : width >= 1100 ? 3 : width >= 700 ? 2 : 1\r\n    }, [width]);\r\n    const currWidth = useMemo(() => width / columns, [width, columns]);\r\n\r\n    const recalculateMeasures = useCallback(() => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = gridItems.current.map((item, i) => {\r\n            const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n            const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += height) - height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter, height}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(interfaceActions.setHeight(height.current));\r\n        }\r\n    }, [currWidth, columns, dispatch]);\r\n\r\n\r\n    const temporaryValue = useRef<Array<{ height: number, id: string }>>([]);\r\n    const setNewHeights = useCallback((height: number, id: string) => {\r\n        const findHeight = temporaryValue.current.findIndex(item => item.id === id);\r\n        const newHeightsArray = findHeight === -1 ? [...temporaryValue.current, {height, id}]\r\n            : temporaryValue.current.map((item, i) => {\r\n                if (i === findHeight) return {height, id};\r\n                return item\r\n            });\r\n        temporaryValue.current = newHeightsArray\r\n        if (newHeightsArray.length === todoLists.length) {\r\n            recalculateMeasures();\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                if (currentSettings) return {x: currentSettings.x, y: currentSettings.y};\r\n                return {to: false}\r\n            })\r\n        }\r\n    }, [todoLists, setSprings, recalculateMeasures]);\r\n\r\n    const deleteList = useCallback((id: string) => {\r\n        temporaryValue.current = temporaryValue.current.filter(item => item.id !== id)\r\n    }, []);\r\n\r\n    const height = useRef<number>(0);\r\n\r\n//swap animation logic\r\n    useEffect(() => {\r\n        if (!editable && gridItems.current.length === 0) {\r\n            const newHeights = new Array(columns).fill(0);\r\n            gridItems.current = todoLists.map(\r\n                (item, i) => {\r\n                    const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n                    const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n                    const column = i % columns;\r\n                    const x = currWidth * column;\r\n                    const y = (newHeights[column] += height) - height\r\n                    const rightX = x + currWidth;\r\n                    const botY = y + height;\r\n                    const horizontalCenter = x + currWidth / 2;\r\n                    const verticalCenter = y + height / 2;\r\n                    const index = i;\r\n                    return {x, y, height, id: item.id, botY, rightX, horizontalCenter, verticalCenter, index}\r\n                });\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(interfaceActions.setHeight(height.current));\r\n        }\r\n        if (editable && gridItems.current.length < todoLists.length) {\r\n            gridItems.current = [{\r\n                x: 0, y: 0, height: 0, id: todoLists[0].id, botY: 0,\r\n                rightX: 0, horizontalCenter: 0, verticalCenter: 0, index: 0\r\n            }, ...gridItems.current].map((item, i) => {\r\n                if (i === 0) return item;\r\n                return {...item, index: item.index + 1}\r\n            })\r\n            recalculateMeasures()\r\n        }\r\n        if (editable && gridItems.current.length > todoLists.length) {\r\n            const deletedListIndex = gridItems.current.findIndex(item =>\r\n                todoLists.findIndex(list => list.id === item.id) === -1);\r\n            const deletedList = gridItems.current[deletedListIndex];\r\n            gridItems.current = gridItems.current.map((item) => {\r\n                const index = item.index > deletedList.index ? item.index - 1 : item.index;\r\n                return {...item, index}\r\n            }).filter((item, i) => i !== deletedListIndex);\r\n            recalculateMeasures()\r\n        }\r\n        if (gridItems.current.length === todoLists.length) recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    }, [todoLists, columns, currWidth, dispatch, editable, recalculateMeasures, setSprings]);\r\n\r\n    useEffect(() => {\r\n        recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        });\r\n    }, [width, columns, currWidth, recalculateMeasures, todoLists.length, setSprings]);\r\n\r\n    const reorder = useCallback((oldIndex: number, newIndex: number) => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = swap(gridItems.current, oldIndex, newIndex).map((item, i) => {\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += item.height) - item.height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + item.height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + item.height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(interfaceActions.setHeight(height.current));\r\n        }\r\n    }, [currWidth, columns, dispatch]);\r\n\r\n    const calculatePositions = useCallback((x: number, y: number) => {\r\n        const xPos = currItem.current.horizontalCenter + x;\r\n        const yPos = currItem.current.verticalCenter + y;\r\n        const halfHeight = currItem.current.height / 2;\r\n        let i = gridItems.current.findIndex(item => {\r\n            return (item.x < xPos && item.rightX > xPos && item.verticalCenter + halfHeight > yPos && item.verticalCenter - halfHeight < yPos)\r\n        });\r\n        return i < todoLists.length && i >= 0 ? i : null;\r\n    }, [todoLists]);\r\n\r\n    const setActualSprings = useCallback((x: number, y: number, springsIndex: number) => {\r\n        setSprings(i => {\r\n            if (i === springsIndex) {\r\n                return {\r\n                    x: currItem.current.x + x,\r\n                    y: currItem.current.y + y,\r\n                    zIndex: 4,\r\n                    config: {tension: 200, clamp: true},\r\n                    immediate: (n: string): boolean => n === 'zIndex'\r\n                }\r\n            }\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    }, [todoLists, setSprings]);\r\n\r\n    const currItem = useRef<GridItemsType>(null as unknown as GridItemsType);\r\n    const bounds = useRef<{ left: number, right: number, top: number, bottom: number, pageTop: number, pageBottom: number }>({\r\n        left: 0, right: 0, top: 0, bottom: 0, pageTop: 0, pageBottom: 0\r\n    });\r\n    const eventCoords = useRef<{ offsetX: number, offsetY: number, clientX: number, clientY: number } | null>(null);\r\n    const virtualY = useRef<number>(0);\r\n    const addedY = useRef<number>(0);\r\n    const timeoutId = useRef<number | null>(null);\r\n\r\n    const getBounds = useCallback(() => {\r\n        const left = -currItem.current!.x - 35 + eventCoords.current!.offsetX;\r\n        const right = width - currItem.current!.rightX + 35 + (width / columns - eventCoords.current!.offsetX);\r\n        const top = -currItem.current!.y + 35 - eventCoords.current!.offsetY + 35 + 25;\r\n        const bottom = height.current - currItem.current!.y - 35 - (eventCoords.current!.offsetY + 35);\r\n        const pageTop = -eventCoords.current!.clientY + interfaceHeight + 35 + 25;\r\n        const pageBottom = window.innerHeight - window.innerHeight * 0.1 + pageTop - interfaceHeight - 25;\r\n        bounds.current = {left, right, top, bottom, pageTop, pageBottom}\r\n    }, [width, columns, interfaceHeight]);\r\n\r\n    const gesture = useDrag(({\r\n                                 args: [index, springsIndex], down, movement: [x, y],\r\n                                 active, first, event\r\n                             }) => {\r\n        if (scrollableState && isMobile) return;\r\n        event?.stopPropagation();\r\n        const draggedList = gridItems.current.findIndex(item => item.index === index);\r\n        if (!focusedStatus) {\r\n            dispatch(interfaceActions.setFocusedStatus(true))\r\n        }\r\n        if (first) {\r\n            currItem.current = gridItems.current[draggedList];\r\n            //@ts-ignore\r\n            eventCoords.current = {offsetX: event.offsetX, offsetY: event.offsetY, clientX: event.clientX, clientY: event.clientY};\r\n            getBounds();\r\n            virtualY.current = y;\r\n            addedY.current = 0;\r\n        }\r\n        if (timeoutId.current !== null) {\r\n            clearTimeout(timeoutId.current);\r\n            timeoutId.current = null\r\n        }\r\n        if (active) {\r\n            if (y > bounds.current.pageBottom && virtualY.current < bounds.current.bottom) {\r\n                const awaitScroll = async () => {\r\n                    const promise = new Promise((resolve) => {\r\n                        timeoutId.current = window.setTimeout(() => {\r\n                                scrollByListDrugging('bottom');\r\n                                virtualY.current = virtualY.current + 5;\r\n                                addedY.current = addedY.current + 5;\r\n                                const newIndex = calculatePositions(x, virtualY.current);\r\n                                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                setActualSprings(x, virtualY.current, springsIndex)\r\n                                resolve()\r\n                            }\r\n                            , 10)\r\n                    });\r\n                    await promise.then(() => {\r\n                        if (virtualY.current < bounds.current.bottom) awaitScroll()\r\n                    })\r\n                }\r\n                (async () => await awaitScroll())()\r\n            } else if (y < bounds.current.pageTop && virtualY.current > bounds.current.top) {\r\n                const awaitScroll = async () => {\r\n                    const promise = new Promise((resolve) => {\r\n                        timeoutId.current = window.setTimeout(() => {\r\n                                scrollByListDrugging('top');\r\n                                virtualY.current = virtualY.current - 5;\r\n                                addedY.current = addedY.current - 5;\r\n                                const newIndex = calculatePositions(x, virtualY.current);\r\n                                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                setActualSprings(x, virtualY.current, springsIndex)\r\n                                resolve()\r\n                            }\r\n                            , 10)\r\n                    });\r\n                    await promise.then(() => {\r\n                        if (virtualY.current > bounds.current.top) awaitScroll()\r\n                    })\r\n                }\r\n                (async () => await awaitScroll())()\r\n            } else {\r\n                virtualY.current = y + addedY.current;\r\n                const newIndex = calculatePositions(x, virtualY.current);\r\n                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                setActualSprings(x, virtualY.current, springsIndex)\r\n            }\r\n        }\r\n        if (!down) {\r\n            eventCoords.current = null;\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y, zIndex: 3}\r\n            });\r\n            const newOrder = gridItems.current.map(item => item.id)\r\n            dispatch(stateActions.swapTodoLists(newOrder));\r\n            dispatch(interfaceActions.setFocusedStatus(false))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    //close look logic\r\n    const [closeButtonAnimation, setCloseButtonAnimation] = useSpring(() => ({\r\n        x: 0,\r\n        y: 0,\r\n        opacity: 0,\r\n        display: 'none'\r\n    }));\r\n\r\n    const [indexOfLookedList, setIndexOfLookedList] = useState<number | null>(null);\r\n    const closeLook = useCallback(async (index: number) => {\r\n        if (editable || indexOfLookedList !== null) return;\r\n        dispatch(interfaceActions.setCloseLookState(true));\r\n        const currItem = gridItems.current.find(item => item.index === index)!;\r\n        switchScrollBar(false);\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length - 1 - index) return {\r\n                to: async animate => {\r\n                    await animate({opacity: 0});\r\n                    await animate({display: 'none'})\r\n                }\r\n            };\r\n            return {to: false}\r\n        });\r\n        dispatch(interfaceActions.setHeight(currItem.height));\r\n        setWrapperAnimation({\r\n            x: window.innerWidth <= 1210 ? '5vw' : '15vw',\r\n            rotateX: 0,\r\n            rotateZ: 0,\r\n            y: 0,\r\n        })\r\n        setCloseLookState(currItem.height);\r\n        dispatch(interfaceActions.setPalette(neumorphColors[(todoLists.length - 1 - index) % neumorphColors.length]));\r\n        setIndexOfLookedList(index);\r\n        const itemY = currItem.height < window.innerHeight - 200 ? window.innerHeight / 2 - currItem.height / 2 : 100;\r\n        const itemX = width / 2 - (width / columns) / 2;\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length - 1 - index) return {to: false};\r\n            return {y: itemY,x: itemX}\r\n        });\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                const y = !isMobile ? itemY - 25 : itemY - 80;\r\n                const x = !isMobile ? width / 2 + (width / columns) / 2 - 10 : width / 2 - 30;\r\n                await animate({y, x, display: 'block', immediate: true});\r\n                await animate({opacity: 1, immediate: false})\r\n            }\r\n        })\r\n    }, [todoLists, setCloseLookState, indexOfLookedList, setCloseButtonAnimation, dispatch, columns, editable, setSprings,\r\n    width, switchScrollBar, setWrapperAnimation]);\r\n\r\n    const returnFromCloseLook = useCallback(async () => {\r\n        switchScrollBar(false)\r\n         await setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({opacity: 0});\r\n                await animate({display: 'none'})\r\n            }\r\n        });\r\n        returnFromCloseLookState();\r\n        dispatch(interfaceActions.setHeight(height.current));\r\n        setSprings(i => {\r\n            if (i !== todoLists.length - 1 - indexOfLookedList!) return {to: false};\r\n            const currItem = gridItems.current.find(item => item.index === indexOfLookedList)!\r\n            return {x: currItem.x, y: currItem.y}\r\n        });\r\n        await setWrapperAnimation({\r\n            x: window.innerWidth <= 1210 ? '-5vw' : '-15vw',\r\n            rotateX: 45,\r\n            rotateZ: 45,\r\n            y: 275,\r\n        });\r\n        switchScrollBar(true)\r\n        dispatch(interfaceActions.setPalette(defaultPalette));\r\n        setIndexOfLookedList(null);\r\n        setSprings(i => {\r\n            if (i !== todoLists.length - 1 - indexOfLookedList!) return {opacity: 1, display: 'block'};\r\n            return {to: false}\r\n        });\r\n        dispatch(interfaceActions.setCloseLookState(false));\r\n    }, [todoLists, returnFromCloseLookState, indexOfLookedList, dispatch, setSprings, switchScrollBar, setCloseButtonAnimation,\r\n        setWrapperAnimation]);\r\n\r\n    return (\r\n        <>\r\n            <ClosingButton returnFromCloseLook={returnFromCloseLook} closeButtonAnimation={closeButtonAnimation}/>\r\n            {todoLists.length !== 0 && todoLists.map((list, i) =>\r\n                <TodoListContainer\r\n                    style={springs[todoLists.length - i - 1]} {...editable && {...gesture(i, todoLists.length - i - 1)}}\r\n                    onClick={() => closeLook(i)}\r\n                    $width={currWidth} key={list.id}>\r\n                    <TodoList id={list.id} paletteIndex={(todoLists.length - 1 - i) % neumorphColors.length}\r\n                              deleteList={deleteList} setNewHeights={setNewHeights} currentLook={i === indexOfLookedList}\r\n                              listTitle={list.title} listTasks={list.tasks}/>\r\n                </TodoListContainer>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AllListsContainer, isEqual)","export const swap = (arr: Array<any>, index1: number, index2: number) => arr.map((val, idx) => {\n    if (idx === index1) return arr[index2];\n    if (idx === index2) return arr[index1];\n    return val;\n});\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from \"react-use-gesture\";\r\nimport {isMobile} from 'react-device-detect'\r\nimport ScrollBar from \"./ScrollBar\";\r\nimport ScrollableWrapper from \"./ScrollableWrapper\";\r\nimport AllListsContainer from \"../DruggedLists/AllListsContainer\";\r\nimport {initialization} from \"../../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../../redux/interfaceReducer\";\r\n\r\nconst ScrollContainer: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.interface.currentPaletteIndex, shallowEqual);\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const height = useSelector((store: AppStateType) => store.interface.height, shallowEqual);\r\n    const width = useSelector((store: AppStateType) => store.interface.width, shallowEqual);\r\n    const initialLoadingState = useSelector((store: AppStateType) => store.interface.initialLoadingState, shallowEqual);\r\n    const closeLook = useSelector((store: AppStateType) => store.interface.closeLookState, shallowEqual);\r\n    const interfaceHeight = useSelector((state: AppStateType) => state.interface.interfaceHeight, shallowEqual);\r\n    const scrollableState = useSelector((state: AppStateType) => state.interface.scrollableState, shallowEqual);\r\n    const animationInProgress = useSelector((state: AppStateType) => state.interface.animationInProgress, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization());\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => dispatch(interfaceActions.setWidth(measuredRef.current!.offsetWidth)), 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const [{border, scrollBarHeight}, setBorders] = useState({border: 0, scrollBarHeight: 0});\r\n    const [drugged, setDrugged] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [closeLookForWrapper, setCloseLookForWrapper] = useState<boolean>(false);\r\n\r\n    const measuredRef = useRef<HTMLDivElement>(null);\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(interfaceActions.setWidth(measuredRef.current!.offsetWidth))\r\n    }, [dispatch]);\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        x: '-100vw',\r\n        rotateX: 45,\r\n        rotateZ: 45,\r\n        y: 275,\r\n        config: {tension: 90, clamp: true},\r\n    }));\r\n    useEffect(() => {\r\n        if (!initialLoadingState) setWrapperAnimation({\r\n            x: window.innerWidth <= 1210 ? '-5vw' : '-15vw',\r\n        })\r\n    }, [initialLoadingState, setWrapperAnimation])\r\n\r\n    //scroll logic\r\n    const scrolledY = useRef<number>(0);\r\n    const scrolledPercent = useRef<number>(0);\r\n    const addedScrollConst = useRef<number>(window.innerWidth <= 1210 ? -window.innerHeight / 2 : 0);\r\n    const memoizedData = useRef<Array<number>>([]);\r\n\r\n    const [scrollingAnimation, setScroll] = useSpring(() => ({\r\n        y: -addedScrollConst.current,\r\n        top: `0%`,\r\n        height: 0,\r\n        immediate: false\r\n    }));\r\n\r\n    //resize logic\r\n    useEffect(() => {\r\n        const newScrollBarHeight = !height ? 0 : (window.innerHeight - (editable ? interfaceHeight : 0)) / height * 100;\r\n        let newBorder: number;\r\n        if (!closeLook) {\r\n            newBorder = editable ? (height - window.innerHeight + interfaceHeight < 0 ? 0 : height - window.innerHeight + interfaceHeight)\r\n                : height;\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight});\r\n        } else if (window.innerWidth > 1210 && !closeLook) {\r\n            newBorder = editable ? (height - window.innerHeight + interfaceHeight < 0 ? 0 : height - window.innerHeight + interfaceHeight)\r\n                : (height - window.innerHeight < 0 ? 0.5 * height : height - window.innerHeight / 2);\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight});\r\n        } else newBorder = border\r\n        addedScrollConst.current = editable || closeLook ? 0 : window.innerWidth <= 1210 ? -window.innerHeight / 2 : 0;\r\n        if (!animationInProgress) {\r\n            if (scrolledY.current > newBorder) {\r\n                scrolledPercent.current = 100 - scrollBarHeight;\r\n                setScroll({height, y: -newBorder - addedScrollConst.current, top: `${scrolledPercent.current}%`})\r\n            } else {\r\n                scrolledPercent.current = scrolledY.current / newBorder * (100 - scrollBarHeight);\r\n                setScroll({height, y: -scrolledY.current - addedScrollConst.current, top: `${scrolledPercent.current}%`})\r\n            }\r\n        }\r\n        if (!initialLoadingState && !animationInProgress) setWrapperAnimation({\r\n            x: editable || closeLook ? (window.innerWidth <= 1210 ? '5vw' : '15vw') : (window.innerWidth <= 1210 ? '-5vw' : '-15vw'),\r\n            rotateX: editable || closeLook ? 0 : 45,\r\n            rotateZ: editable || closeLook ? 0 : 45,\r\n            y: editable || closeLook ? 0 : 275,\r\n        });\r\n        if (height < window.innerHeight - interfaceHeight) setVisible(false)\r\n        else if (!animationInProgress) setVisible(true)\r\n    }, [height, width, editable, setScroll, setWrapperAnimation, closeLook, interfaceHeight, initialLoadingState,\r\n        animationInProgress, border, scrollBarHeight]);\r\n\r\n    //event handlers\r\n    useWheel(({delta: [, y]}) => {\r\n        if (!visible) return;\r\n        scrolledY.current = scrolledY.current + y < border && scrolledY.current + y > 0 ? scrolledY.current + y\r\n            : scrolledY.current + y <= 0 ? 0 : border;\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current - addedScrollConst.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window});\r\n    useDrag(({delta: [, y], active, swipe: [, swipeY]}) => {\r\n        if (!visible || (!isMobile && !scrollableState)) return;\r\n        if (swipeY !== 0) {\r\n            const scrolledHeight = (window.innerHeight - interfaceHeight) * swipeY;\r\n            scrolledY.current = scrolledY.current - scrolledHeight < border && scrolledY.current - scrolledHeight > 0 ?\r\n                scrolledY.current - scrolledHeight : scrolledY.current - scrolledHeight <= 0 ? 0 : border;\r\n        }\r\n        if (active) {\r\n            const posY = -y;\r\n            scrolledY.current = scrolledY.current + posY < border && scrolledY.current + posY > 0 ? scrolledY.current + posY\r\n                : scrolledY.current + posY <= 0 ? 0 : border;\r\n        }\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current - addedScrollConst.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window, filterTaps: true, eventOptions: {passive: false}});\r\n\r\n    //scroller\r\n    const bindDraggedScrollBar = useDrag(({delta: [, y], event, first, down}) => {\r\n        event?.stopPropagation();\r\n        if (first) setDrugged(true);\r\n        const absY = y / (editable ? window.innerHeight - interfaceHeight : window.innerHeight) * 100;\r\n        scrolledPercent.current = scrolledPercent.current + absY > 0 && scrolledPercent.current + absY < 100 - scrollBarHeight ?\r\n            scrolledPercent.current + absY : scrolledPercent.current + absY <= 0 ? 0 : 100 - scrollBarHeight;\r\n        scrolledY.current = border * scrolledPercent.current / (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current - addedScrollConst.current,\r\n            top: `${scrolledPercent.current}%`,\r\n            immediate: (prop) => prop === 'top'\r\n        });\r\n        if (!down) setDrugged(false)\r\n    });\r\n\r\n    const scrollByListDrugging = useCallback((direction: string) => {\r\n        if (direction === 'bottom' && scrolledY.current < border) {\r\n            scrolledY.current = scrolledY.current + 5 < border ? scrolledY.current + 5 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n        if (direction === 'top' && scrolledY.current > 0) {\r\n            scrolledY.current = scrolledY.current - 5 > 0 ? scrolledY.current - 5 : 0;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, [border, scrollBarHeight, setScroll])\r\n\r\n    const setCloseLookState = useCallback((elementHeight: number) => {\r\n        const newBorder = elementHeight > window.innerHeight - 200 ?\r\n            elementHeight - (window.innerHeight - 200) : 0;\r\n        if (newBorder > 0) {\r\n            memoizedData.current = [scrolledY.current, scrolledPercent.current, border, scrollBarHeight];\r\n            const newScrollBarHeight = (window.innerHeight - 200) / elementHeight * 100\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight})\r\n            scrolledY.current = 0;\r\n            scrolledPercent.current = 0;\r\n            setScroll({\r\n                y: 0,\r\n                top: `${0}%`,\r\n            });\r\n            setVisible(true);\r\n        }\r\n        if (newBorder === 0) {\r\n            memoizedData.current = [scrolledY.current, scrolledPercent.current, border, scrollBarHeight];\r\n            setBorders({border: 0, scrollBarHeight: 0});\r\n            scrolledY.current = 0;\r\n            scrolledPercent.current = 0;\r\n            setScroll({\r\n                y: 0,\r\n                top: `${0}%`,\r\n            });\r\n        }\r\n        setCloseLookForWrapper(true)\r\n    }, [border, scrollBarHeight, setScroll]);\r\n\r\n    const returnFromCloseLookState = useCallback(() => {\r\n        if (memoizedData.current.length !== 0) {\r\n            scrolledY.current = memoizedData.current[0];\r\n            scrolledPercent.current = memoizedData.current[1];\r\n            setBorders({border: memoizedData.current[2], scrollBarHeight: memoizedData.current[3]});\r\n            addedScrollConst.current = window.innerWidth <= 1210 ? -window.innerHeight / 2 : 0;\r\n            setScroll({\r\n                y: -memoizedData.current[0] - addedScrollConst.current,\r\n                top: `${memoizedData.current[1]}%`,\r\n            });\r\n        }\r\n        setCloseLookForWrapper(false)\r\n    }, [setScroll]);\r\n\r\n    const switchScrollBar = useCallback((visibility: boolean) => setVisible(visibility), []);\r\n\r\n    return (\r\n        <>\r\n            <ScrollableWrapper height={scrollingAnimation.height} visible={visible} closeLook={closeLookForWrapper}\r\n                               editable={editable}\r\n                               y={scrollingAnimation.y} interfaceHeight={interfaceHeight} measuredRef={measuredRef}\r\n                               wrapperAnimation={wrapperAnimation}>\r\n                <AllListsContainer setWrapperAnimation={setWrapperAnimation} scrollByListDrugging={scrollByListDrugging}\r\n                                  setCloseLookState={setCloseLookState}\r\n                                  returnFromCloseLookState={returnFromCloseLookState}\r\n                                  switchScrollBar={switchScrollBar}/>\r\n            </ScrollableWrapper>\r\n            <ScrollBar palette={currentPalette} visible={visible} editable={editable}\r\n                       interfaceHeight={interfaceHeight} drugged={drugged} top={scrollingAnimation.top}\r\n                       bindDraggedScrollBar={bindDraggedScrollBar} scrollBarHeight={scrollBarHeight}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollContainer;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AnimatedBackground from \"./Components/MainInterface/AnimatedBackground\";\r\nimport MainInterfaceContainer from \"./Components/MainInterface/MainInterfaceContainer\";\r\nimport ScrollContainer from \"./Components/AppAnimatedWrappers/ScrollableElements/ScrollContainer\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n      box-sizing: border-box;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      touch-action: none;\r\n    };\r\n  body {\r\n    background-color: white;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    outline: none;\r\n    &::-webkit-scrollbar { \r\n      display: none;\r\n    };\r\n  };\r\n  html {\r\n    -ms-overflow-style: none; \r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n    useEffect(() => {\r\n        const reloadFunction = () => document.location.reload()\r\n        window.addEventListener(\"orientationchange\", reloadFunction)\r\n        return () => window.removeEventListener(\"orientationchange\", reloadFunction)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <AnimatedBackground/>\r\n            <Wrapper>\r\n                <MainInterfaceContainer/>\r\n                <ScrollContainer/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport interfaceReducer from \"./interfaceReducer\";\r\nimport stateReducer from \"./stateReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: stateReducer,\r\n    interface: interfaceReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.css';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n/// <reference types=\"react-dom/experimental\"\r\n/*ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));*/\r\n\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n// @ts-ignore\r\nReactDOM.unstable_createRoot(root).render( <Provider store={store}>\r\n    <App/>\r\n</Provider>);\r\n\r\n"],"sourceRoot":""}