{"version":3,"sources":["redux/api.ts","hooks/movePos.ts","Components/neumorphColors.ts","redux/functionalReducer.ts","Components/todolists/TodoListTitle.tsx","Components/todolists/ContextButtons.tsx","Components/tasks/TaskButtons.tsx","Components/tasks/TaskCheckbox.tsx","Components/tasks/TodoListTask.tsx","hooks/validate.ts","Components/tasks/TodoListTaskCopyTransitions.tsx","Components/todolists/TodoList.tsx","Components/todolists/CloseButton.tsx","Components/todolists/MappedLists.tsx","hooks/swap.ts","Components/todolists/ScrollWrapper.tsx","Components/AnimatedBackground.tsx","Components/MainInterface.tsx","Components/App.tsx","redux/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","API-KEY","api","get","then","res","response","regenerator_default","a","async","_context3","prev","next","status","awrap","sent","abrupt","data","stop","title","post","_context4","todoListId","concat","_context5","_context6","taskId","newTask","put","_context7","delete","_context8","_context9","newTitle","_context10","swappedTask","beforeSwappedTask","putAfterItemId","_context11","swappedList","beforeSwappedList","_context12","movePos","array","moveIndex","toIndex","item","length","diff","Object","toConsumableArray","slice","neumorphColors","background","concaveBackground","shadows","innerShadows","littleShadows","innerLittleShadows","progressBarColor","color","defaultPalette","initialState","todoLists","deepCopy","editable","listsOrder","tasksOrder","newListsId","newTasksId","errorsNumber","focusedStatus","currentPaletteIndex","initialLoadingState","pendingState","swapState","fetchingState","height","allTasks","completedTasks","actions","newTodoList","type","task","todoListTitle","newTasksOrder","newListsOrder","newTodoLists","palette","tasks","restore","state","getStateFromServer","initial","dispatch","lists","listsWithTasks","getTasks","map","_context2","id","index","findIndex","list","objectSpread2","items","Promise","all","functionalReducer","arguments","undefined","action","filter","newSwappedTasks","i","cloneDeep","ListTitle","styled","animated","div","withConfig","displayName","componentId","props","$palette","React","memo","_ref","listTitle","isTitleEditable","switchTitleMode","useDispatch","useEffect","ref","current","focus","useRef","textContent","_useState","useState","_useState2","slicedToArray","setTitle","editModeAnimation","useSpring","scale","react_default","createElement","contentEditable","style","onInput","e","currentTarget","onChangeHandler","onKeyPress","key","preventDefault","blur","onKeyPressHandler","onBlur","ButtonWrapper","Button","styles","colors","deleteTodoList","addTask","editList","onClick","react_fontawesome_index_es","icon","TaskButtonWrapper","deleteTask","editTask","TaskButtons_Button","CheckboxWrapper","Checkbox","input","Svg","svg","changeDoneStatus","animation","left","checked","disabled","onChange","d","TaskWrapper","$editable","TaskBackground","TaskText","TodoListTask","useSelector","todoList","shallowEqual","isTaskEditable","setEditableState","textRef","editStatus","_useState3","_useState4","useLayoutEffect","priority","tasks_TaskButtons","tasks_TaskCheckbox","value","test","TasksWrapper","$height","setHeight","y","initialIndex","transitionItems","setTransitionItems","idOfDragged","setIdOfDragged","initialYofDragged","initialIndexOfDragged","memoizedOrder","heights","bounds","elementsRef","_useSpring","zIndex","_useSpring2","spring","setSpring","transitions","useTransition","from","_ref2","opacity","enter","_ref3","update","_ref4","leave","config","mass","tension","friction","trail","_useState5","_useState6","forceRerender","rerender","createRef","newTransitionItems","deletedTaskIndex","deletedItem","_","heightsSum","reduce","sum","offsetHeight","newTransitionsItems","total","gesture","useDrag","_ref5","transitionItem","args","down","movement","event","first","stopPropagation","curIndex","immediate","curRow","newIndex","Math","abs","getNewIndex","console","log","calcY","onRest","isEqual","newOrder","filterTaps","t","TodoListTaskCopyTransitions_TaskWrapper","assign","tasks_TodoListTask","SingleListWrapper","SingleListBottomLayer","$closeLookState","$hovered","listTasks","paletteIndex","setNewHeights","deleteList","closeLook","currHeight","useCallback","filterValue","z","bind","useHover","hovering","setHoveredState","hoveredState","setTitleEditMode","todolists_ContextButtons","replace","c","r","random","toString","todolists_TodoListTitle","TodoListTaskCopyTransitions","CloseButton","ClosingButton","currentPalette","TodoListContainer","$width","CloseButtonAnimatedWrapper","setWrapperAnimation","width","store","columns","useMemo","currWidth","recalculateMeasures","setSprings","currentSettings","gridItems","find","x","temporaryValue","findHeight","newHeightsArray","_useSprings","useSprings","display","_useSprings2","springs","newHeights","Array","fill","heightInMeasuredArray","column","rightX","botY","horizontalCenter","verticalCenter","max","apply","deletedListIndex","deletedList","draggedList","currItem","right","top","bottom","_ref2$movement","active","xPos","yPos","calculatePositions","oldIndex","arr","index1","index2","val","idx","reorder","n","_context","indexOfLookedList","setIndexOfLookedList","closeButtonAnimation","setCloseButtonAnimation","Fragment","to","animate","rotateX","rotateZ","prop","todolists_CloseButton","window","innerHeight","todolists_TodoList","AllLists","ScrollableWrapper","ScrollBarWrapper","ScrollBarThing","ScrollWrapper","visible","setVisible","setWidth","clamp","wrapperAnimation","measuredRef","scrolledY","scrolledPercent","_useSpring3","_useSpring4","scrollingAnimation","setScroll","visibilityOfScrollBar","border","scrollBarHeight","useWheel","delta","domTarget","eventOptions","capture","offset","posY","bindDraggedScrollBar","absY","esm","handleWidth","onResize","refreshMode","targetRef","todolists_MappedLists","$visible","isMobile","library","add","far","fas","Background","AnimatedBackground","animateBackground","setBackground","Wrapper","ButtonsWrapper","EditButton","ProgressBackground","Progress","InnerBackground","$altBackground","InnerEditButtonText","SmallerButton","MediumButton","InnerSmallerButtonText","MainInterface","initialLoading","fetching","wrapperX","medX","medY","clipPath1","clipPath2","progressBarrAnimation","setProgressBar","progress","progress1","progress2","actionMessage","textTransition","getState","oldTodoLists","todoListsWithNewId","addedLists","deletedLists","editedLists","addedTasks","editedTasks","deletedTasks","createAndChangeIdOfTasksInOrderList","listPromises","currentOrder","swapOrder","addedTasksInLists","currentListsStateOnServer","requiredOrder","_currentOrder","_swapOrder","groupedSwapOrder","swapOrderPending","oldList","newList","push","oldTask","resultCode","tasksPromises","newId","oldId","tasksWithNewId","newListId","t0","thisListPosId","swappedId","beforeSwappedId","listId","currentList","listsToUpdate","listsOnServer","getListOrder","t1","orderFromCurrentState","itemWithUpdatedState","curItem","forEach","currOrder","newTaskPosId","consistentSwapOrder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_order","Symbol","iterator","done","order","return","finish","clipPath","translateY","translateX","setProgress","position","GlobalStyles","createGlobalStyle","_templateObject","App","Components_AnimatedBackground","App_Wrapper","Components_MainInterface","todolists_ScrollWrapper","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","root","document","getElementById","ReactDOM","unstable_createRoot","render","es","Components_App"],"mappings":"oOAGMA,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,0DACTC,iBAAiB,EACjBC,QAAS,CAACC,UAAW,0CAmBZC,EA4BK,WACV,OAAOP,EAASQ,IAAyB,IAAKC,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC5B,MAAfP,EAAIQ,OADuC,CAAAH,EAAAE,KAAA,QAEvCN,EAAWD,EAF4B,UAGhB,MAApBC,EAASO,OAH2B,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAM,MAItBnB,EAASQ,IAAyB,KAJZ,OAIvCG,EAJuCI,EAAAK,KAAAL,EAAAE,KAAA,sBAAAF,EAAAM,OAAA,SAMpCV,EAASW,MAN2B,cAAAP,EAAAM,OAAA,SAQxCX,EAAIY,MARoC,yBAAAP,EAAAQ,aA7B9ChB,EAwCI,SAACiB,GACV,OAAOxB,EAASyB,KAA+C,GAAI,CAACD,UAAQf,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,UAC1D,MAAfP,EAAIQ,OADqE,CAAAQ,EAAAT,KAAA,QAErEN,EAAWD,EAF0D,UAG9C,MAApBC,EAASO,OAHyD,CAAAQ,EAAAT,KAAA,eAAAS,EAAAT,KAAA,EAAAL,EAAAC,EAAAM,MAIpDnB,EAASyB,KAA+C,GAAI,CAACD,WAJT,OAIrEb,EAJqEe,EAAAN,KAAAM,EAAAT,KAAA,sBAAAS,EAAAL,OAAA,SAMlEV,EAASW,MANyD,cAAAI,EAAAL,OAAA,SAQtEX,EAAIY,MARkE,yBAAAI,EAAAH,aAzC5EhB,EAoDK,SAACoB,GACX,OAAO3B,EAASQ,IAAT,IAAAoB,OAA2CD,EAA3C,WAA+DlB,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,UACpD,MAAfP,EAAIQ,OAD+D,CAAAW,EAAAZ,KAAA,QAE/DN,EAAWD,EAFoD,UAGxC,MAApBC,EAASO,OAHmD,CAAAW,EAAAZ,KAAA,eAAAY,EAAAZ,KAAA,EAAAL,EAAAC,EAAAM,MAI9CnB,EAASQ,IAAT,IAAAoB,OAA2CD,EAA3C,YAJ8C,OAI/DhB,EAJ+DkB,EAAAT,KAAAS,EAAAZ,KAAA,sBAAAY,EAAAR,OAAA,SAM5DV,EAASW,MANmD,cAAAO,EAAAR,OAAA,SAQhEX,EAAIY,MAR4D,yBAAAO,EAAAN,aArDtEhB,EAgEA,SAACiB,EAAeG,GACrB,OAAO3B,EAASyB,KAAT,IAAAG,OAAwDD,EAAxD,UAA4E,CAACH,UAC/Ef,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UACiB,MAAfP,EAAIQ,OADN,CAAAY,EAAAb,KAAA,QAEMN,EAAWD,EAFjB,UAG6B,MAApBC,EAASO,OAHlB,CAAAY,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EAAAL,EAAAC,EAAAM,MAIuBnB,EAASyB,KAAT,IAAAG,OAAwDD,EAAxD,UAA4E,CAACH,WAJpG,OAIMb,EAJNmB,EAAAV,KAAAU,EAAAb,KAAA,sBAAAa,EAAAT,OAAA,SAMSV,EAASW,MANlB,cAAAQ,EAAAT,OAAA,SAQKX,EAAIY,MART,yBAAAQ,EAAAP,aAlELhB,EA6EG,SAACoB,EAAoBI,EAAgBC,GAC7C,OAAOhC,EAASiC,IAAT,IAAAL,OAAuDD,EAAvD,WAAAC,OAA2EG,GAAUC,GACvFvB,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UACiB,MAAfP,EAAIQ,OADN,CAAAgB,EAAAjB,KAAA,QAEMN,EAAWD,EAFjB,UAG6B,MAApBC,EAASO,OAHlB,CAAAgB,EAAAjB,KAAA,eAAAiB,EAAAjB,KAAA,EAAAL,EAAAC,EAAAM,MAIuBnB,EAASiC,IAAT,IAAAL,OAAuDD,EAAvD,WAAAC,OAA2EG,GAAUC,IAJ5G,OAIMrB,EAJNuB,EAAAd,KAAAc,EAAAjB,KAAA,sBAAAiB,EAAAb,OAAA,SAMSV,EAASW,MANlB,cAAAY,EAAAb,OAAA,SAQKX,EAAIY,MART,yBAAAY,EAAAX,aA/ELhB,EA0FO,SAACoB,GACb,OAAO3B,EAASmC,OAAT,IAAAP,OAA4CD,IAAclB,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,UAC/C,MAAfP,EAAIQ,OAD0D,CAAAkB,EAAAnB,KAAA,QAE1DN,EAAWD,EAF+C,UAGnC,MAApBC,EAASO,OAH8C,CAAAkB,EAAAnB,KAAA,eAAAmB,EAAAnB,KAAA,EAAAL,EAAAC,EAAAM,MAIzCnB,EAASmC,OAAT,IAAAP,OAA4CD,KAJH,OAI1DhB,EAJ0DyB,EAAAhB,KAAAgB,EAAAnB,KAAA,sBAAAmB,EAAAf,OAAA,SAMvDV,EAASW,MAN8C,cAAAc,EAAAf,OAAA,SAQ3DX,EAAIY,MARuD,yBAAAc,EAAAb,aA3FjEhB,EAsGG,SAACoB,EAAoBI,GAC7B,OAAO/B,EAASmC,OAAT,IAAAP,OAA0DD,EAA1D,WAAAC,OAA8EG,IAChFtB,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACiB,MAAfP,EAAIQ,OADN,CAAAmB,EAAApB,KAAA,QAEMN,EAAWD,EAFjB,UAG6B,MAApBC,EAASO,OAHlB,CAAAmB,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAAAL,EAAAC,EAAAM,MAIuBnB,EAASmC,OAAT,IAAAP,OAA0DD,EAA1D,WAAAC,OAA8EG,KAJrG,OAIMpB,EAJN0B,EAAAjB,KAAAiB,EAAApB,KAAA,sBAAAoB,EAAAhB,OAAA,SAMSV,EAASW,MANlB,cAAAe,EAAAhB,OAAA,SAQKX,EAAIY,MART,yBAAAe,EAAAd,aAxGLhB,EAmHY,SAACoB,EAAmBW,GACrC,OAAOtC,EAASiC,IAAT,IAAAL,OAAmDD,GAAc,CAACH,MAAOc,IAC3E7B,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UACiB,MAAfP,EAAIQ,OADN,CAAAqB,EAAAtB,KAAA,QAEMN,EAAWD,EAFjB,UAG6B,MAApBC,EAASO,OAHlB,CAAAqB,EAAAtB,KAAA,eAAAsB,EAAAtB,KAAA,EAAAL,EAAAC,EAAAM,MAIuBnB,EAASiC,IAAT,IAAAL,OAAmDD,GAAc,CAACH,MAAOc,KAJhG,OAIM3B,EAJN4B,EAAAnB,KAAAmB,EAAAtB,KAAA,sBAAAsB,EAAAlB,OAAA,SAMSV,EAASW,MANlB,cAAAiB,EAAAlB,OAAA,SAQKX,EAAIY,MART,yBAAAiB,EAAAhB,aArHLhB,EAgIE,SAACoB,EAAoBa,EAAqBC,GACjD,OAAOzC,EAASiC,IAAT,IAAAL,OAAyCD,EAAzC,WAAAC,OAA6DY,EAA7D,YAAoF,CAACE,eAAgBD,IACvGhC,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,UACiB,MAAfP,EAAIQ,OADN,CAAAyB,EAAA1B,KAAA,QAEMN,EAAWD,EAFjB,UAG6B,MAApBC,EAASO,OAHlB,CAAAyB,EAAA1B,KAAA,eAAA0B,EAAA1B,KAAA,EAAAL,EAAAC,EAAAM,MAIuBnB,EAASiC,IAAT,IAAAL,OAAyCD,EAAzC,WAAAC,OAA6DY,EAA7D,YACb,CAACE,eAAgBD,KAL3B,OAIM9B,EAJNgC,EAAAvB,KAAAuB,EAAA1B,KAAA,sBAAA0B,EAAAtB,OAAA,SAOSV,EAASW,MAPlB,cAAAqB,EAAAtB,OAAA,SASKX,EAAIY,MATT,yBAAAqB,EAAApB,aAlILhB,EA8IK,SAACqC,EAAqBC,GAChC,OAAO7C,EAASiC,IAAT,IAAAL,OAAyCgB,EAAzC,YAAgE,CAACF,eAAgBG,IACnFpC,KAAK,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UACiB,MAAfP,EAAIQ,OADN,CAAA4B,EAAA7B,KAAA,QAEMN,EAAWD,EAFjB,UAG6B,MAApBC,EAASO,OAHlB,CAAA4B,EAAA7B,KAAA,eAAA6B,EAAA7B,KAAA,EAAAL,EAAAC,EAAAM,MAIuBnB,EAASiC,IAAT,IAAAL,OAAyCgB,EAAzC,YACb,CAACF,eAAgBG,KAL3B,OAIMlC,EAJNmC,EAAA1B,KAAA0B,EAAA7B,KAAA,sBAAA6B,EAAAzB,OAAA,SAOSV,EAASW,MAPlB,cAAAwB,EAAAzB,OAAA,SASKX,EAAIY,MATT,yBAAAwB,EAAAvB,qBCzKLwB,EAAW,SAACC,EAAmBC,EAAmBC,GAW3D,IAAIC,EAAOH,EAAMC,GACbG,EAASJ,EAAMI,OACfC,EAAOJ,EAAYC,EAEvB,OAAIG,EAAO,EAEP,GAAAzB,OAAA0B,OAAAC,EAAA,EAAAD,CACON,EAAMQ,MAAM,EAAGN,IADtB,CAEIC,GAFJG,OAAAC,EAAA,EAAAD,CAGON,EAAMQ,MAAMN,EAASD,IAH5BK,OAAAC,EAAA,EAAAD,CAION,EAAMQ,MAAMP,EAAY,EAAGG,KAE3BC,EAAO,EAEd,GAAAzB,OAAA0B,OAAAC,EAAA,EAAAD,CACON,EAAMQ,MAAM,EAAGP,IADtBK,OAAAC,EAAA,EAAAD,CAEON,EAAMQ,MAAMP,EAAY,EAAGC,EAAU,IAF5C,CAGIC,GAHJG,OAAAC,EAAA,EAAAD,CAION,EAAMQ,MAAMN,EAAU,EAAGE,KAG7BJ,GCaES,EAA4C,CACrD,CACIC,WAAY,UACZC,kBAAmB,4CACnBC,QAAS,mDACTC,aAAc,+DACdC,cAAe,gDACfC,mBAAoB,2DACpBC,iBAAkB,UAClBC,MAAO,SACT,CACEP,WAAY,UACZC,kBAAmB,4CACnBC,QAAS,mDACTC,aAAc,+DACdC,cAAe,gDACfC,mBAAoB,2DACpBC,iBAAkB,UAClBC,MAAO,SACT,CACEP,WAAY,UACZC,kBAAmB,4CACnBC,QAAS,mDACTC,aAAc,+DACdC,cAAe,gDACfC,mBAAoB,2DACpBC,iBAAkB,UAClBC,MAAO,SACR,CACCP,WAAY,UACZC,kBAAmB,4CACnBC,QAAS,mDACTC,aAAc,+DACdC,cAAe,gDACfC,mBAAoB,2DACpBC,iBAAkB,UAClBC,MAAO,UAIFC,EAAqC,CAC9CR,WAAY,UACZC,kBAAmB,4CACnBC,QAAS,mDACTC,aAAc,+DACdC,cAAe,+CACfC,mBAAoB,2DACpBC,iBAAkB,UAClBC,MAAO,SChELE,EAAe,CACjBC,UAAW,GACXC,SAAU,GACVC,UAAU,EACVC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,aAAc,EACdC,eAAe,EACfC,oBAAqBX,EACrBY,qBAAqB,EACrBC,cAAc,EACdC,WAAW,EACXC,eAAe,EACfC,OAAQ,EACRC,SAAU,EACVC,eAAgB,GAqKPC,EACI,SAACC,GAAD,MAAgC,CAACC,KAAM,kCAAmCD,gBAD9ED,EAEA,SAACrD,EAAmBL,GAApB,MAA4C,CAAC4D,KAAM,6BAA8BvD,UAASL,eAF1F0D,EAGG,SAACG,GAAD,MAAqB,CAACD,KAAM,gCAAiCC,SAHhEH,EAIO,SAAC1D,GAAD,MAAyB,CAAC4D,KAAM,qCAAsC5D,eAJ7E0D,EAKG,SAAC1D,EAAoBI,GAArB,MAAyC,CAACwD,KAAM,gCAAiCxD,SAAQJ,eAL5F0D,EAYY,SAAC1D,EAAoB8D,GAArB,MAAgD,CACjEF,KAAM,2CACN5D,aACA8D,kBAfKJ,EAiBO,iBAAO,CAACE,KAAM,uCAjBrBF,EAkBQ,iBAAO,CAACE,KAAM,wCAlBtBF,EAmBC,iBAAO,CAACE,KAAM,gCAnBfF,EAoBS,SAACnE,GAAD,MAAsB,CAACqE,KAAM,uCAAwCrE,WApB9EmE,EAqBE,SAAC1D,EAAoB+D,GAArB,MAAuD,CAC9DH,KAAM,+BAAgC5D,aAAY+D,kBAtB7CL,EAwBM,SAACM,GAAD,MAAmC,CAACJ,KAAM,oCAAqCI,kBAxBrFN,EAyBK,SAACO,GAAD,MAAwC,CAACL,KAAM,+BAAgCK,iBAzBpFP,EA0BG,SAACQ,GAAD,MAAkC,CAACN,KAAM,8CAA+CM,YA1B3FR,EA2BS,iBAAO,CAACE,KAAM,yCA3BvBF,EA4BoB,iBAAO,CAACE,KAAM,qDA5BlCF,EA6BQ,SAACN,GAAD,MAA4B,CAACQ,KAAM,sCAAuCR,iBA7BlFM,EA8BE,SAACH,GAAD,MAAqB,CAACK,KAAM,+BAAgCL,WA9B9DG,EA+BI,SAACS,GAAD,MAAoB,CAACP,KAAM,kCAAmCO,UA/BlET,GAgCS,SAACU,GAAD,MAAuB,CAACR,KAAM,uCAAwCQ,YAhC/EV,GAiCK,SAACW,GAAD,MAAqB,CAACT,KAAM,mCAAoCS,UAjCrEX,GAkCS,SAACW,GAAD,MAAqB,CAACT,KAAM,uCAAwCS,UAyNpFC,GAAqB,SAACC,GAAD,OAAiC,SAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAA,OAAA1F,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnDiF,GAASC,EAASd,IAAyB,IADQtE,EAAAE,KAAA,EAAAL,EAAAC,EAAAM,MAEpCZ,KAFoC,UAElD6F,EAFkDrF,EAAAK,KAGpDiF,EAAiBD,EACA,IAAjBA,EAAMhD,OAJ8C,CAAArC,EAAAE,KAAA,gBAKpDkF,EAASd,EAAoBe,EAAMhD,SACnC+C,EAASd,IAAyB,IAC5BiB,EAAWF,EAAMG,IAAI,SAAOpD,GAAP,OAAAvC,EAAAC,EAAAC,MAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cAAAuF,EAAAvF,KAAA,EAAAL,EAAAC,EAAAM,MACVZ,EAAiB4C,EAAKsD,IAAIhG,KAAK,SAAAa,GACxC,IAAMoF,EAAQL,EAAeM,UAAU,SAAAC,GAAI,OAAIzD,EAAKsD,KAAOG,EAAKH,KAChEJ,EAAeK,GAAfpD,OAAAuD,EAAA,EAAAvD,CAAA,GAA4BH,EAA5B,CAAkC2C,MAAOxE,EAAKwF,QAC9CX,EAASd,IAAyB,OAJf,cAAAmB,EAAAnF,OAAA,SAAAmF,EAAApF,MAAA,wBAAAoF,EAAAjF,YAPyBR,EAAAE,KAAA,GAAAL,EAAAC,EAAAM,MAc9C4F,QAAQC,IAAIV,IAdkC,QAgBxDH,EAASd,EAAqBgB,IAC1BH,GAASC,EAASd,KACjBa,GAASC,EAASd,IAAyB,IAlBQ,yBAAAtE,EAAAQ,YA4V7C0F,GAzvBW,WAAoF,IAAnFjB,EAAmFkB,UAAA9D,OAAA,QAAA+D,IAAAD,UAAA,GAAAA,UAAA,GAAzD/C,EAAciD,EAA2CF,UAAA9D,OAAA,EAAA8D,UAAA,QAAAC,EAC1G,OAAQC,EAAO7B,MACX,IAAK,mCACD,OAAOjC,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAWgD,EAAOhD,YAE1B,IAAK,8BACD,OAAOd,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM5B,UAAUmC,IAAI,SAAAK,GAC3B,OAAIA,EAAKH,KAAOW,EAAOzF,WACZ2B,OAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,EAAX,CAAiBd,MAAOsB,EAAOtB,QACrBc,MAG1B,IAAK,kCACD,OAAOtD,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAS,CAAGgD,EAAO9B,aAAV1D,OAAA0B,OAAAC,EAAA,EAAAD,CAA0B0C,EAAM5B,cAEjD,IAAK,6BACD,OAAOd,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM5B,UAAUmC,IAAI,SAAAK,GAC3B,OAAIA,EAAKH,KAAOW,EAAOzF,WACZ2B,OAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,EAAX,CAAiBd,MAAK,CAAGsB,EAAOpF,SAAVJ,OAAA0B,OAAAC,EAAA,EAAAD,CAAsBsD,EAAKd,UACvCc,MAG1B,IAAK,gCACD,OAAOtD,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM5B,UAAUmC,IAAI,SAAAK,GAC3B,OAAIA,EAAKH,KAAOW,EAAO5B,KAAK7D,WACjB2B,OAAAuD,EAAA,EAAAvD,CAAA,GACAsD,EADP,CACad,MAAOc,EAAKd,MAAMS,IAAI,SAAAf,GAC3B,OAAIA,EAAKiB,KAAOW,EAAO5B,KAAKiB,GACjBnD,OAAAuD,EAAA,EAAAvD,CAAA,GAAI8D,EAAO5B,MACRA,MAGZoB,MAG1B,IAAK,qCACD,OAAOtD,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM5B,UAAUiD,OAAO,SAAAT,GAAI,OAAIA,EAAKH,KAAOW,EAAOzF,eAErE,IAAK,gCACD,OAAO2B,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM5B,UAAUmC,IAAI,SAAAK,GAC3B,OAAIA,EAAKH,KAAOW,EAAOzF,WACZ2B,OAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,EAAX,CAAiBd,MAAOc,EAAKd,MAAMuB,OAAO,SAAA7B,GAAI,OAAIA,EAAKiB,KAAOW,EAAOrF,WAC3D6E,MAG1B,IAAK,2CACD,OAAOtD,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM5B,UAAUmC,IAAI,SAAAK,GAC3B,OAAIA,EAAKH,KAAOW,EAAOzF,WACZ2B,OAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,EAAX,CAAiBpF,MAAO4F,EAAO3B,gBACrBmB,MAG1B,IAAK,oCACD,OAAOtD,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIzB,WAAY6C,EAAOzB,gBAE3B,IAAK,+BACD,IAAMe,EAAQV,EAAMxB,WAAWmC,UAAU,SAAAxD,GAAI,OAAIA,EAAKxB,aAAeyF,EAAOzF,aACtE2F,GAA6B,IAAXZ,EAAeV,EAAMxB,WAAW+B,IAAI,SAACpD,EAAMoE,GAC/D,OAAIA,IAAMb,EAAc,CAAC/E,WAAYyF,EAAOzF,WAAY+D,cAAe0B,EAAO1B,eACvEvC,IAFa,GAAAvB,OAAA0B,OAAAC,EAAA,EAAAD,CAGf0C,EAAMxB,YAHS,CAGG,CAAC7C,WAAYyF,EAAOzF,WAAY+D,cAAe0B,EAAO1B,iBACjF,OAAOpC,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIxB,WAAY8C,IAEpB,IAAK,qCACD,OAAOhE,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI1B,UAAU,EACVC,WAAY,GACZC,WAAY,GACZG,aAAc,EACdN,SAAUmD,YAAUxB,EAAM5B,aAElC,IAAK,sCACD,OAAOd,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI1B,UAAU,IAElB,IAAK,8BACD,OAAOhB,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIrB,aAAcqB,EAAMrB,aAAe,IAE3C,IAAK,uCACD,OAAOrB,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIpB,cAAewC,EAAOlG,SAE9B,IAAK,+BACD,OAAOoC,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAWgD,EAAOxB,eAE1B,IAAK,8CACD,OAAOtC,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEInB,oBAAqBuC,EAAOvB,UAEpC,IAAK,uCACD,OAAOvC,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEI5B,UAAW4B,EAAM3B,SACjBC,UAAU,EACVC,WAAY,GACZC,WAAY,KAEpB,IAAK,mDACD,OAAOlB,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIlB,qBAAqB,IAE7B,IAAK,sCACD,OAAOxB,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIjB,aAAcqC,EAAOrC,eAE7B,IAAK,+BACD,OAAOzB,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEId,OAAQkC,EAAOlC,SAEvB,IAAK,kCACD,OAAO5B,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIb,SAAUiC,EAAOtB,QAEzB,IAAK,uCACD,OAAOxC,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIZ,eAAgBgC,EAAOrB,QAAU,EAAIC,EAAMZ,eAAe,IAElE,IAAK,mCACD,OAAO9B,OAAAuD,EAAA,EAAAvD,CAAA,GACA0C,EADP,CAEIhB,UAAWoC,EAAOpB,QAE1B,QACI,OAAOA,sCCrMbyB,UAAYC,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGL,CAAH,sWACO,SAAAM,GAAK,OAAIA,EAAMC,SAASvE,YACnC,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,OAoBf,SAAA+D,GAAK,OAAIA,EAAMC,SAASpE,gBA6D7BqE,OAAMC,KAjDsB,SAAAC,GAAgE,IAA9DC,EAA8DD,EAA9DC,UAAW5B,EAAmD2B,EAAnD3B,GAAI6B,EAA+CF,EAA/CE,gBAAiBC,EAA8BH,EAA9BG,gBAAiB1C,EAAauC,EAAbvC,QAEpFM,EAAWqC,eAEjBC,oBAAU,WACFC,EAAIC,SAAWL,IACfI,EAAIC,QAAQC,QACZzC,EAASd,GAAyB,MAEvC,CAACiD,IAEJ,IAAMI,EAAMG,iBAAuB,MACnCJ,oBAAU,WACFC,EAAIC,UACJD,EAAIC,QAAQG,YAAcT,IAE/B,CAACA,IAhBmG,IAAAU,EAkB7EC,mBAAiBX,GAlB4DY,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAAyF,EAAA,GAkBhGvH,EAlBgGyH,EAAA,GAkBzFE,EAlByFF,EAAA,GAmCjGG,EAAoBC,qBAAU,CAChCC,MAAOhB,EAAkB,IAAM,IAKnC,OACIiB,EAAA1I,EAAA2I,cAAC/B,GAAD,CAAWgC,gBAAiBnB,EAAiBI,IAAKA,EAAKgB,MAAON,EACnDO,QAAS,SAAAC,GAAC,OAxBD,SAACA,GACrBT,EAASS,EAAEC,cAAcf,aAAe,IAuBfgB,CAAgBF,IAAIG,WAAY,SAAAH,GAAC,OApBpC,SAACA,GACT,UAAVA,EAAEI,MACFJ,EAAEK,iBACFvB,EAAIC,QAASuB,QAiB6CC,CAAkBP,IACrEQ,OAfO,WAClBjE,EAASd,EAA4BoB,EAAIjF,IACzC+G,IACApC,EAASd,GAAyB,KAavB4C,SAAUpC,eCjFhBwE,GAAgB3C,IAAOE,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGL,CAAH,2NAab4C,GAAS5C,IAAOE,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGL,CAAH,0bASD,SAAAM,GAAK,OAAIA,EAAMuC,OAAO7G,YAC3B,SAAAsE,GAAK,OAAIA,EAAMuC,OAAOtG,OACjB,SAAA+D,GAAK,OAAIA,EAAMuC,OAAOzG,eAIZ,SAAAkE,GAAK,OAAIA,EAAMuC,OAAO7G,YACjC,SAAAsE,GAAK,OAAIA,EAAMuC,OAAOtG,QA8CxBiE,OAAMC,KApBuB,SAAAC,GAAiD,IAA/CoC,EAA+CpC,EAA/CoC,OAAQC,EAAuCrC,EAAvCqC,eAAgBC,EAAuBtC,EAAvBsC,QAASC,EAAcvC,EAAduC,SAE3E,OACIpB,EAAA1I,EAAA2I,cAACa,GAAD,KACId,EAAA1I,EAAA2I,cAACc,GAAD,CAAQC,OAAQC,EACRI,QAASF,GACbnB,EAAA1I,EAAA2I,cAACqB,GAAA,EAAD,CAAiBC,KAAK,UAE1BvB,EAAA1I,EAAA2I,cAACc,GAAD,CAAQC,OAAQC,EACRI,QAASH,GACblB,EAAA1I,EAAA2I,cAACqB,GAAA,EAAD,CAAiBC,KAAK,WAE1BvB,EAAA1I,EAAA2I,cAACc,GAAD,CAAQC,OAAQC,EACRI,QAASD,GACbpB,EAAA1I,EAAA2I,cAACqB,GAAA,EAAD,CAAiBC,KAAK,iCCvEzBC,GAAoBrD,IAAOE,IAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,eAAGL,CAAH,6IAUxB4C,GAAS5C,IAAOE,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAGL,CAAH,uaAiDGQ,OAAMC,KAdoB,SAAAC,GAA4B,IAA1B4C,EAA0B5C,EAA1B4C,WAAYC,EAAc7C,EAAd6C,SAEnD,OACI1B,EAAA1I,EAAA2I,cAACuB,GAAD,KACIxB,EAAA1I,EAAA2I,cAAC0B,GAAD,CAAQN,QAASK,GACb1B,EAAA1I,EAAA2I,cAACqB,GAAA,EAAD,CAAiBC,KAAK,UAE1BvB,EAAA1I,EAAA2I,cAAC0B,GAAD,CAAQN,QAASI,GACbzB,EAAA1I,EAAA2I,cAACqB,GAAA,EAAD,CAAiBC,KAAK,cClDhCK,GAAkBzD,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,eAAGL,CAAH,gLAaf0D,GAAW1D,IAAO2D,MAAVxD,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGL,CAAH,ocAgCR4D,GAAM5D,IAAO6D,IAAV1D,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGL,CAAH,oYA6CMQ,OAAMC,KAlBqB,SAAAC,GAAiD,IAA/C5C,EAA+C4C,EAA/C5C,KAAMgG,EAAyCpD,EAAzCoD,iBAAkBlH,EAAuB8D,EAAvB9D,SAE1DmH,GAFiFrD,EAAbvC,QAExDwD,qBAAU,CACxBqC,KAAMpH,GAAY,GAAK,KAG3B,OACIiF,EAAA1I,EAAA2I,cAAC2B,GAAD,CAAiBzB,MAAO+B,GACpBlC,EAAA1I,EAAA2I,cAAC4B,GAAD,CAAU7F,KAAK,WAAWoG,QAAyB,IAAhBnG,EAAKtE,OAAc0K,SAAUtH,EACtDuH,SAAU,SAACjC,GAAD,OAAO4B,EAAiB5B,MAC5CL,EAAA1I,EAAA2I,cAAC8B,GAAD,KACI/B,EAAA1I,EAAA2I,cAAA,QACIsC,EAAE,kLC/EhBC,GAAcrE,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGL,CAAH,yDAIX,SAAAM,GAAK,OAAIA,EAAMgE,WAAN,WAAApK,OACAmJ,GADA,OAAAnJ,OACuBmJ,GADvB,gFAQTkB,GAAiBvE,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGL,CAAH,oSAEF,SAAAM,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,OAIvB,SAAA+D,GAAK,OAAIA,EAAMgE,UAAY,OAAS,WAW9B,SAAAhE,GAAK,OAAIA,EAAMC,SAASnE,eAItC,SAAAkE,GAAK,OAAIA,EAAMgE,WAAN,gDAAApK,OAEcoG,EAAMC,SAASvE,WAF7B,aAOTwI,GAAWxE,IAAOE,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGL,CAAH,8IA4FCyE,GA3E2BjE,IAAMC,KAAK,SAAAC,GAAiC,IAA/B5C,EAA+B4C,EAA/B5C,KAAM7D,EAAyByG,EAAzBzG,WAAYkE,EAAauC,EAAbvC,QAC/DM,EAAWqC,eACXlE,EAAW8H,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAAS/H,UAAUgI,MACzE1H,EAAgBwH,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASzH,eAAe0H,MAHPvD,EAKvCC,oBAAkB,GALqBC,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAAyF,EAAA,GAK3EwD,EAL2EtD,EAAA,GAK3DuD,EAL2DvD,EAAA,GAU5EwD,EAAU5D,iBAAuB,MACvCJ,oBAAU,YACFjD,EAAKkH,YAAcH,IAAgBE,EAAQ9D,QAASC,SACzD,CAACpD,EAAM+G,IAEV,IAAMvB,EAAa,WACf7E,EAASd,EAAmB1D,EAAY6D,EAAKiB,MAhBiCkG,EAmBxD3D,mBAAiB,IAnBuC4D,EAAAtJ,OAAA4F,EAAA,EAAA5F,CAAAqJ,EAAA,GAmB3EnL,EAnB2EoL,EAAA,GAmBpEzD,EAnBoEyD,EAAA,GAoBlFC,0BAAgB,WACZJ,EAAQ9D,QAASG,YAActD,EAAKhE,MACpC2H,EAAS3D,EAAKhE,QACf,CAACgE,EAAKhE,QAET,IA2BM4H,EAAoBC,qBAAU,CAChCC,MAAOiD,GAAkB/G,EAAKkH,WAAa,IAAM,IAGpClH,EAAKsH,SAGtB,OACIvD,EAAA1I,EAAA2I,cAACuC,GAAD,CAAaC,UAAW1H,IAAaM,GACjC2E,EAAA1I,EAAA2I,cAACuD,GAAD,CAAa9B,SAvDJ,WACbuB,GAAiB,GACjBrG,EAASd,GAAyB,KAqDG2F,WAAYA,IAC7CzB,EAAA1I,EAAA2I,cAACyC,GAAD,CAAgBvC,MAAON,EAAmB4C,UAAW1H,EACrC2D,SAAUpC,GACtB0D,EAAA1I,EAAA2I,cAACwD,GAAD,CAAcxH,KAAMA,EAAMgG,iBAvCb,SAAC5B,GACtB,IAAI5H,EAAOsB,OAAAuD,EAAA,EAAAvD,CAAA,GAAOkC,EAAP,CAAatE,OAAQ0I,EAAEC,cAAc8B,QAAU,EAAI,IAC9DxF,EAASd,EAAmBrD,KAqC0CsC,SAAUA,EAAUuB,QAASA,IAC3F0D,EAAA1I,EAAA2I,cAAC0C,GAAD,CAAUzC,gBAAiB8C,GAAkB/G,EAAKkH,WACxC3C,WAAY,SAAAH,GAAC,OArBT,SAACA,GACR,UAAXA,EAAEI,MACFJ,EAAEK,iBACFwC,EAAQ9D,QAASuB,QAkBcC,CAAkBP,IACnClB,IAAK+D,EACLrC,OAjCH,WAGf,IC1GiB6C,ED2GjB,GAHAT,GAAiB,GACjBrG,EAASd,GAAyB,ICxGrB,MADI4H,ED0GQzL,ICzGN,4CAA4C0L,KAAKD,GD0GvD,CACT,IAAIjL,EAAOsB,OAAAuD,EAAA,EAAAvD,CAAA,GAAOkC,EAAP,CAAahE,QAAOkL,YAAY,IAC3CvG,EAASd,EAAmBrD,SACzBgJ,KA0B+BrB,QAAS,SAAAC,GAAC,OAtC5B,SAACA,GACrB,IAAIpI,EAAQoI,EAAEC,cAAcf,aAAe,GAC3CK,EAAS3H,GAoC2CsI,CAAgBF,UE5HtEuD,GAAezF,IAAOE,IAAVC,WAAA,CAAAC,YAAA,4CAAAC,YAAA,YAAGL,CAAH,qGAGN,SAAAM,GAAK,OAAIA,EAAMoF,UAIrBrB,GAAcrE,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,2CAAAC,YAAA,YAAGL,CAAH,2GA4NFQ,OAAMC,KApMsB,SAAAC,GAA6C,IAA3CtC,EAA2CsC,EAA3CtC,MAAOnE,EAAoCyG,EAApCzG,WAAY0L,EAAwBjF,EAAxBiF,UAAWxH,EAAauC,EAAbvC,QAEjEvB,EAAW8H,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAAS/H,UAAUgI,MACzEnG,EAAWqC,eAHmEO,EAuBtCC,mBAAoClD,EAAMS,IAAI,SAACf,EAAM+B,GAAP,MAAc,CACtG+F,EAAG,EACH7G,GAAIjB,EAAKiB,GACTvB,OAAQ,EACRqI,aAAchG,EACd/B,KAAMA,MA5B0EyD,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAAyF,EAAA,GAuB7EyE,EAvB6EvE,EAAA,GAuB5DwE,EAvB4DxE,EAAA,GAAA0D,EA+B9C3D,mBAAiB,IA/B6B4D,EAAAtJ,OAAA4F,EAAA,EAAA5F,CAAAqJ,EAAA,GA+B7Ee,EA/B6Ed,EAAA,GA+BhEe,EA/BgEf,EAAA,GAiC9EgB,EAAoB/E,iBAAsB,GAC1CgF,EAAwBhF,iBAAe,GACvC3D,EAAS2D,iBAAe,GACxBiF,EAAgBjF,iBAAkC,IAClDkF,EAAUlF,iBAAsB,IAChCmF,EAASnF,iBAAsB,IAC/BoF,EAAcpF,iBAAyC,IAvCuBqF,EAyCxD7E,qBAAU,iBAAO,CACzCC,MAAO,EACPgE,EAAG,EACHa,OAAQ,IACR,CAACrI,IA7C+EsI,EAAA9K,OAAA4F,EAAA,EAAA5F,CAAA4K,EAAA,GAyC7EG,EAzC6ED,EAAA,GAyCrEE,EAzCqEF,EAAA,GA+C9EG,EAAcC,yBAAchB,EAAiB,CAC/CiB,KAAM,SAAAC,GAAA,MAAU,CAACpB,EAAXoB,EAAEpB,EAAYqB,QAAS,IAC7BC,MAAO,SAAAC,GAAA,MAAU,CAACvB,EAAXuB,EAAEvB,EAAYqB,QAAS,IAC9BG,OAAQ,SAAAC,GAAA,MAAU,CAACzB,EAAXyB,EAAEzB,IACV0B,MAAO,CAAC9J,OAAQ,EAAGyJ,QAAS,GAC5BM,OAAQ,CAACC,KAAM,EAAGC,QAAS,IAAKC,SAAU,KAC1CC,MAAO,GACPrF,IAAK,SAAA7G,GAAI,OAAIA,EAAKsD,MAtD8D6I,EAyDlDtG,mBAAiB,GAzDiCuG,EAAAjM,OAAA4F,EAAA,EAAA5F,CAAAgM,EAAA,GAyD7EE,EAzD6ED,EAAA,GAyD9DE,EAzD8DF,EAAA,GA0DpF9G,oBAAU,WAEN,GADAwF,EAAYtF,QAAU7C,EAAMS,IAAI,kBAAM2B,IAAMwH,cACxC5J,EAAM1C,OAASoK,EAAgBpK,OAAQ,CACvC,IAAMuM,EAAqB,CAAC,CACxBrC,EAAG,EACH7G,GAAIX,EAAM,GAAGW,GACbvB,OAAQ,EACRqI,aAAc,EACd/H,KAAMM,EAAM,KACblE,OAAO4L,GACVC,EAAmBkC,GACnBF,EAASD,EAAgB,GAE7B,GAAI1J,EAAM1C,OAASoK,EAAgBpK,OAAQ,CACvC,IAAMwM,EAAmBpC,EAAgB7G,UAAU,SAAAxD,GAAI,OAAsD,IAAlD2C,EAAMa,UAAU,SAAAnB,GAAI,OAAIA,EAAKiB,KAAOtD,EAAKsD,OAC9FoJ,EAAcrC,EAAgBoC,GAC9BD,EAAqBnC,EAAgBnG,OAAO,SAACyI,EAAGpJ,GAAJ,OAAcA,IAAUkJ,IACrErJ,IAAI,SAACpD,EAAMuD,GACR,OAAIA,EAAQkJ,EAAyBzM,EAChCG,OAAAuD,EAAA,EAAAvD,CAAA,GACEH,EADF,CAEDmK,EAAGnK,EAAKmK,EAAIuC,EAAY3K,OACxBqI,aAAcpK,EAAKoK,aAAesC,EAAYtC,aAAepK,EAAKoK,aAAe,EAAIpK,EAAKoK,iBAGtGE,EAAmBkC,GACnB5B,EAAQpF,QAAUoF,EAAQpF,QAAQtB,OAAO,SAACyI,EAAGpJ,GAAJ,OAAcA,IAAUkJ,IACjE,IAAMG,EAAahC,EAAQpF,QAAQqH,OAAO,SAACC,EAAKtH,GAAN,OAAkBsH,EAAMtH,GAAS,GAC3EzD,EAAOyD,QAAUoH,EACjB1C,EAAU0C,QAEPN,EAASD,EAAgB,IACjC,CAAC1J,IAEJ+G,0BAAgB,WACZkB,EAAQpF,QAAUsF,EAAYtF,QAAQpC,IAAI,SAAAmC,GAAG,OAAIA,EAAIC,QAASuH,eAC9D,IAAMC,EAAsB3C,EAAgBjH,IAAI,SAACpD,EAAMuD,GAAP,MAAkB,CAC9D4G,EAAGS,EAAQpF,QAAQqH,OAAO,SAACI,EAAOjN,EAAMoE,GAIpC,OAHU,IAANA,GAAWA,GAAKb,IAChB0J,GAASrC,EAAQpF,QAAQpB,EAAI,IAE1B6I,GACR,GACH3J,GAAItD,EAAKsD,GACTvB,OAAQ6I,EAAQpF,QAAQjC,GACxB6G,aAAcpK,EAAKoK,aACnB/H,KAAMrC,EAAKqC,QAEfiI,EAAmB0C,GACnB,IAAMJ,EAAahC,EAAQpF,QAAQqH,OAAO,SAACC,EAAKtH,GAAN,OAAkBsH,EAAMtH,GAAS,GAC3EzD,EAAOyD,QAAUoH,EACjB1C,EAAU0C,IACX,CAACP,IAEJ,IAsBMa,EAAUC,aAAQ,SAAAC,GAAmE,IAA1DC,EAA0DlN,OAAA4F,EAAA,EAAA5F,CAAAiN,EAAjEE,KAAiE,MAAzCC,EAAyCH,EAAzCG,KAAmBpD,EAAsBhK,OAAA4F,EAAA,EAAA5F,CAAAiN,EAAnCI,SAAmC,MAAlBC,EAAkBL,EAAlBK,MAAOC,EAAWN,EAAXM,MAC5ED,EAAOE,kBACP,IAAMC,EAAWvD,EAAgB7G,UAAU,SAAAxD,GAAI,OAAIA,EAAKsD,KAAO+J,EAAe/J,KAC1EoK,IACAjD,EAAkBjF,QAAU6H,EAAelD,EAC3CU,EAAOrF,QAAU,EAAEiF,EAAkBjF,QACjC6E,EAAgBA,EAAgBpK,OAAS,GAAGkK,EAAIM,EAAkBjF,SACtEmF,EAAcnF,QAAU6E,EACxBG,EAAe6C,EAAe/J,IAC9BoH,EAAsBlF,QAAUoI,EAChCzC,EAAU,CAAChB,EAAGM,EAAkBjF,QAAUW,MAAO,IAAK0H,WAAW,KAErE,IAAMC,EAlCU,SAAC1D,EAAsB7G,EAAe4G,GACtD,GAAIA,EAAI,EAAG,CAGP,IAFA,IAAI4D,EAAW3D,EACXrI,EAAS,EACNoI,EAAIpI,EAASsI,EAAgBD,EAAe,GAAGrI,OAAS,GAC3DgM,GAAY,EACZhM,GAAUsI,EAAgBD,EAAe,GAAGrI,OAEhD,OAAOgM,EAAW1D,EAAgBpK,OAAS,EAAIoK,EAAgBpK,OAAS,EAAI8N,EAEhF,GAAI5D,EAAI,EAAG,CAGP,IAFA,IAAI4D,EAAWxK,EACXxB,EAAS,EACNgM,EAAW,GAAKC,KAAKC,IAAI9D,GAAKpI,EAASsI,EAAgB9G,EAAQ,GAAGxB,OAAS,GAC9EgM,GAAY,EACZhM,GAAUsI,EAAgB9G,EAAQ,GAAGxB,OAEzC,OAAOgM,EAEX,OAAO,KAeQG,CAAYxD,EAAsBlF,QAASoI,EAAUzD,GAWpE,GAAI2D,IAAWF,GAAuB,OAAXE,EAAiB,CACxCK,QAAQC,IAAIN,EAAQF,EAAUzD,GAC9B,IAAIqC,EAAqB5M,EAAQyK,EAAiBuD,EAAUE,GAC5DtB,EAAqBA,EAAmBpJ,IAAI,SAACpD,EAAMuD,GAAP,OAAApD,OAAAuD,EAAA,EAAAvD,CAAA,GACrCH,EADqC,CAExCmK,EAAGqC,EAAmBK,OAAO,SAACI,EAAOjN,EAAMoE,GAIvC,OAHU,IAANA,GAAWA,GAAKb,IAChB0J,GAAST,EAAmBpI,EAAI,GAAGrC,QAEhCkL,GACR,OAEP3C,EAAmBkC,GACnB2B,QAAQC,IAAI5B,GAEhB,IAAM6B,GAASlE,EAAIU,EAAOrF,QAAQ,GAAKqF,EAAOrF,QAAQ,GAA+B,IAAzB2E,EAAIU,EAAOrF,QAAQ,IAAY2E,EAAIU,EAAOrF,QAAQ,GAC1GqF,EAAOrF,QAAQ,GAA+B,IAAzB2E,EAAIU,EAAOrF,QAAQ,IAAY2E,GAAKM,EAAkBjF,QAE/E,GADA2F,EAAU,CAAChB,EAAGkE,EAAOlI,MAAO,IAAK0H,WAAW,KACvCN,IACD9C,EAAkBjF,QAAU,KAC5B2F,EAAU,CAAChB,EAAGE,EAAgBuD,GAAUzD,EAAGhE,MAAO,EAAG0H,WAAW,EAAOS,OAAQ,kBAAM9D,EAAe,QAC/F+D,KAAQlE,EAAiBM,EAAcnF,UAAU,CAClD,IAAMgJ,EAAWnE,EAAgBjH,IAAI,SAAApD,GAAI,OAAIA,EAAKsD,KAClDN,EAASd,EAAkB1D,EAAYgQ,MAGhD,CAACC,YAAY,IAEhB,OACIrI,EAAA1I,EAAA2I,cAAC2D,GAAD,CAAcC,QAASlI,EAAOyD,SACzB4F,EAAY,SAAC7E,EAAOvG,EAAM0O,EAAGtK,GAAjB,OACTgC,EAAA1I,EAAA2I,cAACsI,GAADxO,OAAAyO,OAAA,GAAiBzN,GAAQhB,OAAAuD,EAAA,EAAAvD,CAAA,GAAQ+M,EAAQlN,IAAzC,CAAiDuG,MAAOgE,IAAgBvK,EAAKsD,GAAK4H,EAAS3E,EAC9EhB,IAAKuF,EAAYtF,QAAQpB,KAClCgC,EAAA1I,EAAA2I,cAACwI,GAAD,CAAcxM,KAAMrC,EAAKqC,KAAM7D,WAAYA,EAAYkE,QAASA,SAM3C6L,MCjOnCO,GAAoBvK,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGL,CAAH,sLAwBjBwK,IAXiBxK,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGL,CAAH,4KAWUA,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGL,CAAH,+IAOX,SAAAM,GAAK,OAAIvE,EAAeuE,EAAMC,UAAUtE,mBAEpD,SAAAqE,GAAK,OAAKA,EAAMmK,iBAAmBnK,EAAMoK,UAAYpK,EAAMgE,YAAlD,wOAAApK,OAWO6B,EAAeuE,EAAMC,UAAUrE,QAXtC,WAaT,SAAAoE,GAAK,OAAKA,EAAMoK,WAAapK,EAAMgE,YAAchE,EAAMmK,iBAA9C,wOAAAvQ,OAWO6B,EAAeuE,EAAMC,UAAUrE,QAXtC,WAaT,SAAAoE,GAAK,OAA8B,IAA1BA,EAAMmK,kBAAgD,IAAnBnK,EAAMoK,UAAzC,8QAaT,SAAApK,GAAK,OAAIA,EAAMgE,WAAN,wWAAApK,OAeiB6B,EAAeuE,EAAMC,UAAUvE,WAfhD,YAkBT,SAAAsE,GAAK,OAAIA,EAAMgE,WAAN,WAAApK,OACEyI,GADF,OAAAzI,OACqByI,GADrB,0JA6HEnC,OAAMC,KAzGiB,SAAAC,GAGO,IAFF3B,EAEE2B,EAFF3B,GAAI4B,EAEFD,EAFEC,UAAWgK,EAEbjK,EAFaiK,UAAWC,EAExBlK,EAFwBkK,aAC1BC,EACEnK,EADFmK,cAAeC,EACbpK,EADaoK,WAAYC,EACzBrK,EADyBqK,UAG5DtM,EAAWqC,eACXlE,EAAW8H,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAAS/H,UAAUgI,MACzE1H,EAAgBwH,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASzH,gBAEpE8N,EAAa7J,iBAAe,GAC5BH,EAAMG,iBAAuB,MAC7BwE,EAAYsF,sBAAY,SAACzN,GACA,IAAvBwN,EAAW/J,SAAiBD,EAAIC,UAChC+J,EAAW/J,QAAUD,EAAIC,QAAQuH,cAEjCwC,EAAW/J,UAAYzD,GACvBqN,EAAcrN,EAAOwN,EAAW/J,QAASlC,IAE9C,IAfsCsC,EAkBHC,mBAAiB,OAlBdC,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAAyF,EAAA,GAkBlC6J,EAlBkC3J,EAAA,GAsCnCwB,GAtCmCxB,EAAA,GAsClB0J,sBAAY,WAC/BH,EAAW/L,GACXN,EAASd,EAAuBoB,KACjC,KAEGX,EAAQuM,EAAYA,EAAUhL,OAAO,SAAAwK,GACvC,MAAoB,QAAhBe,IAGgB,WAAhBA,EACoB,IAAbf,EAAE3Q,OAEO,cAAhB0R,EACoB,IAAbf,EAAE3Q,YADb,KAGC,GArDoCgN,EAwDb7E,qBAAU,iBAAO,CACzCwJ,EAAG,KAzDkCzE,EAAA9K,OAAA4F,EAAA,EAAA5F,CAAA4K,EAAA,GAwDlCG,EAxDkCD,EAAA,GAwD1BE,EAxD0BF,EAAA,GA4DnC0E,EAAOC,aAAS,SAAArE,GAAgB,IAAdsE,EAActE,EAAdsE,SAChBA,IACA7M,EAASd,EAAmB5B,EAAe6O,KAC3CW,GAAgB,GAChB3E,EAAU,CAACuE,EAAG,OAEbG,IACD7M,EAASd,EAAmBnB,IAC5B+O,GAAgB,GAChB3E,EAAU,CAACuE,EAAG,OArEmBlG,EA0ED3D,oBAAkB,GA1EjB4D,EAAAtJ,OAAA4F,EAAA,EAAA5F,CAAAqJ,EAAA,GA0ElCuG,EA1EkCtG,EAAA,GA0EpBqG,EA1EoBrG,EAAA,GAAA0C,EA4EGtG,oBAAkB,GA5ErBuG,EAAAjM,OAAA4F,EAAA,EAAA5F,CAAAgM,EAAA,GA4ElChH,EA5EkCiH,EAAA,GA4EjB4D,EA5EiB5D,EAAA,GA6EnChH,EAAkB,WACpB4K,GAAkB7K,IAItB,OACIiB,EAAA1I,EAAA2I,cAACyI,GAAD3O,OAAAyO,OAAA,IAAwBU,GAADnP,OAAAuD,EAAA,EAAAvD,CAAA,GAAkBwP,KAAzC,CAAkDpK,IAAKA,IACnDa,EAAA1I,EAAA2I,cAAC0I,GAAD,CAAuBjK,SAAUqK,EAAc5I,MAAO2E,EAC/BrC,UAAW1H,IAAaM,EACxBuN,gBAAiBM,EACjBL,SAAUc,GAC7B3J,EAAA1I,EAAA2I,cAAC4J,GAAD,CAAgB5I,OAAQ/G,EAAe6O,GAAe7H,eAAgBA,EACtDC,QAhEZ,WACZ,IAAM3I,EAAS,uCACVsR,QAAQ,QAAS,SAACC,EAAGC,GAAJ,OAAW,KAAOD,EAAqB,GAAhBnC,KAAKqC,SAAgB,EAAU,EAAJD,EAAU,GAAME,SAAS,MAOjGtN,EAASd,EANO,CACZ7D,MAAO,GACPiF,GAAI1E,EACJJ,WAAY8E,EACZiG,YAAY,GAEkBjG,IAClCN,EAASd,GAAyB,KAsDQsF,SAAUpC,IAC5CgB,EAAA1I,EAAA2I,cAACkK,GAAD,CAAerL,UAAWA,EAAW5B,GAAIA,EAAI6B,gBAAiBA,EAC/CC,gBAAiBA,EAAiB1C,QAASpC,EAAe6O,KACzE/I,EAAA1I,EAAA2I,cAACmK,GAAD,CAA6BhS,WAAY8E,EAAIX,MAAOA,EAAOuH,UAAWA,EAAWxH,QAASpC,EAAe6O,QAUrFZ,MC/N9BkC,GAAclM,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,cAAAC,YAAA,YAAGL,CAAH,iOAQC,SAAAM,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAASvE,YACnB,SAAAsE,GAAK,OAAIA,EAAMC,SAASnE,eAGpB,SAAAkE,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAASvE,aAe1BmQ,GAXiB,WAE5B,IAAMC,EAAiB1H,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASxH,qBAAqByH,MAEhG,OACI/C,EAAA1I,EAAA2I,cAACoK,GAAD,CAAa3L,SAAU6L,GACnBvK,EAAA1I,EAAA2I,cAACqB,GAAA,EAAD,CAAiBC,KAAK,YClB5BiJ,GAAoBrM,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,YAAGL,CAAH,iEAGZ,SAAAM,GAAK,OAAIA,EAAMgM,SAGpBC,GAA6BvM,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,0CAAAC,YAAA,YAAGL,CAAH,2CAuVjBQ,OAAMC,KAjUoB,SAAAC,GAAkC,IAAhC8L,EAAgC9L,EAAhC8L,oBAAqBC,EAAW/L,EAAX+L,MAGtD7P,EAAW8H,aAAY,SAACgI,GAAD,OAAyBA,EAAM/H,SAAS/H,UAAUgI,MACzElI,EAAYgI,aAAY,SAACgI,GAAD,OAAyBA,EAAM/H,SAASjI,WAAWsN,MAC3EvL,EAAWqC,eAEX6L,EAAUC,kBAAQ,WACpB,OAAOH,GAAS,IAAO,EAAIA,GAAS,KAAO,EAAIA,GAAS,IAAM,EAAIA,GAAS,IAAM,EAAI,GACtF,CAACA,IACEI,EAAYD,kBAAQ,kBAAMH,EAAQE,GAAS,CAACF,IAClD1L,oBAAU,WACN+L,IACAC,EAAW,SAAAlN,GACP,IAAMmN,EAAkBC,EAAUhM,QAAQiM,KAAK,SAAChO,GAAD,OAAUA,EAAKF,QAAUa,IACxE,MAAO,CAACsN,EAAGH,EAAgBG,EAAGvH,EAAGoH,EAAgBpH,MAEtD,CAAC6G,EAAOE,EAASE,IAIpB,IAAMO,EAAiBjM,iBAA8C,IAC/D0J,EAAgBI,sBAAY,SAACzN,EAAgBuB,GAC/C,IAAMsO,EAAaD,EAAenM,QAAQhC,UAAU,SAAAxD,GAAI,OAAIA,EAAKsD,KAAOA,IAClEuO,GAAkC,IAAhBD,EAAA,GAAAnT,OAAA0B,OAAAC,EAAA,EAAAD,CAAwBwR,EAAenM,SAAvC,CAAgD,CAACzD,SAAQuB,QAC3EqO,EAAenM,QAAQpC,IAAI,SAACpD,EAAMoE,GAChC,OAAIA,IAAMwN,EAAmB,CAAC7P,SAAQuB,MAC/BtD,IAEf2R,EAAenM,QAAUqM,EAErBA,EAAgB5R,SAAWgB,EAAUhB,SAErCoR,IACAC,EAAW,SAAAlN,GACP,IAAMmN,EAAkBC,EAAUhM,QAAQiM,KAAK,SAAChO,GAAD,OAAUA,EAAKF,QAAUa,IACxE,MAAO,CAACsN,EAAGH,EAAgBG,EAAGvH,EAAGoH,EAAgBpH,OAG1D,CAAClJ,EAAW+P,EAAOE,EAASE,IAEzB/B,EAAaG,sBAAY,SAAClM,GAC5BqO,EAAenM,QAAUmM,EAAenM,QAAQtB,OAAO,SAAAlE,GAAI,OAAIA,EAAKsD,KAAOA,KAC5E,IAEGvB,EAAS2D,iBAAe,GACxB8L,EAAY9L,iBAA6B,IA9CwBoM,EAgDzCC,sBAAW9Q,EAAUhB,OAAQ,SAAAmE,GACvD,GAAiC,IAA7BoN,EAAUhM,QAAQvF,OAAc,MAAO,CAACyR,EAAG,EAAGvH,EAAG,EAAGa,OAAQ,EAAGQ,QAAS,EAAGwG,QAAS,SACxF,IAAMT,EAAkBC,EAAUhM,QAAQiM,KAAK,SAAChO,GAAD,OAAUA,EAAKF,QAAUa,IACxE,MAAO,CACHsN,EAAGH,EAAkBA,EAAgBG,EAAI,EACzCvH,EAAGoH,EAAkBA,EAAgBpH,EAAI,EACzCqB,QAAS,EACTR,OAAQ,EACRgH,QAAS,UAEd,CAAC/Q,IA1DmEgR,EAAA9R,OAAA4F,EAAA,EAAA5F,CAAA2R,EAAA,GAgDhEI,EAhDgED,EAAA,GAgDvDX,EAhDuDW,EAAA,GA8DvE3M,oBAAU,WACN,IAAKnE,GAAyC,IAA7BqQ,EAAUhM,QAAQvF,OAAc,CAC7C,IAAMkS,EAAa,IAAIC,MAAMlB,GAASmB,KAAK,GAC3Cb,EAAUhM,QAAUvE,EAAUmC,IAC1B,SAACpD,EAAMoE,GACH,IAAMkO,EAAwBX,EAAenM,QAAQiM,KAAK,SAAAhO,GAAI,OAAIzD,EAAKsD,KAAOG,EAAKH,KAC7EvB,EAASuQ,EAAwBA,EAAsBvQ,OAAS,EAChEwQ,EAASnO,EAAI8M,EACbQ,EAAIN,EAAYmB,EAChBpI,GAAKgI,EAAWI,IAAWxQ,GAAUA,EACrCyQ,EAASd,EAAIN,EACbqB,EAAOtI,EAAIpI,EACX2Q,EAAmBhB,EAAIN,EAAY,EACnCuB,EAAiBxI,EAAIpI,EAAS,EAC9BwB,EAAQa,EACd,MAAO,CAACsN,IAAGvH,IAAGpI,SAAQuB,GAAItD,EAAKsD,GAAImP,OAAMD,SAAQE,mBAAkBC,iBAAgBpP,WAE3FxB,EAAOyD,QAAUwI,KAAK4E,IAALC,MAAA7E,KAAI7N,OAAAC,EAAA,EAAAD,CAAQgS,IAC7BnP,EAASd,EAAkBH,EAAOyD,UAClCuL,EAAoB,CAAChP,OAAQA,EAAOyD,UAYxC,GAVIrE,GAAYqQ,EAAUhM,QAAQvF,OAASgB,EAAUhB,SACjDuR,EAAUhM,QAAU,CAAC,CACjBkM,EAAG,EAAGvH,EAAG,EAAGpI,OAAQ,EAAGuB,GAAIrC,EAAU,GAAGqC,GAAImP,KAAM,EAClDD,OAAQ,EAAGE,iBAAkB,EAAGC,eAAgB,EAAGpP,MAAO,IAF1C9E,OAAA0B,OAAAC,EAAA,EAAAD,CAGdqR,EAAUhM,UAASpC,IAAI,SAACpD,EAAMoE,GAChC,OAAU,IAANA,EAAgBpE,EACbG,OAAAuD,EAAA,EAAAvD,CAAA,GAAIH,EAAX,CAAiBuD,MAAOvD,EAAKuD,MAAQ,MAEzC8N,KAEAlQ,GAAYqQ,EAAUhM,QAAQvF,OAASgB,EAAUhB,OAAQ,CACzD,IAAM6S,EAAmBtB,EAAUhM,QAAQhC,UAAU,SAAAxD,GAAI,OACC,IAAtDiB,EAAUuC,UAAU,SAAAC,GAAI,OAAIA,EAAKH,KAAOtD,EAAKsD,OAC3CyP,EAAcvB,EAAUhM,QAAQsN,GACtCtB,EAAUhM,QAAUgM,EAAUhM,QAAQpC,IAAI,SAACpD,GACvC,IAAMuD,EAAQvD,EAAKuD,MAAQwP,EAAYxP,MAAQvD,EAAKuD,MAAQ,EAAIvD,EAAKuD,MACrE,OAAOpD,OAAAuD,EAAA,EAAAvD,CAAA,GAAIH,EAAX,CAAiBuD,YAClBW,OAAO,SAAClE,EAAMoE,GAAP,OAAaA,IAAM0O,IAC7BzB,IAEAG,EAAUhM,QAAQvF,SAAWgB,EAAUhB,QAAQoR,IACnDC,EAAW,SAAAlN,GACP,IAAMmN,EAAkBC,EAAUhM,QAAQiM,KAAK,SAAChO,GAAD,OAAUA,EAAKF,QAAUa,IACxE,MAAO,CAACsN,EAAGH,EAAgBG,EAAGvH,EAAGoH,EAAgBpH,KAErDgE,QAAQC,IAAIoD,EAAUhM,UAEvB,CAACvE,IAEJ,IAAMoQ,EAAsB,WACxB,IAAMc,EAAa,IAAIC,MAAMlB,GAASmB,KAAK,GAC3Cb,EAAUhM,QAAUgM,EAAUhM,QAAQpC,IAAI,SAACpD,EAAMoE,GAC7C,IAAMkO,EAAwBX,EAAenM,QAAQiM,KAAK,SAAAhO,GAAI,OAAIzD,EAAKsD,KAAOG,EAAKH,KAC7EvB,EAASuQ,EAAwBA,EAAsBvQ,OAAS,EAChEwQ,EAASnO,EAAI8M,EACbQ,EAAIN,EAAYmB,EAChBpI,GAAKgI,EAAWI,IAAWxQ,GAAUA,EACrCyQ,EAASd,EAAIN,EACbqB,EAAOtI,EAAIpI,EACX2Q,EAAmBhB,EAAIN,EAAY,EACnCuB,EAAiBxI,EAAIpI,EAAS,EACpC,OAAO5B,OAAAuD,EAAA,EAAAvD,CAAA,GAAIH,EAAX,CAAiB0R,IAAGvH,IAAGqI,SAAQC,OAAMC,mBAAkBC,iBAAgB5Q,aAEvEiM,KAAK4E,IAALC,MAAA7E,KAAI7N,OAAAC,EAAA,EAAAD,CAAQgS,MAAgBpQ,EAAOyD,UACnCzD,EAAOyD,QAAUwI,KAAK4E,IAALC,MAAA7E,KAAI7N,OAAAC,EAAA,EAAAD,CAAQgS,IAC7BpB,EAAoB,CAAChP,OAAQA,EAAOyD,UACpCxC,EAASd,EAAkBH,EAAOyD,YAgCpCwN,EAActN,iBAAe,GAC7BuN,EAAWvN,iBAAsB,CACnC+M,KAAM,EACN1Q,OAAQ,EACR2Q,iBAAkB,EAClBpP,GAAI,GACJC,MAAO,EACPiP,OAAQ,EACRG,eAAgB,EAChBjB,EAAG,EACHvH,EAAG,IAgBD+C,GAdSxH,iBAAqE,CAChF6C,KAAM,EAAG2K,MAAO,EAAGC,IAAK,EAAGC,OAAQ,IAavBjG,aAAQ,SAAA5B,GAGO,IAFKhI,EAELpD,OAAA4F,EAAA,EAAA5F,CAAAoL,EAFF+B,KAEE,MAFaC,EAEbhC,EAFagC,KAEb8F,EAAAlT,OAAA4F,EAAA,EAAA5F,CAAAoL,EAFmBiC,SAEnB,GAF8BkE,EAE9B2B,EAAA,GAFiClJ,EAEjCkJ,EAAA,GADFC,EACE/H,EADF+H,OAAQ5F,EACNnC,EADMmC,MAAOD,EACblC,EADakC,MAOxC,GALK,OAALA,QAAK,IAALA,KAAOE,kBACPqF,EAAYxN,QAAUgM,EAAUhM,QAAQhC,UAAU,SAAAxD,GAAI,OAAIA,EAAKuD,QAAUA,IACrEmK,IACAuF,EAASzN,QAAUgM,EAAUhM,QAAQwN,EAAYxN,UAEjD8N,EAAQ,CACR,IAAMvF,EA7Ca,SAAC2D,EAAWvH,GACnC,IAAMoJ,EAAON,EAASzN,QAAQkN,iBAAmBhB,EAC3C8B,EAAOP,EAASzN,QAAQmN,eAAiBxI,EAC3C/F,EAAIoN,EAAUhM,QAAQhC,UAAU,SAAAxD,GAChC,GAAIA,EAAK0R,EAAI6B,GAAQvT,EAAKwS,OAASe,GAAQvT,EAAKmK,EAAIqJ,GAAQxT,EAAKyS,KAAOe,EAAM,OAAO,IAEzF,OAAOpP,EAAInD,EAAUhB,QAAUmE,GAAK,EAAIA,EAAI,KAuCvBqP,CAAmB/B,EAAGvH,GACtB,OAAb4D,GAAqBA,IAAaiF,EAAYxN,SAjE1C,SAACkO,EAAkB3F,GAC/B,IChLa4F,EAAiBC,EAAgBC,EDgLxC1B,EAAa,IAAIC,MAAMlB,GAASmB,KAAK,GAC3Cb,EAAUhM,SCjLGmO,EDiLYnC,EAAUhM,QCjLLoO,EDiLcF,ECjLEG,EDiLQ9F,ECjLW4F,EAAIvQ,IAAI,SAAC0Q,EAAKC,GACnF,OAAIA,IAAQH,EAAeD,EAAIE,GAC3BE,IAAQF,EAAeF,EAAIC,GACxBE,KD8K6D1Q,IAAI,SAACpD,EAAMoE,GACvE,IAAMmO,EAASnO,EAAI8M,EACbQ,EAAIN,EAAYmB,EAChBpI,GAAKgI,EAAWI,IAAWvS,EAAK+B,QAAU/B,EAAK+B,OAC/CyQ,EAASd,EAAIN,EACbqB,EAAOtI,EAAInK,EAAK+B,OAChB2Q,EAAmBhB,EAAIN,EAAY,EACnCuB,EAAiBxI,EAAInK,EAAK+B,OAAS,EACzC,OAAO5B,OAAAuD,EAAA,EAAAvD,CAAA,GAAIH,EAAX,CAAiB0R,IAAGvH,IAAGqI,SAAQC,OAAMC,mBAAkBC,qBAEvD3E,KAAK4E,IAALC,MAAA7E,KAAI7N,OAAAC,EAAA,EAAAD,CAAQgS,MAAgBpQ,EAAOyD,UACnCzD,EAAOyD,QAAUwI,KAAK4E,IAALC,MAAA7E,KAAI7N,OAAAC,EAAA,EAAAD,CAAQgS,IAC7BpB,EAAoB,CAAChP,OAAQA,EAAOyD,UACpCxC,EAASd,EAAkBH,EAAOyD,WAmD9BwO,CAAQhB,EAAYxN,QAASuI,GAEjCuD,EAAW,SAAAlN,GACP,GAAIA,IAAMb,EACN,MAAO,CACHmO,EAAGuB,EAASzN,QAAQkM,EAAIA,EACxBvH,EAAG8I,EAASzN,QAAQ2E,EAAIA,EACxBa,OAAQ,EACR6C,UAAW,SAACoG,GAAD,MAA8B,WAANA,IAG3C,IAAM1C,EAAkBC,EAAUhM,QAAQiM,KAAK,SAAChO,GAAD,OAAUA,EAAKF,QAAUa,IACxE,MAAO,CAACsN,EAAGH,EAAgBG,EAAGvH,EAAGoH,EAAgBpH,KAGpDoD,GACD,WAAC,IAAAiB,EAAA/Q,EAAAC,EAAAC,MAAA,SAAAuW,GAAA,cAAAA,EAAArW,KAAAqW,EAAApW,MAAA,cAAAoW,EAAApW,KAAA,EAAAL,EAAAC,EAAAM,MACSsT,EAAW,SAAAlN,GACb,IAAMmN,EAAkBC,EAAUhM,QAAQiM,KAAK,SAAChO,GAAD,OAAUA,EAAKF,QAAUa,IACxE,MAAO,CAACsN,EAAGH,EAAgBG,EAAGvH,EAAGoH,EAAgBpH,EAAGa,OAAQ,MAHnE,OAKSwD,EAAWgD,EAAUhM,QAAQpC,IAAI,SAAApD,GAAI,OAAIA,EAAKsD,KACpDN,EAASd,EAAsBsM,IANlC,wBAAA0F,EAAA9V,UAAD,IASL,CAACqQ,YAAY,KAhOuD7I,EAkOrBC,mBAAwB,MAlOHC,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAAyF,EAAA,GAkOhEuO,EAlOgErO,EAAA,GAkO7CsO,EAlO6CtO,EAAA,GAAAiF,EAwSf7E,qBAAU,iBAAO,CACrEwL,EAAG,EACHvH,EAAG,EACHqB,QAAS,EACTwG,QAAS,UA5S0D/G,EAAA9K,OAAA4F,EAAA,EAAA5F,CAAA4K,EAAA,GAwShEsJ,EAxSgEpJ,EAAA,GAwS1CqJ,EAxS0CrJ,EAAA,GA+SvE,OACI7E,EAAA1I,EAAA2I,cAAAD,EAAA1I,EAAA6W,SAAA,KACInO,EAAA1I,EAAA2I,cAACyK,GAAD,CAA4BrJ,QArCR,kBAAAhK,EAAAC,EAAAC,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cACxBwW,EAAwB,CACpBE,GAAI,SAAMC,GAAN,OAAAhX,EAAAC,EAAAC,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EAAAL,EAAAC,EAAAM,MACMyW,EAAQ,CAACjJ,QAAS,KADxB,cAAA9M,EAAAZ,KAAA,EAAAL,EAAAC,EAAAM,MAEMyW,EAAQ,CAACzC,QAAS,UAFxB,wBAAAtT,EAAAN,aAKRkT,EAAW,SAAAlN,GACP,GAAIA,IAAM+P,EAAmB,MAAO,CAACK,IAAI,GACzC,IAAMvB,EAAWzB,EAAUhM,QAAQiM,KAAK,SAAAzR,GAAI,OAAIA,EAAKuD,QAAUa,IAC/D,MAAO,CAACsN,EAAGuB,EAASvB,EAAGvH,EAAG8I,EAAS9I,KAVfxL,EAAAb,KAAA,EAAAL,EAAAC,EAAAM,MAYlB+S,EAAoB,CACtBW,EAAG,QACHgD,QAAS,GACTC,QAAS,GACTxK,EAAG,IACHpI,OAAQA,EAAOyD,QACfqI,UAAW,SAAC+G,GAAD,MAAmB,WAATA,MAlBD,OAoBxB5R,EAASd,EAAmBnB,IAC5BqT,EAAqB,MACrB9C,EAAW,SAAAlN,GACP,OAAIA,IAAM+P,EAA0B,CAAC3I,QAAS,EAAGwG,QAAS,SACnD,CAACwC,IAAI,KAxBQ,wBAAA7V,EAAAP,WAsChBmI,MAAO8N,GACPjO,EAAA1I,EAAA2I,cAACwO,GAAD,OAEkB,IAArB5T,EAAUhB,QAAgBgB,EAAUmC,IAAI,SAACK,EAAMW,GAAP,OACrCgC,EAAA1I,EAAA2I,cAACuK,GAADzQ,OAAAyO,OAAA,CAAmBrI,MAAO2L,EAAQ9N,IAAQjD,GAAQhB,OAAAuD,EAAA,EAAAvD,CAAA,GAAQ+M,EAAQ9I,IAAlE,CACmBqD,QAAS,kBApFtB,SAAOlE,GAAP,IAAA0P,EAAA,OAAAxV,EAAAC,EAAAC,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,WACVqD,EADU,CAAA5C,EAAAT,KAAA,eAAAS,EAAAL,OAAA,wBAER+U,EAAWzB,EAAUhM,QAAQiM,KAAK,SAAAzR,GAAI,OAAIA,EAAKuD,QAAUA,IAFjDhF,EAAAT,KAAA,EAAAL,EAAAC,EAAAM,MAGRsT,EAAW,SAAAlN,GACb,OAAIA,IAAMb,EAAc,CACpBiR,GAAI,SAAMC,GAAN,OAAAhX,EAAAC,EAAAC,MAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cAAAuF,EAAAvF,KAAA,EAAAL,EAAAC,EAAAM,MACMyW,EAAQ,CAACjJ,QAAS,KADxB,cAAAnI,EAAAvF,KAAA,EAAAL,EAAAC,EAAAM,MAEMyW,EAAQ,CAACzC,QAAS,UAFxB,wBAAA3O,EAAAjF,YAKD,CAACoW,IAAI,MAVF,cAYdzD,EAAoB,CAChBhP,OAAQ+S,OAAOC,YACfrD,EAAG,OACHgD,QAAS,EACTC,QAAS,EACTxK,EAAG,IAEPnH,EAASd,EAAmB5B,GAAgBW,EAAUhB,OAASsD,GAASjD,EAAeL,UACvFmU,EAAqB7Q,GApBPhF,EAAAT,KAAA,GAAAL,EAAAC,EAAAM,MAqBRsT,EAAW,SAAAlN,GACb,OAAIA,IAAMb,EAAc,CAACiR,IAAI,GACtB,CACHrK,EAAG2K,OAAOC,YAAc,EAAI9B,EAASlR,OAAS,EAC9C2P,EAAGV,EAAQ,EAAKA,EAAQE,EAAW,MAzB7B,QA4BdoD,EAAwB,CACpBE,GAAI,SAAMC,GAAN,OAAAhX,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAM,MACMyW,EAAQ,CACVtK,EAAG2K,OAAOC,YAAc,EAAI9B,EAASlR,OAAS,EAAI,GAClD2P,EAAGV,EAAQ,EAAKA,EAAQE,EAAW,EAAI,GACvCc,QAAS,QACTnE,WAAW,KALf,cAAAjQ,EAAAE,KAAA,EAAAL,EAAAC,EAAAM,MAOMyW,EAAQ,CAACjJ,QAAS,EAAGqC,WAAW,KAPtC,wBAAAjQ,EAAAQ,aA7BM,yBAAAG,EAAAH,UAoF4BkR,CAAUlL,IACzByM,OAAQO,EAAWvK,IAAKpD,EAAKH,KAC5C8C,EAAA1I,EAAA2I,cAAC2O,GAAD,CAAU1R,GAAIG,EAAKH,GAAI6L,cAAelO,EAAUhB,OAASmE,GAAK9D,EAAeL,OACnEoP,WAAYA,EAAYD,cAAeA,EAAeE,UAAWlL,IAAM+P,EACvEjP,UAAWzB,EAAKpF,MAAO6Q,UAAWzL,EAAKd,aAM9B4L,eE9VjC0G,GAAW1Q,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGL,CAAH,6GASR2Q,GAAoB3Q,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,gBAAGL,CAAH,qFAQjB4Q,GAAmB5Q,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGL,CAAH,8JAQN,SAAAM,GAAK,OAAIA,EAAMC,SAASjE,mBAGlCuU,GAAiB7Q,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGL,CAAH,8KAKR,SAAAM,GAAK,OAAIA,EAAMoF,SAGX,SAAApF,GAAK,OAAIA,EAAMC,SAASvE,aA2HzB8U,GAvHiB,WAE5B,IAAM1E,EAAiB1H,aAAY,SAACgI,GAAD,OAAyBA,EAAM/H,SAASxH,qBAAqByH,MAC1FhI,EAAW8H,aAAY,SAACgI,GAAD,OAAyBA,EAAM/H,SAAS/H,UAAUgI,MACzEpH,EAASkH,aAAY,SAACgI,GAAD,OAAyBA,EAAM/H,SAASnH,QAAQoH,MACrEnG,EAAWqC,eAEjBC,oBAAU,WACNtC,EZwYuC,SAAOA,GAAP,OAAAvF,EAAAC,EAAAC,MAAA,SAAAuW,GAAA,cAAAA,EAAArW,KAAAqW,EAAApW,MAAA,OAM3CkF,EAASF,IAAmB,IANe,wBAAAoR,EAAA9V,aYvYxC,IACHkH,oBAAU,WAEN,OADA6I,QAAQC,IAAI,WACL,kBAAMD,QAAQC,IAAI,mBAC1B,IAb+B,IAAAxI,EAeJC,oBAAkB,GAfdC,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAAyF,EAAA,GAe3B0P,EAf2BxP,EAAA,GAelByP,EAfkBzP,EAAA,GAgBlCR,oBAAU,WACFvD,EAAS+S,OAAOC,YAAaQ,GAAW,GACvCA,GAAW,IACjB,CAACxT,IAnB8B,IAAAyH,EAqBR3D,mBAAiB,GArBT4D,EAAAtJ,OAAA4F,EAAA,EAAA5F,CAAAqJ,EAAA,GAqB3BwH,EArB2BvH,EAAA,GAqBpB+L,EArBoB/L,EAAA,GAAAsB,EAwBc7E,qBAAU,iBAAO,CAC7DwL,EAAG,QACHgD,QAAS,GACTC,QAAS,GACTxK,EAAG,IACHpI,OAAQ,EACR+J,OAAQ,CAACE,QAAS,IAAKC,SAAU,GAAIwJ,OAAO,MA9BdxK,EAAA9K,OAAA4F,EAAA,EAAA5F,CAAA4K,EAAA,GAwB3B2K,EAxB2BzK,EAAA,GAwBT8F,EAxBS9F,EAAA,GAiClC3F,oBAAU,WACNyL,EAAoB,CAChBW,EAAGvQ,EAAW,OAAS,QACvBuT,QAASvT,EAAW,EAAI,GACxBwT,QAASxT,EAAW,EAAI,GACxBgJ,EAAGhJ,EAAW,EAAI,OAEvB,CAACA,IAEJ,IAAMwU,EAAcjQ,iBAAuB,MAGrCkQ,EAAYlQ,iBAAe,GAC3BmQ,EAAkBnQ,iBAAe,GA9CLoQ,EA+CM5P,qBAAU,iBAAO,CACrDiE,EAAG,EACHgJ,IAAG,KACHtF,WAAW,KAlDmBkI,EAAA5V,OAAA4F,EAAA,EAAA5F,CAAA2V,EAAA,GA+C3BE,EA/C2BD,EAAA,GA+CPE,EA/COF,EAAA,GAqD5BG,EAAwBhQ,qBAAU,CACpCoF,KAAM,CAACE,QAAS,EAAG0H,MAAO,EAAGlB,QAAS,QACtCwC,GAAI,SAAMC,GAAN,OAAAhX,EAAAC,EAAAC,MAAA,SAAAuW,GAAA,cAAAA,EAAArW,KAAAqW,EAAApW,MAAA,cAAAoW,EAAApW,KAAA,EAAAL,EAAAC,EAAAM,MACMyW,EAAQa,EAAU,CAACtD,QAAS,SAAW,CAACxG,QAAS,EAAG0H,OAAQ,MADlE,cAAAgB,EAAApW,KAAA,EAAAL,EAAAC,EAAAM,MAEMyW,EAAQa,EAAU,CAAC9J,QAAS,EAAG0H,MAAO,GAAK,CAAClB,QAAS,UAF3D,wBAAAkC,EAAA9V,aAMF+X,EAASpU,EAAS+S,OAAOC,YAAc,EAAI,GAAMhT,EAASA,EAAS+S,OAAOC,YAAc,EACxFqB,EAAmBrU,GAAc+S,OAAOC,YAAc,KAAOhT,EAAS,IAA1C,EAElCsU,aAAS,SAAApR,GAAoB,IAARkF,EAAQhK,OAAA4F,EAAA,EAAA5F,CAAA8E,EAAlBqR,MAAkB,MACzBV,EAAUpQ,QAAUoQ,EAAUpQ,QAAU2E,EAAIgM,GAAUP,EAAUpQ,QAAU2E,EAAI,EAAIyL,EAAUpQ,QAAU2E,EAChGyL,EAAUpQ,QAAU2E,GAAK,EAAI,EAAIgM,EACvCN,EAAgBrQ,QAAUoQ,EAAUpQ,QAAQ2Q,GAAU,IAAMC,GAC5DH,EAAU,CACN9L,GAAIyL,EAAUpQ,QACd2N,IAAG,GAAA1U,OAAKoX,EAAgBrQ,QAArB,QAER,CAAC+Q,UAAWzB,OAAQ0B,aAAc,CAACC,SAAS,KAC/CtJ,aAAQ,SAAA5B,GAA6B,IAAhBpB,EAAgBhK,OAAA4F,EAAA,EAAA5F,CAAAoL,EAA3BmL,OAA2B,MACjC,GADiCnL,EAAZ+H,OACT,CACR,IAAMqD,GAAQxM,EACdyL,EAAUpQ,QAAUmR,EAAOR,GAAUQ,EAAO,EAAIA,EAAOA,GAAQ,EAAI,EAAIR,EACvEN,EAAgBrQ,QAAUoQ,EAAUpQ,QAAU2Q,GAAU,IAAMC,GAC9DH,EAAU,CACN9L,GAAIyL,EAAUpQ,QACd2N,IAAG,GAAA1U,OAAKoX,EAAgBrQ,QAArB,SAGZ,CAAC+Q,UAAWzB,OAAQrG,YAAY,IAGnC,IAAMmI,EAAuBzJ,aAAQ,SAAAzB,GAA2B,IAAfvB,EAAehK,OAAA4F,EAAA,EAAA5F,CAAAuL,EAAzB4K,MAAyB,MAAX7I,EAAW/B,EAAX+B,MAC5C,OAALA,QAAK,IAALA,KAAOE,kBACP,IAAMkJ,EAAO1M,EAAE2K,OAAOC,YAAc,IACpCc,EAAgBrQ,QAAUqQ,EAAgBrQ,QAAUqR,EAAO,GAAKhB,EAAgBrQ,QAAUqR,EAAO,IAAMT,EACnGP,EAAgBrQ,QAAUqR,EAAOhB,EAAgBrQ,QAAUqR,GAAQ,EAAI,EAAI,IAAMT,EACrFR,EAAUpQ,QAAU2Q,EAASN,EAAgBrQ,SAAW,IAAM4Q,GAC9DH,EAAU,CACN9L,GAAIyL,EAAUpQ,QACd2N,IAAG,GAAA1U,OAAKoX,EAAgBrQ,QAArB,KACHqI,UAAW,SAAC+G,GAAD,MAAmB,QAATA,OAI7B,OACIxO,EAAA1I,EAAA2I,cAAAD,EAAA1I,EAAA6W,SAAA,KAEQnO,EAAA1I,EAAA2I,cAACyQ,GAAA,EAAD,CAAqBC,aAAW,EAACC,SAhF5B,SAAChG,GAAD,OAAmBwE,EAASxE,IAgFoBiG,YAAY,WAAWC,UAAWvB,GACtF,kBACGvP,EAAA1I,EAAA2I,cAAC4O,GAAD,CAAU1O,MAAOmP,EAAkBnQ,IAAKoQ,GACpCvP,EAAA1I,EAAA2I,cAAC6O,GAAD,CAAmB3O,MAAO,CAAC4D,EAAG6L,EAAmB7L,IAC7C/D,EAAA1I,EAAA2I,cAAC8Q,GAAD,CAAapG,oBAAqBA,EAAqBC,MAAOA,QAK9E5K,EAAA1I,EAAA2I,cAAC8O,GAAD,CAAkBrQ,SAAU6L,EAAgByG,SAAU9B,EAAS/O,MAAO2P,GAClE9P,EAAA1I,EAAA2I,cAAC+O,GAADjV,OAAAyO,OAAA,CAAgB9J,SAAU6L,EAAgBpK,MAAO,CAAC4M,IAAK6C,EAAmB7C,OAAWkE,aAADlX,OAAAuD,EAAA,EAAAvD,CAAA,GAAiByW,KAArG,CACgB3M,QAASmM,QC5JzCkB,IAAQC,IAAIC,IAAKC,KAGjB,IAAMC,GAAanT,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGL,CAAH,gDAoBDoT,GAdqB,WAEhC,IAAMhH,EAAiB1H,aAAY,SAACgI,GAAD,OAAyBA,EAAM/H,SAASxH,qBAAqByH,MAF1D4B,EAIK7E,qBAAU,iBAAO,CACxD3F,WAAYoQ,EAAepQ,cALO0K,EAAA9K,OAAA4F,EAAA,EAAA5F,CAAA4K,EAAA,GAI/B6M,EAJ+B3M,EAAA,GAIZ4M,EAJY5M,EAAA,GAWtC,OAJA3F,oBAAU,WACNuS,EAAc,CAACtX,WAAYoQ,EAAepQ,cAC3C,CAACoQ,IAEGvK,EAAA1I,EAAA2I,cAACqR,GAAD,CAAYnR,MAAOqR,KCtBxBE,GAAUvT,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGL,CAAH,+MAYPwT,GAAiBxT,IAAOE,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGL,CAAH,mKAadyT,GAAazT,IAAOE,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGL,CAAH,yLAWA,SAAAM,GAAK,OAAIA,EAAMC,SAASrE,SACxB,SAAAoE,GAAK,OAAIA,EAAMC,SAASvE,aAGlC0X,GAAqB1T,IAAOE,IAAVC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAGL,CAAH,sFAQlB2T,GAAW3T,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGL,CAAH,wFAQR4T,GAAkB5T,IAAOE,IAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGL,CAAH,kLAML,SAAAM,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,OAK/B,SAAA+D,GAAK,OAAKA,EAAMuT,gBAAP,kCAAA3Z,OAESoG,EAAMC,SAASvE,WAFxB,sBAAA9B,OAGIoG,EAAMC,SAAShE,MAHnB,YAQPuX,GAAsB9T,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,gBAAGL,CAAH,iJASnB+T,GAAgB/T,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGL,CAAH,0SAaH,SAAAM,GAAK,OAAIA,EAAMC,SAASnE,eACxB,SAAAkE,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,OAGjB,SAAA+D,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,QAI/ByX,GAAehU,YAAOC,YAASC,KAAnBC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGL,CAAH,8SAaF,SAAAM,GAAK,OAAIA,EAAMC,SAASnE,eACxB,SAAAkE,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,OAGjB,SAAA+D,GAAK,OAAIA,EAAMC,SAASvE,YAC7B,SAAAsE,GAAK,OAAIA,EAAMC,SAAShE,QAI/B0X,GAAyBjU,IAAOE,IAAVC,WAAA,CAAAC,YAAA,wCAAAC,YAAA,gBAAGL,CAAH,0FAkJbkU,GA7IO,WAElB,IAAMzV,EAAWqC,eACXlE,EAAW8H,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAAS/H,UAAUgI,MACzEwH,EAAiB1H,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASxH,qBAAqByH,MAC1FvH,EAAeqH,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAAStH,cAAcuH,MACjFuP,EAAiBzP,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASvH,qBAAqBwH,MAC1FtH,EAAYoH,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASrH,WAAWsH,MAC3EnH,EAAWiH,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASlH,UAAUmH,MACzElH,EAAiBgH,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASjH,gBAAgBkH,MACrFwP,EAAW1P,aAAY,SAACpG,GAAD,OAAyBA,EAAMqG,SAASpH,eAAeqH,MAV5D4B,EAiCI7E,qBAAU,iBAAO,CACzC0S,SAAU,KACV7W,OAAQ,OACRiP,MAAO,OACP6H,KAAM,MACNC,KAAM,MACNpH,EAAG,MACHvH,EAAG,SAxCiBc,EAAA9K,OAAA4F,EAAA,EAAA5F,CAAA4K,EAAA,GAiCjBG,EAjCiBD,EAAA,GAiCTE,EAjCSF,EAAA,GAAA6K,EA2CwB5P,qBAAU,iBAAO,CAC7D6S,UAAS,iDACTC,UAAS,gDA7CWjD,EAAA5V,OAAA4F,EAAA,EAAA5F,CAAA2V,EAAA,GA2CjBmD,EA3CiBlD,EAAA,GA2CMmD,EA3CNnD,EAAA,GA2DxBzQ,oBAAU,WACN,IAAM6T,EAAwB,IAAbnX,EAAiB,EAAIC,EAAiBD,EACjDoX,EAAY,KAAO,IAAe,IAATD,GACzBE,EAAY,IAAe,IAATF,EACxBD,EAAe,CACXH,UAAS,gBAAAta,OAAkB2a,EAAlB,YAAA3a,OAAsC2a,EAAtC,2BACTJ,UAAS,+BAAAva,OAAiC4a,EAAjC,UAAA5a,OAAmD4a,EAAnD,SAEd,CAACrX,EAAUC,IAEdqD,oBAAU,WACDoT,GAAmBvX,GAAaS,EAO1BT,GACPgK,EAAU,CACNyN,SAAU,MACVC,KAAM,OACNC,KAAM,OACNpH,EAAG,OACHvH,EAAG,SAZPgB,EAAU,CACNpJ,OAAQ,MACRiP,MAAO,MACP4H,SAAU,MACV9M,OAAQ,CAACG,SAAU,OAe5B,CAAC9K,EAAUS,EAAc8W,EAAgB7W,EAAW8W,IAEvD,IAAMW,EAAgBnI,kBAAQ,kBACtBuH,EAAiB,UAAYvX,EAAW,SAAWS,EAAe,eAC5D,QACR,CAACT,EAAUS,EAAc8W,EAAgB7W,EAAW8W,IAEpDY,EAAiBlO,yBAAciO,EAAe,CAChDhO,KAAM,CAACE,QAAS,EAAGrB,EAAG,SACtBsB,MAAO,CAACD,QAAS,EAAGrB,EAAG,MACvB0B,MAAO,CAACL,QAAS,EAAGrB,EAAG,UAM3B,OACI/D,EAAA1I,EAAA2I,cAACyR,GAAD,CAASvR,MAAO,CAACmL,EAAGxG,EAAO0N,SAAU5H,MAAO9F,EAAO8F,MAAOjP,OAAQmJ,EAAOnJ,SACrEqE,EAAA1I,EAAA2I,cAAC0R,GAAD,KACI3R,EAAA1I,EAAA2I,cAAC2R,GAAD,CAAYvQ,QAjGD,WACdtG,GAAU6B,EAASd,KACpBf,GAAU6B,EdsUlB,SAAOA,EAA2BwW,GAAlC,IAAAC,EAAAhX,EAAArB,EAAAC,EAAAC,EAAAC,EAAAmY,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhY,EAAAiY,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAld,EAAAC,EAAAC,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UAEIkF,EAASd,KACTc,EAASd,GAAwB,IAG3BuX,EAAeD,IAAWtQ,SAAShI,SACnCuB,EAAe+W,IAAWtQ,SAASjI,UACrCG,EAAaoY,IAAWtQ,SAAS9H,WACjCC,EAAamY,IAAWtQ,SAAS7H,WAE/BC,EAAsD,GACtDC,EAA0E,GAC5EmY,EAA0C,GAGxCC,EAAalX,EAAayB,OAAO,SAAAT,GAAI,OAAmE,IAA/DgW,EAAajW,UAAU,SAAAoX,GAAO,OAAIA,EAAQtX,KAAOG,EAAKH,OAC/FsW,EAAeH,EAAavV,OAAO,SAAAT,GAAI,OAAmE,IAA/DhB,EAAae,UAAU,SAAAqX,GAAO,OAAIA,EAAQvX,KAAOG,EAAKH,OACjGuW,EAAmC,GACzCpX,EAAaW,IAAI,SAAAK,GACb,IAAMmX,EAAUnB,EAAahI,KAAK,SAAAmJ,GAAO,OAAIA,EAAQtX,KAAOG,EAAKH,KAC7DsX,GAAWnX,EAAKpF,QAAUuc,EAAQvc,OAClCwb,EAAYiB,KAAKrX,KAIrBqW,EAA8B,GAC5BC,EAA+B,GACrCtX,EAAaW,IAAI,SAAAK,GACb,IAAMmX,EAAUnB,EAAahI,KAAK,SAAAmJ,GAAO,OAAIA,EAAQtX,KAAOG,EAAKH,KAC7DsX,GACAnX,EAAKd,MAAMS,IAAI,SAAAf,GACX,IAAM0Y,EAAUH,EAAQjY,MAAM8O,KAAK,SAAAsJ,GAAO,OAAIA,EAAQzX,KAAOjB,EAAKiB,KAC7DyX,EAIDA,GAAWA,EAAQ1c,QAAUgE,EAAKhE,OAClC0b,EAAYe,KAAKzY,GAJjByX,EAAWgB,KAAKzY,KAQvBuY,GAAiC,IAAtBnX,EAAKd,MAAM1C,QACvBwD,EAAKd,MAAMS,IAAI,SAAAf,GAAI,OAAIyX,EAAWgB,KAAKzY,OAGzC2X,EAAgC,GACtCP,EAAarW,IAAI,SAAAK,GACb,IAAMoX,EAAUpY,EAAagP,KAAK,SAAAoJ,GAAO,OAAIA,EAAQvX,KAAOG,EAAKH,KAC7DuX,GACApX,EAAKd,MAAMS,IAAI,SAAAf,GACKwY,EAAQlY,MAAM8O,KAAK,SAAA5S,GAAO,OAAIA,EAAQyE,KAAOjB,EAAKiB,MAE9D0W,EAAac,KAAKzY,OAO9BL,EAAW,EACa,IAAxB4X,EAAa3Z,SAAc+B,GAAsB4X,EAAa3Z,QACtC,IAAxB+Z,EAAa/Z,SAAc+B,GAAsBgY,EAAa/Z,QACxC,IAAtB0Z,EAAW1Z,SAAc+B,GAAsB2X,EAAW1Z,QACpC,IAAtB6Z,EAAW7Z,SAAc+B,GAAsB8X,EAAW7Z,QACnC,IAAvB4Z,EAAY5Z,SAAc+B,GAAsB6X,EAAY5Z,QACrC,IAAvB8Z,EAAY9Z,SAAc+B,GAAsB+X,EAAY9Z,QAChE+C,EAASd,EAAoBF,IAG7BgB,EAASd,IAAyB,IACN,IAAxB0X,EAAa3Z,QACb2Z,EAAaxW,IAAI,SAAAK,GACbrG,EAAmBqG,EAAKH,IAAIhG,KAAK,SAAAa,GACL,IAApBA,EAAK6c,YAAkBhY,EAASd,IAAyB,QAI7C,IAAxB8X,EAAa/Z,QACb+Z,EAAa5W,IAAI,SAAAf,GACbjF,EAAeiF,EAAK7D,WAAY6D,EAAKiB,IAAIhG,KAAK,SAAAa,GAClB,IAApBA,EAAK6c,YAAkBhY,EAASd,IAAyB,QAI9C,IAAvB2X,EAAY5Z,QACZ4Z,EAAYzW,IAAI,SAAAK,GACZrG,EAAwBqG,EAAKH,GAAIG,EAAKpF,OAAOf,KAAK,SAAAa,GACtB,IAApBA,EAAK6c,YAAkBhY,EAASd,IAAyB,QAI9C,IAAvB6X,EAAY9Z,QACZ8Z,EAAY3W,IAAI,SAAAf,GACZjF,EAAeiF,EAAK7D,WAAY6D,EAAKiB,GAAIjB,GAAM/E,KAAK,SAAAa,GACxB,IAApBA,EAAK6c,YAAkBhY,EAASd,IAAyB,QAKnE+X,EAAsC,eAAAgB,EAAA,OAAAxd,EAAAC,EAAAC,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,UACd,IAAtBgc,EAAW7Z,OADyB,CAAAvB,EAAAZ,KAAA,eAE9Bmd,EAAgBnB,EAAW1W,IAAI,SAAOf,GAAP,OAAA5E,EAAAC,EAAAC,MAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAT,KAAA,EAAAL,EAAAC,EAAAM,MACpBZ,EAAYiF,EAAKhE,MAAOgE,EAAK7D,YAAYlB,KAAK,SAAAa,GAC/B,IAApBA,EAAK6c,YAAkBzZ,EAAWuZ,KAAK,CACvCI,MAAO/c,EAAKA,KAAK6B,KAAKsD,GACtB6X,MAAO9Y,EAAKiB,GACZ9E,WAAYL,EAAKA,KAAK6B,KAAKxB,aAEP,IAApBL,EAAK6c,YAAkBhY,EAASd,IAAyB,OAPhC,cAAA3D,EAAAL,OAAA,SAAAK,EAAAN,MAAA,wBAAAM,EAAAH,YAFDM,EAAAZ,KAAA,EAAAL,EAAAC,EAAAM,MAY9B4F,QAAQC,IAAIoX,IAZkB,OAaV,IAAtB5Z,EAAWpB,SACXoB,EAAaA,EAAW+B,IAAI,SAAApD,GACxB,IAAM6a,EAAUvZ,EAAWmQ,KAAK,SAAAhO,GAAI,OAAIA,EAAK0X,QAAUnb,EAAKxB,aACtD4c,EAAiBpb,EAAKuC,cAAca,IAAI,SAAAxE,GAC1C,IAAMC,EAAU0C,EAAWkQ,KAAK,SAAA5S,GAAO,OAAIA,EAAQsc,QAAUvc,IAC7D,OAAIC,EAAgBA,EAAQqc,MACrBtc,IAEX,MAAO,CAACJ,WAAYqc,EAAUA,EAAQK,MAAQlb,EAAKxB,WAAY+D,cAAe6Y,MArBlD,wBAAA1c,EAAAN,WA2BlB,IAAtBub,EAAW1Z,OA/HnB,CAAAb,EAAAtB,KAAA,gBAgIcoc,EAAeP,EAAWvW,IAAI,SAAOK,GAAP,OAAAhG,EAAAC,EAAAC,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAAAL,EAAAC,EAAAM,MACnBZ,EAAgBqG,EAAKpF,OAAOf,KAAK,SAAAa,GAClB,IAApBA,EAAK6c,aACL1Z,EAAWwZ,KAAK,CAACI,MAAO/c,EAAKA,KAAK6B,KAAKsD,GAAI6X,MAAO1X,EAAKH,KACvDN,EAASd,IAAyB,QAJV,cAAAvD,EAAAT,OAAA,SAAAS,EAAAV,MAAA,wBAAAU,EAAAP,YAhI5CgB,EAAAtB,KAAA,GAAAL,EAAAC,EAAAM,MAyIc4F,QAAQC,IAAIqW,IAzI1B,eA0IkC,IAAtBJ,EAAW7Z,SACX6Z,EAAaA,EAAW1W,IAAI,SAAAf,GACxB,IAAMgZ,EAAY/Z,EAAWmQ,KAAK,SAAAhO,GAAI,OAAIA,EAAK0X,QAAU9Y,EAAK7D,aAC9D,OAAI6c,EAAkBlb,OAAAuD,EAAA,EAAAvD,CAAA,GAAIkC,EAAX,CAAiB7D,WAAY6c,EAAUH,QAC/C7Y,KAGW,IAAtBjB,EAAWnB,SACXmB,EAAaA,EAAWgC,IAAI,SAAApD,GACxB,IAAM6a,EAAUvZ,EAAWmQ,KAAK,SAAAhO,GAAI,OAAIA,EAAK0X,QAAUnb,IACvD,OAAI6a,EAAgBA,EAAQK,MACrBlb,KArJvBZ,EAAAtB,KAAA,GAAAL,EAAAC,EAAAM,MAwJcic,KAxJd,QAAA7a,EAAAtB,KAAA,wBAAAsB,EAAAtB,KAAA,GAAAL,EAAAC,EAAAM,MAyJiBic,KAzJjB,WA4JIjX,EAASd,GAAwB,IACjCc,EAASd,IAAqB,IAI1BwX,EADsB,IAAtBpY,EAAWrB,OACUwC,EAAaW,IAAI,SAAAK,GAClC,IAAMoX,EAAUvZ,EAAWmQ,KAAK,SAAAzR,GAAI,OAAIA,EAAKmb,QAAU1X,EAAKH,KAC5D,OAAIuX,EAAgB1a,OAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,EAAX,CAAiBH,GAAIuX,EAAQK,QACnCzX,IAEahB,EACF,IAAtBlB,EAAWtB,SACXyZ,EAAqBA,EAAmBtW,IAAI,SAAAK,GACxC,IAAMd,EAAQc,EAAKd,MAAMS,IAAI,SAAAf,GACzB,IAAMxD,EAAU0C,EAAWkQ,KAAK,SAAAzR,GAAI,OAAIA,EAAKmb,QAAU9Y,EAAKiB,KAC5D,OAAIzE,EAAgBsB,OAAAuD,EAAA,EAAAvD,CAAA,GAAIkC,EAAX,CAAiBiB,GAAIzE,EAAQqc,QACnC7Y,IAEX,OAAOlC,OAAAuD,EAAA,EAAAvD,CAAA,GAAIsD,EAAX,CAAiBd,eAKC,IAAtBvB,EAAWnB,QAAgB0Z,EAAW1Z,OAAS,GAnLvD,CAAAb,EAAAtB,KAAA,YAoLoC,IAAxB8b,EAAa3Z,QAAsC,IAAtBmB,EAAWnB,SACxCmB,EAAaA,EAAW8C,OAAO,SAAAT,GAAI,OAAgE,IAA5DiW,EAAmBlW,UAAU,SAAAxD,GAAI,OAAIA,EAAKsD,KAAOG,SAEzEkW,EAAW1Z,OAAS,GAvL/C,CAAAb,EAAAtB,KAAA,gBAAAsB,EAAAtB,KAAA,GAAAL,EAAAC,EAAAM,MAuLyDZ,IAAmBE,KAAK,SAAAa,GAAI,OAAIA,EAAKiF,IAAI,SAAApD,GAAI,OAAIA,EAAKsD,QAvL/G,QAAAlE,EAAAkc,GAAAlc,EAAAnB,KAAAmB,EAAAtB,KAAA,iBAAAsB,EAAAkc,GAwLc5B,EAAmBtW,IAAI,SAAAK,GAAI,OAAIA,EAAKH,KAxLlD,QAuLY6W,EAvLZ/a,EAAAkc,GAyLclB,EAA0E,IAC5C,IAAtBhZ,EAAWnB,OAAemB,EAAasY,EAAmBtW,IAAI,SAAAK,GAAI,OAAIA,EAAKH,MACnFF,IAAI,SAACmY,EAAehY,GACtB,GAAIgY,IAAkBpB,EAAa5W,GAAQ,CACzB,IAAVA,EAAa6W,EAAUU,KAAK,CAACU,UAAWD,EAAeE,gBAAiB,OACvErB,EAAUU,KAAK,CAACU,UAAWD,EAAeE,gBAAiBra,EAAWmC,EAAQ,KACnF,IAAMmQ,EAAWyG,EAAa3W,UAAU,SAAAkY,GAAM,OAAIA,IAAWH,IAC7DpB,EAAeva,EAAQua,EAAczG,EAAUnQ,MAGvD6W,EAAUhX,IAAI,SAAApD,GACV5C,EAAiB4C,EAAKwb,UAAWxb,EAAKyb,iBAAiBne,KAAK,SAAAa,GAChC,IAApBA,EAAK6c,YAAkBhY,EAASd,SArMpD,aA0M8B,IAAtBb,EAAWpB,QAAgB6Z,EAAW7Z,OAAS,GA1MvD,CAAAb,EAAAtB,KAAA,YA2MoC,IAAxBkc,EAAa/Z,QAAsC,IAAtBoB,EAAWpB,SACxCoB,EAAaA,EAAW+B,IAAI,SAAApD,GACxB,IAAM2b,EAAcjC,EAAmBjI,KAAK,SAAAhO,GAAI,OAAIA,EAAKH,KAAOtD,EAAKxB,aACrE,GAAImd,EAAa,CACb,IAAMpZ,EAAgBvC,EAAKuC,cAAc2B,OAAO,SAAAtF,GAAM,OACzB,IAD6B+c,EAAYhZ,MAAMa,UAAU,SAAAnB,GAAI,OACtFA,EAAKiB,KAAO1E,MAChB,OAAOuB,OAAAuD,EAAA,EAAAvD,CAAA,GAAIH,EAAX,CAAiBuC,kBAErB,OAAOvC,KAGXqa,EAAyE,KAC3C9Y,EAAWtB,OAAS,GAvN9D,CAAAb,EAAAtB,KAAA,gBAAAsB,EAAAtB,KAAA,GAAAL,EAAAC,EAAAM,MAuNyE,eAAA4d,EAAAC,EAAAC,EAAA,OAAAre,EAAAC,EAAAC,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,UAC7DyD,EAAW6B,IAAI,SAAAf,GACX,IAAMoB,EAAoC,IAA7B4W,EAAkBpa,OAC3Boa,EAAkB5I,KAAK,SAAAhO,GAAI,OAAIA,EAAKjF,aAAe6D,EAAK7D,kBAAcwF,EAC1E,GAAIP,EAAM,CACN,IAAMF,EAAQ8W,EAAkB7W,UAAU,SAAAC,GAAI,OAAIA,EAAKjF,aAAe6D,EAAK7D,aAC3E6b,EAAkB9W,GAAlBpD,OAAAuD,EAAA,EAAAvD,CAAA,GAA+BsD,EAA/B,CAAqCd,MAAK,GAAAlE,OAAA0B,OAAAC,EAAA,EAAAD,CAAMsD,EAAKd,OAAX,CAAkBN,EAAK6Y,eAC9Db,EAAkBS,KAAK,CAACtc,WAAY6D,EAAK7D,WAAYmE,MAAO,CAACN,EAAK6Y,WAEzEU,EAA+B,GACnCvB,EAAkBjX,IAAI,SAAApD,GACdA,EAAK2C,MAAM1C,OAAS,GAAG2b,EAAcd,KAAK9a,EAAKxB,cAE1B,IAAzBod,EAAc3b,OAb2C,CAAAhB,EAAAnB,KAAA,gBAcrD+d,EAAqE,GACnEC,EAAeF,EAAcxY,IAAI,SAAOpD,GAAP,OAAAvC,EAAAC,EAAAC,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EAAAL,EAAAC,EAAAM,MACtBZ,EAAiB4C,GAAM1C,KAAK,SAAAC,GACrC,IAAMoF,EAAQpF,EAAIoG,MAAMP,IAAI,SAAApD,GAAI,OAAIA,EAAKsD,KACzCuY,EAAcf,KAAK,CAACtc,WAAYwB,EAAM2C,aAHP,cAAA5D,EAAAb,OAAA,SAAAa,EAAAd,MAAA,wBAAAc,EAAAX,YAfkBa,EAAAnB,KAAA,EAAAL,EAAAC,EAAAM,MAqBnD4F,QAAQC,IAAIiY,IArBuC,cAAA7c,EAAAf,OAAA,SAsBlD2d,GAtBkD,eAAA5c,EAAAf,OAAA,cAuB/C8F,GAvB+C,yBAAA/E,EAAAb,UAAA,IAvNzE,QAAAgB,EAAA2c,GAAA3c,EAAAnB,KAAAmB,EAAAtB,KAAA,iBAAAsB,EAAA2c,QA+Oe/X,EA/Of,eAuNcsW,EAvNdlb,EAAA2c,GAuPYxB,EAAqE,GACrED,GAAmD,IAAtBjZ,EAAWpB,QACxCqa,EAA0BlX,IAAI,SAAApD,GAG1B,IAFsBqB,EAAWoQ,KAAK,SAAAwB,GAAQ,OAC1CA,EAASzU,aAAewB,EAAKxB,aACjC,CACA,IAAMwd,EAAwBtC,EAAmBjI,KAAK,SAAAhO,GAAI,OAAIzD,EAAKxB,aAAeiF,EAAKH,KACvFiX,EAAcO,KAAK,CACftc,WAAYwd,EAAsB1Y,GAClCX,MAAOqZ,EAAsBrZ,MAAMS,IAAI,SAAAf,GAAI,OAAIA,EAAKiB,UAG5DjC,EAAW+B,IAAI,SAAApD,GAAI,OAAIua,EAAcO,KAAK,CAACtc,WAAYwB,EAAKxB,WAAYmE,MAAO3C,EAAKuC,mBAC5E+X,GAAmD,IAAtBjZ,EAAWpB,OAEzCqa,GAAmD,IAAtBjZ,EAAWpB,QAC/Cqa,EAA0BlX,IAAI,SAAApD,GAC1B,IAAMgc,EAAwBtC,EAAmBjI,KAAK,SAAAhO,GAAI,OAAIzD,EAAKxB,aAAeiF,EAAKH,KACvFiX,EAAcO,KAAK,CACftc,WAAYwd,EAAsB1Y,GAClCX,MAAOqZ,EAAsBrZ,MAAMS,IAAI,SAAAf,GAAI,OAAIA,EAAKiB,SAN5DiX,EAAgBlZ,EAAW+B,IAAI,SAAApD,GAAI,MAAK,CAACxB,WAAYwB,EAAKxB,WAAYmE,MAAO3C,EAAKuC,iBAWhF4X,EAAeI,EAAcnX,IAAI,SAAApD,GACnC,IAAMic,EAAuB3B,EAA4BA,EACpD7I,KAAK,SAAAhO,GAAI,OAAIA,EAAKjF,aAAewB,EAAKxB,kBAAcwF,EACnDkY,EAAUxC,EAAmBjI,KAAK,SAAAhO,GAAI,OAAIA,EAAKH,KAAOtD,EAAKxB,aACjE,OAAIyd,GACG,CAACzd,WAAY0d,EAAQ5Y,GAAIX,MAAOuZ,EAAQvZ,MAAMS,IAAI,SAAAf,GAAI,OAAIA,EAAKiB,QAGpE8W,EAA8F,GACpGG,EAAc4B,QAAQ,SAAA3N,GAClB,IAAI4N,EAAYjC,EAAa1I,KAAK,SAAAzR,GAAI,OAAIA,EAAKxB,aAAegQ,EAAShQ,aAAamE,MACpF6L,EAAS7L,MAAMwZ,QAAQ,SAACE,EAAc9Y,GAClC,GAAI8Y,IAAiBD,EAAU7Y,GAAQ,CACrB,IAAVA,EAAa6W,EAAUU,KAAK,CAC5Btc,WAAYgQ,EAAShQ,WAAYgd,UAAWa,EAAcZ,gBAAiB,OAE1ErB,EAAUU,KAAK,CAChBtc,WAAYgQ,EAAShQ,WAAYgd,UAAWa,EAC5CZ,gBAAiBW,EAAU7Y,EAAQ,KAEvC,IAAMmQ,EAAW0I,EAAU5Y,UAAU,SAAA5E,GAAM,OAAIA,IAAWyd,IAC1DD,EAAYxc,EAAQwc,EAAW1I,EAAUnQ,QAI/CmX,EAAuH,GAC7HN,EAAU+B,QAAQ,SAAA9Z,GACd,IAAMsZ,EAAcjB,EAAiBjJ,KAAK,SAAAzR,GAAI,OAAIA,EAAKxB,aAAe6D,EAAK7D,aACvEmd,GAAajB,EAAiBtX,IAAI,SAAApD,GAAI,OAAIA,EAAKxB,aAAemd,EAAYnd,WAC1EwB,EAAKoa,UAAUU,KAAK,CAACU,UAAWnZ,EAAKmZ,UAAWC,gBAAiBpZ,EAAK7D,aAAewB,IAEzF0a,EAAiBI,KAAK,CAClBtc,WAAY6D,EAAK7D,WACjB4b,UAAW,CAAC,CAACoB,UAAWnZ,EAAKmZ,UAAWC,gBAAiBpZ,EAAKoZ,sBAGhEd,EAAmBD,EAAiBtX,IAAI,SAAOpD,GAAP,IAAAsc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnf,EAAAC,EAAAC,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACpCwe,EAAsBtc,EAAKoa,UADSmC,GAAA,EAAAC,GAAA,EAAAC,OAAAzY,EAAA9E,EAAArB,KAAA,EAAA6e,EAExBJ,EAFwBO,OAAAC,YAAA,UAAAP,GAAAI,EAAAD,EAAA5e,QAAAif,KAAA,CAAA7d,EAAApB,KAAA,gBAEjCkf,EAFiCL,EAAA7S,MAAA5K,EAAApB,KAAA,GAAAL,EAAAC,EAAAM,MAGhCZ,EAAc4C,EAAKxB,WAAYwe,EAAMxB,UAAWwB,EAAMvB,iBAAiBne,KAAK,SAAAa,GACtD,IAApBA,EAAK6c,YAAkBhY,EAASd,QAJF,QAAAqa,GAAA,EAAArd,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,iBAAAoB,EAAArB,KAAA,GAAAqB,EAAAoc,GAAApc,EAAA,SAAAsd,GAAA,EAAAC,EAAAvd,EAAAoc,GAAA,QAAApc,EAAArB,KAAA,GAAAqB,EAAArB,KAAA,GAAA0e,GAAA,MAAAG,EAAAO,QAAAP,EAAAO,SAAA,WAAA/d,EAAArB,KAAA,IAAA2e,EAAA,CAAAtd,EAAApB,KAAA,eAAA2e,EAAA,eAAAvd,EAAAge,OAAA,mBAAAhe,EAAAge,OAAA,6BAAAhe,EAAAd,SAAA,wCApTtDgB,EAAAtB,KAAA,GAAAL,EAAAC,EAAAM,MA4Tc4F,QAAQC,IAAI8W,IA5T1B,QA8TI3X,EAASd,IAAqB,IAGJ,IAAtByX,EAAW1Z,QAAsC,IAAtB6Z,EAAW7Z,QACtC+C,EAASF,IAAmB,IAlUpC,yBAAA1D,EAAAhB,acvOiD0G,SAAU6L,GAE3CvK,EAAA1I,EAAA2I,cAAC4R,GAAD,KACI7R,EAAA1I,EAAA2I,cAAC6R,GAAD,CAAU3R,MAAO,CAAC4W,SAAUlE,EAAsBF,aAClD3S,EAAA1I,EAAA2I,cAAC6R,GAAD,CAAU3R,MAAO,CAAC4W,SAAUlE,EAAsBD,cAEtD5S,EAAA1I,EAAA2I,cAAC8R,GAAD,CAAiBrT,SAAU6L,EACVyH,eAAgBxW,GAAgB8W,GAAkB7W,GAAa8W,GAC3EY,EAAe,SAAChT,GAAD,OACZH,EAAA1I,EAAA2I,cAACgS,GAAD,CAAqB9R,MAAKpG,OAAAuD,EAAA,EAAAvD,CAAA,GAAMoG,EAAN,CAAa6W,WAAY,UAC9C9D,OAIjBlT,EAAA1I,EAAA2I,cAACiS,GAAD,CAAe7Q,QA1GP,WAChB,IAAMnE,EAAK,uCACN4M,QAAQ,QAAS,SAACC,EAAGC,GAAJ,OAAW,KAAOD,EAAKC,EAAoB,GAAhBpC,KAAKqC,SAAgB,EAAU,EAAJD,EAAU,GAAME,SAAS,MAMrGtN,EAASd,EALO,CACZoB,KACAjF,MAAO,GACPsE,MAAO,OAoGkCmC,SAAU6L,EAChCpK,MAAO,CAACmL,EAAGxG,EAAOwG,EAAGvH,EAAGe,EAAOf,EAAGkT,WAAY,OAAQD,WAAY,SAC7EhX,EAAA1I,EAAA2I,cAACmS,GAAD,kBAIJpS,EAAA1I,EAAA2I,cAACkS,GAAD,CAAc9Q,QArGD,WACrBzE,EAASd,MAoGwC4C,SAAU6L,EACrCpK,MAAO,CAACmL,EAAGxG,EAAO2N,KAAM1O,EAAGe,EAAO4N,KAAMuE,WAAY,OAAQD,WAAY,SAClFhX,EAAA1I,EAAA2I,cAACmS,GAAD,yBAKRpS,EAAA1I,EAAA2I,cAAA,SAAOO,WAAY,SAACH,GAAD,OAxFP,SAACA,GACjB,GAAc,UAAVA,EAAEI,IAAiB,CACnB,IAAMuS,EAAY,KAAO,IAA6B,KAAtB3S,EAAEC,cAAcoD,OAC1CuP,EAAY,IAA6B,KAAtB5S,EAAEC,cAAcoD,MACzCoP,EAAe,CACXH,UAAS,gBAAAta,OAAkB2a,EAAlB,YAAA3a,OAAsC2a,EAAtC,2BACTJ,UAAS,+BAAAva,OAAiC4a,EAAjC,UAAA5a,OAAmD4a,EAAnD,SAkFaiE,CAAY7W,IAAIF,MAAO,CAACgX,SAAU,WAAYpK,IAAK,+bC/QzFmE,IAAQC,IAAIC,IAAKC,KAEjB,IAAM+F,GAAeC,YAAHC,MAqBZ5F,GAAUvT,IAAOE,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,WAAGL,CAAH,8DAqBEoZ,GAdO,WAElB,OACIvX,EAAA1I,EAAA2I,cAAAD,EAAA1I,EAAA6W,SAAA,KACInO,EAAA1I,EAAA2I,cAACmX,GAAD,MACApX,EAAA1I,EAAA2I,cAACuX,GAAD,MACAxX,EAAA1I,EAAA2I,cAACwX,GAAD,KACIzX,EAAA1I,EAAA2I,cAACyX,GAAD,MACA1X,EAAA1I,EAAA2I,cAAC0X,GAAD,oCCpCVC,GAAcC,2BAAgB,CAChC/U,SAAUpF,KAKCmN,GAFDiN,uBAAYF,GAAaG,+BAAoBC,2BAAgBC,QCFrEC,GAAOC,SAASC,eAAe,QAErCC,IAASC,oBAAoBJ,IAAMK,OAAQvY,EAAA1I,EAAA2I,cAACuY,GAAA,EAAD,CAAU3N,MAAOA,IACxD7K,EAAA1I,EAAA2I,cAACwY,GAAD","file":"static/js/main.1b2eb64e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\ntype CommonResponseType<T> = {\r\n    resultCode: number;\r\n    messages: string[];\r\n    data: T\r\n};\r\ntype RestoreTasksResponseType = {\r\n    items: TaskType[];\r\n    totalCount: number;\r\n    error?: string\r\n};\r\ntype GetMeType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n};\r\n\r\nexport const api = {\r\n    getAuthState: () => {\r\n        return axios.get<CommonResponseType<GetMeType>>('https://social-network.samuraijs.com/api/1.1/auth/me').then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await axios.get<CommonResponseType<GetMeType>>('https://social-network.samuraijs.com/api/1.1/auth/me')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    logIn: () => {\r\n        const requestObject = {email: \"npikolist@gmail.com\", password: \"512347\", rememberMe: false};\r\n        return axios.post<CommonResponseType<{userId: string}>>('https://social-network.samuraijs.com/api/1.1/auth/login', requestObject)\r\n            .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await axios.post<CommonResponseType<{userId: string}>>\r\n                    ('https://social-network.samuraijs.com/api/1.1/auth/login', requestObject)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreState: () => {\r\n        return instance.get<Array<TodoListType>>('') .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<Array<TodoListType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTodoList: (title: string) => {\r\n        return instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title}).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title})\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreTasks: (todoListId: string) => {\r\n        return instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTask: (title: string, todoListId: string) => {\r\n        return instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTask: (todoListId: string, taskId: string, newTask: TaskType) => {\r\n        return instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    deleteTodoList: (todoListId: string) => {\r\n        return instance.delete<CommonResponseType<{}>>(`/${todoListId}`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.delete<CommonResponseType<{}>>(`/${todoListId}`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    deleteTask: (todoListId: string, taskId: string) => {\r\n        return instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTodoListTitle: (todoListId:string, newTitle: string) => {\r\n        return instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTasks: (todoListId: string, swappedTask: string, beforeSwappedTask: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`, {putAfterItemId: beforeSwappedTask})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`,\r\n                            {putAfterItemId: beforeSwappedTask})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTodoList: (swappedList: string, beforeSwappedList: string| null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`, {putAfterItemId: beforeSwappedList})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`,\r\n                            {putAfterItemId: beforeSwappedList})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    }\r\n};\r\n","export const movePos  = (array: Array<any>, moveIndex: number, toIndex: number) => {\r\n    /* #move - Moves an array item from one position in an array to another.\r\n\r\n       Note: This is a pure function so a new array will be returned, instead\r\n       of altering the array argument.\r\n\r\n      Arguments:\r\n      1. array     (String) : Array in which to move an item.         (required)\r\n      2. moveIndex (Object) : The index of the item to move.          (required)\r\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\r\n    */\r\n    let item = array[moveIndex];\r\n    let length = array.length;\r\n    let diff = moveIndex - toIndex;\r\n\r\n    if (diff > 0) {\r\n        // move left\r\n        return [\r\n            ...array.slice(0, toIndex),\r\n            item,\r\n            ...array.slice(toIndex, moveIndex),\r\n            ...array.slice(moveIndex + 1, length)\r\n        ];\r\n    } else if (diff < 0) {\r\n        // move right\r\n        return [\r\n            ...array.slice(0, moveIndex),\r\n            ...array.slice(moveIndex + 1, toIndex + 1),\r\n            item,\r\n            ...array.slice(toIndex + 1, length)\r\n        ];\r\n    }\r\n    return array;\r\n}","/*export const neumorphColors = [\r\n    {\r\n        background: '#1a0b3b',\r\n        backgroundOuter: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n        shadows: '22px 22px 49px #0a0418, -22px -22px 49px #2a125e',\r\n        shadowsFocused: 'inset 11px 11px 23px #0a0418, inset -11px -11px 23px #2a125e',\r\n        shadowsHovered: '22px 22px 49px #0a0418',\r\n        innerShadows: '11px 11px 23px #0a0418, -11px -11px 23px #2a125e',\r\n        color: 'rgb(108, 98, 131)',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: 'rgb(30, 13, 55)',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#f6f7fa',\r\n        backgroundOuter: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadows: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsFocused: 'inset 11px 11px 23px #a2a3a5, inset -11px -11px 23px #ffffff',\r\n        shadowsHovered: '22px 22px 49px #a2a3a5',\r\n        innerShadows: '11px 11px 23px #a2a3a5, -11px -11px 23px #ffffff',\r\n        color: '#ff9605',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: '#f6f7fa',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#ff9605',\r\n        backgroundOuter: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadows: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsFocused: 'inset 11px 11px 23px #a86303, inset -11px -11px 23px #ffc907',\r\n        shadowsHovered: '22px 22px 49px #a86303',\r\n        innerShadows: '11px 11px 23px #a86303, -11px -11px 23px #ffc907',\r\n        color: '#f6f7fa',\r\n        hoveredAltBackground: '#f6f7fa',\r\n        hoveredColor: '#ff9605',\r\n        backgroundAltInner: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadowsAlt: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a2a3a5, inset -22px -22px 49px #ffffff',\r\n    }\r\n];*/\r\n\r\nexport const neumorphColors: Array<NeumorphColorsType> = [\r\n    {\r\n        background: '#B5838D',\r\n        concaveBackground: 'linear-gradient(145deg, #a3767f, #c28c97)',\r\n        shadows: '20px 20px 40px #9a6f78, -20px -20px 40px #d097a2',\r\n        innerShadows: 'inset 20px 20px 40px #9a6f78, inset -20px -20px 40px #d097a2',\r\n        littleShadows: '5px 5px 10px #9a6f78, -5px -5px 10px #d097a2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #9a6f78, inset -5px -5px 10px #d097a2',\r\n        progressBarColor: '#d097a2',\r\n        color: 'white',\r\n    },{\r\n        background: '#E5989B',\r\n        concaveBackground: 'linear-gradient(145deg, #ce898c, #f5a3a6)',\r\n        shadows: '20px 20px 40px #c38184, -20px -20px 40px #ffafb2',\r\n        innerShadows: 'inset 20px 20px 40px #c38184, inset -20px -20px 40px #ffafb2',\r\n        littleShadows: '5px 5px 10px #c38184, -5px -5px 10px #ffafb2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c38184, inset -5px -5px 10px #ffafb2',\r\n        progressBarColor: '#ffafb2',\r\n        color: 'white',\r\n    },{\r\n        background: '#FFB4A2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6a292, #ffc1ad)',\r\n        shadows: '20px 20px 40px #d49586, -20px -20px 40px #ffd3be',\r\n        innerShadows: 'inset 20px 20px 40px #d49586, inset -20px -20px 40px #ffd3be',\r\n        littleShadows: '5px 5px 10px #d49586, -5px -5px 10px #ffd3be;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d49586, inset -5px -5px 10px #ffd3be',\r\n        progressBarColor: '#ffd3be',\r\n        color: 'white',\r\n    }, {\r\n        background: '#FFCDB2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6b9a0, #ffdbbe)',\r\n        shadows: '20px 20px 40px #d4aa94, -20px -20px 40px #fff0d0',\r\n        innerShadows: 'inset 20px 20px 40px #d4aa94, inset -20px -20px 40px #fff0d0',\r\n        littleShadows: '5px 5px 10px #d4aa94, -5px -5px 10px #fff0d0;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d4aa94, inset -5px -5px 10px #fff0d0',\r\n        progressBarColor: '#fff0d0',\r\n        color: 'white'\r\n    }\r\n];\r\n\r\nexport const defaultPalette: NeumorphColorsType = {\r\n    background: '#6D6875',\r\n    concaveBackground: 'linear-gradient(145deg, #625e69, #756f7d)',\r\n    shadows: '20px 20px 40px #5e5965, -20px -20px 40px #7c7785',\r\n    innerShadows: 'inset 20px 20px 40px #5e5965, inset -20px -20px 40px #7c7785',\r\n    littleShadows: '5px 5px 10px #5d5863, -5px -5px 10px #7d7887',\r\n    innerLittleShadows: 'inset 5px 5px 10px #5d5863, inset -5px -5px 10px #7d7887',\r\n    progressBarColor: '#7c7785',\r\n    color: 'white',\r\n};\r\n\r\n\r\nexport type NeumorphColorsType = {\r\n    background: string,\r\n    concaveBackground: string,\r\n    shadows: string,\r\n    innerShadows: string,\r\n    littleShadows: string,\r\n    innerLittleShadows: string,\r\n    progressBarColor: string,\r\n    color: string,\r\n};","import {api} from \"./api\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport cloneDeep from \"lodash-es/cloneDeep\";\r\nimport {movePos} from \"../hooks/movePos\";\r\nimport {act} from \"react-dom/test-utils\";\r\nimport {defaultPalette, neumorphColors, NeumorphColorsType} from \"../Components/neumorphColors\";\r\n\r\ntype InitialStateType = {\r\n    todoLists: Array<TodoListType>,\r\n    deepCopy: Array<TodoListType>,\r\n    editable: boolean,\r\n    listsOrder: Array<string>,\r\n    tasksOrder: Array<{ todoListId: string, newTasksOrder: Array<string> }>,\r\n    newListsId: Array<{ oldId: string, newId: string }>,\r\n    newTasksId: Array<{ oldId: string, newId: string, todoListId: string }>,\r\n    errorsNumber: number,\r\n    focusedStatus: boolean,\r\n    currentPaletteIndex: NeumorphColorsType,\r\n    initialLoadingState: boolean,\r\n    pendingState: boolean,\r\n    swapState: boolean,\r\n    fetchingState: boolean,\r\n    height: number,\r\n    allTasks: number,\r\n    completedTasks: number\r\n};\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    deepCopy: [],\r\n    editable: false,\r\n    listsOrder: [],\r\n    tasksOrder: [],\r\n    newListsId: [],\r\n    newTasksId: [],\r\n    errorsNumber: 0,\r\n    focusedStatus: false,\r\n    currentPaletteIndex: defaultPalette,\r\n    initialLoadingState: true,\r\n    pendingState: false,\r\n    swapState: false,\r\n    fetchingState: false,\r\n    height: 0,\r\n    allTasks: 0,\r\n    completedTasks: 0\r\n};\r\n\r\nconst functionalReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'functionalReducer/SET_TODO_LISTS':\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        case 'functionalReducer/SET_TASKS':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: action.tasks}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/ADD_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [action.newTodoList, ...state.todoLists],\r\n            };\r\n        case 'functionalReducer/ADD_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: [action.newTask, ...list.tasks]}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list, tasks: list.tasks.map(task => {\r\n                                if (task.id === action.task.id) {\r\n                                    return {...action.task}\r\n                                } else return task;\r\n                            })\r\n                        }\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/DELETE_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(list => list.id !== action.todoListId),\r\n            };\r\n        case 'functionalReducer/DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: list.tasks.filter(task => task.id !== action.taskId)}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TODO_LIST_TITLE':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, title: action.todoListTitle}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case \"functionalReducer/SWAP_TODO_LISTS\":\r\n            return {\r\n                ...state,\r\n                listsOrder: action.newListsOrder\r\n            }\r\n        case \"functionalReducer/SWAP_TASKS\":\r\n            const index = state.tasksOrder.findIndex(item => item.todoListId === action.todoListId);\r\n            const newSwappedTasks = index !== -1 ? state.tasksOrder.map((item, i) => {\r\n                if (i === index) return {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}\r\n                return item\r\n            }) : [...state.tasksOrder, {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}]\r\n            return {\r\n                ...state,\r\n                tasksOrder: newSwappedTasks\r\n            }\r\n        case \"functionalReducer/ENABLE_EDIT_MODE\": //глянуть\r\n            return {\r\n                ...state,\r\n                editable: true,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n                errorsNumber: 0,\r\n                deepCopy: cloneDeep(state.todoLists)\r\n            };\r\n        case \"functionalReducer/DISABLE_EDIT_MODE\":\r\n            return {\r\n                ...state,\r\n                editable: false\r\n            }\r\n        case \"functionalReducer/SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorsNumber: state.errorsNumber + 1\r\n            };\r\n        case \"functionalReducer/SET_FOCUSED_STATUS\":\r\n            return {\r\n                ...state,\r\n                focusedStatus: action.status\r\n            };\r\n        case \"functionalReducer/SET_NEW_ID\":\r\n            return {\r\n                ...state,\r\n                todoLists: action.newTodoLists\r\n            };\r\n        case \"functionalReducer/SET_CURRENT_PALETTE_INDEX\":\r\n            return {\r\n                ...state,\r\n                currentPaletteIndex: action.palette\r\n            }\r\n        case \"functionalReducer/REJECT_ALL_CHANGES\":\r\n            return {\r\n                ...state,\r\n                todoLists: state.deepCopy,\r\n                editable: false,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n            }\r\n        case \"functionalReducer/COMPLETE_INITIAL_LOADING_STATE\":\r\n            return {\r\n                ...state,\r\n                initialLoadingState: false\r\n            }\r\n        case \"functionalReducer/SET_PENDING_STATE\":\r\n            return {\r\n                ...state,\r\n                pendingState: action.pendingState\r\n            }\r\n        case \"functionalReducer/SET_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case \"functionalReducer/SET_ALL_TASKS\":\r\n            return {\r\n                ...state,\r\n                allTasks: action.tasks\r\n            }\r\n        case \"functionalReducer/SET_COMPLETED_TASK\":\r\n            return {\r\n                ...state,\r\n                completedTasks: action.restore ? 0 : state.completedTasks+1\r\n            }\r\n        case \"functionalReducer/SET_SWAP_STATE\":\r\n            return {\r\n                ...state,\r\n                swapState: action.state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n    addTodoList: (newTodoList: TodoListType) => ({type: 'functionalReducer/ADD_TODO_LIST', newTodoList} as const),\r\n    addTask: (newTask: TaskType, todoListId: string) => ({type: 'functionalReducer/ADD_TASK', newTask, todoListId} as const),\r\n    changeTask: (task: TaskType) => ({type: 'functionalReducer/CHANGE_TASK', task} as const),\r\n    deleteTodoList: (todoListId: string) => ({type: 'functionalReducer/DELETE_TODO_LIST', todoListId} as const),\r\n    deleteTask: (todoListId: string, taskId: string) => ({type: 'functionalReducer/DELETE_TASK', taskId, todoListId} as const),\r\n    restoreTodoList: (todoLists: TodoListType[]) => ({type: 'functionalReducer/SET_TODO_LISTS', todoLists} as const),\r\n    restoreTasks: (tasks: TaskType[], todoListId: string) => ({\r\n        type: 'functionalReducer/SET_TASKS',\r\n        tasks,\r\n        todoListId\r\n    } as const),\r\n    changeTodoListTitle: (todoListId: string, todoListTitle: string) => ({\r\n        type: 'functionalReducer/CHANGE_TODO_LIST_TITLE',\r\n        todoListId,\r\n        todoListTitle\r\n    } as const),\r\n    enableEditMode: () => ({type: 'functionalReducer/ENABLE_EDIT_MODE'} as const),\r\n    disableEditMode: () => ({type: 'functionalReducer/DISABLE_EDIT_MODE'} as const),\r\n    setError: () => ({type: 'functionalReducer/SET_ERROR'} as const),\r\n    setFocusedStatus: (status: boolean) => ({type: 'functionalReducer/SET_FOCUSED_STATUS', status} as const),\r\n    swapTasks: (todoListId: string, newTasksOrder: Array<string>) => ({\r\n        type: 'functionalReducer/SWAP_TASKS', todoListId, newTasksOrder\r\n    } as const),\r\n    swapTodoLists: (newListsOrder: Array<string>) => ({type: 'functionalReducer/SWAP_TODO_LISTS', newListsOrder} as const),\r\n    setTodoLists: (newTodoLists: Array<TodoListType>) => ({type: 'functionalReducer/SET_NEW_ID', newTodoLists} as const),\r\n    setPalette: (palette: NeumorphColorsType) => ({type: 'functionalReducer/SET_CURRENT_PALETTE_INDEX', palette} as const),\r\n    rejectAllChanges: () => ({type: 'functionalReducer/REJECT_ALL_CHANGES'} as const),\r\n    completeInitialLoadingState: () => ({type: 'functionalReducer/COMPLETE_INITIAL_LOADING_STATE'} as const),\r\n    setPendingState: (pendingState: boolean) => ({type: 'functionalReducer/SET_PENDING_STATE', pendingState} as const),\r\n    setHeight: (height: number) => ({type: 'functionalReducer/SET_HEIGHT', height} as const),\r\n    setAllTasks: (tasks: number) => ({type: 'functionalReducer/SET_ALL_TASKS', tasks} as const),\r\n    setCompletedTask: (restore: boolean) => ({type: 'functionalReducer/SET_COMPLETED_TASK', restore} as const),\r\n    setSwapState: (state: boolean) => ({type: 'functionalReducer/SET_SWAP_STATE', state} as const),\r\n    setFetchingState: (state: boolean) => ({type: 'functionalReducer/SET_FETCHING_STATE', state} as const),\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsTypes>;\r\ntype ThunkActionType = ThunkDispatch<AppStateType, unknown, ActionsTypes>;\r\n\r\nexport const loadTodoListsTC = (): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreState().then(data => {\r\n        dispatch(actions.restoreTodoList(data))\r\n    })\r\n};\r\nexport const addTodoListTC = (title: string): ThunkType => (dispatch: ThunkActionType) => {//done\r\n    api.addTodoList(title).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTodoList(data.data.item))\r\n    })\r\n};\r\nexport const addTaskTC = (newTask: string, todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.addTask(newTask, todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTask(data.data.item, todoListId))\r\n    })\r\n};\r\nexport const changeTaskTC = (todoListId: string, taskId: string, newTask: TaskType): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTask(todoListId, taskId, newTask).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTask(data.data.item))\r\n    })\r\n};\r\nexport const deleteTodoListTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTodoList(todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTodoList(todoListId))\r\n    })\r\n};\r\nexport const deleteTaskTC = (todoListId: string, taskId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTask(todoListId, taskId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTask(todoListId, taskId))\r\n    })\r\n};\r\nexport const restoreTasksTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreTasks(todoListId).then(data => {\r\n        dispatch(actions.restoreTasks(data.items, todoListId))\r\n    })\r\n};\r\nexport const changeTodoListTitleTC = (todoListId: string, todoListTitle: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTodoListTitle(todoListId, todoListTitle).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTodoListTitle(todoListId, todoListTitle))\r\n    })\r\n};\r\n\r\n/*export const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n        const deletedLists = getState().todoList.deletedLists;\r\n        const addedLists = getState().todoList.addedLists;\r\n        const clearedAddedLists = getState().todoList.addedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const changedLists = getState().todoList.changedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const clearlyDeletedLists = deletedLists.filter(list => addedLists\r\n            .findIndex(item => item.id === list) === -1);\r\n        /!*const addedSwappedLists = getState().todoList.swappedLists.filter(item => clearedAddedLists\r\n            .findIndex(i => i.id === (item[0].id || item[1].id)) !== -1);\r\n        const clearlySwappedLists = getState().todoList.swappedLists.filter(item => addedSwappedLists\r\n            .findIndex(i => i[0] === item[0] && i[1] === item[1]) === -1);*!/\r\n\r\n        const deletedTasksWithList = getState().todoList.deletedTasksWithList;\r\n        const deletedTasks = getState().todoList.deletedTasks.filter(item => deletedTasksWithList\r\n            .findIndex(i => i.taskId === item.taskId) === -1);\r\n        const allDeletedTasks = [...deletedTasks, ...deletedTasksWithList];\r\n        const changedTasks = getState().todoList.changedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const addedTasks = getState().todoList.addedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const clearedSwappedTasks = getState().todoList.swappedTasks.filter(item => deletedLists\r\n            .findIndex(i => i === item.todoListId) === -1).map(item => item.swappedTasks\r\n            .map(taskArray => [...taskArray, item.todoListId])).map(item => {\r\n            const newArray: Array<string> = [];\r\n            return newArray.concat(...item)\r\n        })\r\n        //очистка от удалённых\r\n\r\n        const clearlyAddedLists = clearedAddedLists.map(list => {\r\n            const sameList = changedLists.find(item => item.id === list.id);\r\n            if (sameList) {\r\n                return sameList\r\n            } else return list\r\n        });\r\n        const clearlyChangedLists = changedLists.filter(list => clearlyAddedLists\r\n            .findIndex(item => item.id === list.id) === -1);\r\n        //очистка одинаковых листов\r\n\r\n        const clearedNewTasks = addedTasks.map(task => {\r\n            const sameTask = changedTasks.find(item => item.id === task.id)\r\n            if (sameTask) {\r\n                return sameTask\r\n            } else return task\r\n        });\r\n        const clearlyChangedTasks = changedTasks.filter(task => clearedNewTasks\r\n            .findIndex(item => item.id === task.id) === -1);\r\n        const addedInNewListsTasks = clearedNewTasks.filter(task => clearlyAddedLists\r\n            .findIndex(list => list.id === task.todoListId) !== -1);\r\n        const clearlyAddedTasks = clearedNewTasks.filter(task => addedInNewListsTasks\r\n            .findIndex(item => item.id === task.id) !== 1);\r\n        const addedSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            clearlyAddedTasks.findIndex(i => i.id === task) !== -1));\r\n        const addedInNewListsSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            addedInNewListsTasks.findIndex(i => i.id === task) !== -1));\r\n        const clearlySwappedTasks = clearedSwappedTasks.map(item => item.filter(task => (\r\n            addedSwappedTasks.findIndex(i => (i[0] || i[1]) === task) === -1 || addedInNewListsSwappedTasks\r\n                .findIndex(i => (i[0] || i[1]) === task) === -1)));\r\n        //очистка тасок\r\n\r\n        //запросы\r\n        if (clearlyAddedLists.length !== 0) {\r\n            let newLists: Array<{ newId: string, oldId: string }> = [];\r\n            const promises = clearlyAddedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) newLists.push({newId: data.data.item.id, oldId: list.id})\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedInNewListsTasks.length !== 0) {\r\n                let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n                const promises = addedInNewListsTasks.map(async (task) => {\r\n                    let newListId = newLists.find(list => list.oldId === task.todoListId)!.newId;\r\n                    return await api.addTask(task.title, newListId).then(data => {\r\n                        if (data.resultCode === 0) newTasks.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            listId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n                await Promise.all(promises);\r\n                if (addedInNewListsSwappedTasks.length !== 0) {\r\n                    const newIdSwappedTasks = addedInNewListsSwappedTasks.map(tasks => tasks.map(task => {\r\n                        const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                        return {newId: currentTask.newId, listId: currentTask.listId}\r\n                    }))\r\n                    newIdSwappedTasks.map(tasks => {\r\n                        api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (clearlyAddedTasks.length !== 0) {\r\n            let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n            const promises = clearlyAddedTasks.map(async (task) => {\r\n                api.addTask(task.title, task.todoListId).then(data => {\r\n                    if (data.resultCode === 0) newTasks.push({\r\n                        newId: data.data.item.id,\r\n                        oldId: task.id,\r\n                        listId: data.data.item.todoListId\r\n                    })\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedSwappedTasks.length !== 0) {\r\n                const newIdSwappedTasks = addedSwappedTasks.map(tasks => tasks.map(task => {\r\n                    const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                    return {newId: currentTask.newId, listId: currentTask.listId}\r\n                }))\r\n                newIdSwappedTasks.map(tasks => {\r\n                    api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        if (clearlySwappedTasks.length !== 0) {\r\n            clearlySwappedTasks.forEach(tasks => {\r\n                api.swapTasks(tasks[2], tasks[0], tasks[1]).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyDeletedLists.length !== 0) {\r\n            clearlyDeletedLists.forEach(list => {\r\n                api.deleteTodoList(list).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedLists.length !== 0) {\r\n            clearlyChangedLists.forEach(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedTasks.length !== 0) {\r\n            clearlyChangedTasks.forEach(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.forEach(task => {\r\n                api.deleteTask(task.todoListId, task.taskId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        dispatch(actions.disableEditMode())\r\n    };*/\r\n\r\n\r\nexport const initialization = (): ThunkType => async (dispatch: ThunkActionType) => {\r\n   /* const authState = await api.getAuthState();\r\n    console.log(authState)\r\n    if (!authState.data.id) {\r\n        await api.logIn()\r\n    }*/\r\n    dispatch(getStateFromServer(true));\r\n};\r\n\r\nconst getStateFromServer = (initial: boolean): ThunkType => async (dispatch: ThunkActionType) => {\r\n    if (!initial) dispatch(actions.setFetchingState(true));\r\n    const lists = await api.restoreState();\r\n    let listsWithTasks = lists;\r\n    if (lists.length !== 0) {\r\n        dispatch(actions.setAllTasks(lists.length));\r\n        dispatch(actions.setCompletedTask(true))\r\n        const getTasks = lists.map(async (item) => {\r\n            return await api.restoreTasks(item.id).then(data => {\r\n                const index = listsWithTasks.findIndex(list => item.id === list.id);\r\n                listsWithTasks[index] = {...item, tasks: data.items};\r\n                dispatch(actions.setCompletedTask(false))\r\n            })\r\n        });\r\n        await Promise.all(getTasks)\r\n    }\r\n    dispatch(actions.setTodoLists(listsWithTasks));\r\n    if (initial) dispatch(actions.completeInitialLoadingState());\r\n    if (!initial) dispatch(actions.setFetchingState(true));\r\n};\r\n\r\nexport const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n\r\n        dispatch(actions.disableEditMode());\r\n        dispatch(actions.setPendingState(true))\r\n        /*dispatch(actions.setPendingState(true))*/\r\n\r\n        const oldTodoLists = getState().todoList.deepCopy;\r\n        const newTodoLists = getState().todoList.todoLists;\r\n        let listsOrder = getState().todoList.listsOrder;\r\n        let tasksOrder = getState().todoList.tasksOrder;\r\n\r\n        const newListsId: Array<{ oldId: string, newId: string }> = [];\r\n        const newTasksId: Array<{ oldId: string, newId: string, todoListId: string }> = [];\r\n        let todoListsWithNewId: Array<TodoListType> = [];\r\n\r\n        //added items\r\n        const addedLists = newTodoLists.filter(list => oldTodoLists.findIndex(oldList => oldList.id === list.id) === -1);\r\n        const deletedLists = oldTodoLists.filter(list => newTodoLists.findIndex(newList => newList.id === list.id) === -1);\r\n        const editedLists: Array<TodoListType> = []\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList && list.title !== oldList.title) {\r\n                editedLists.push(list)\r\n            }\r\n        })\r\n\r\n        let addedTasks: Array<TaskType> = [];\r\n        const editedTasks: Array<TaskType> = [];\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList) {\r\n                list.tasks.map(task => {\r\n                    const oldTask = oldList.tasks.find(oldTask => oldTask.id === task.id)\r\n                    if (!oldTask) {\r\n                        addedTasks.push(task);\r\n                        return\r\n                    }\r\n                    if (oldTask && oldTask.title !== task.title) {\r\n                        editedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n            if (!oldList && list.tasks.length !== 0) {\r\n                list.tasks.map(task => addedTasks.push(task))\r\n            }\r\n        })\r\n        const deletedTasks: Array<TaskType> = [];\r\n        oldTodoLists.map(list => {\r\n            const newList = newTodoLists.find(newList => newList.id === list.id);\r\n            if (newList) {\r\n                list.tasks.map(task => {\r\n                    const newTask = newList.tasks.find(newTask => newTask.id === task.id)\r\n                    if (!newTask) {\r\n                        deletedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        //progress bar logic\r\n        let allTasks = 0;\r\n        if (deletedLists.length !== 0) allTasks = allTasks + deletedLists.length;\r\n        if (deletedTasks.length !== 0) allTasks = allTasks + deletedTasks.length;\r\n        if (addedLists.length !== 0) allTasks = allTasks + addedLists.length;\r\n        if (addedTasks.length !== 0) allTasks = allTasks + addedTasks.length;\r\n        if (editedLists.length !== 0) allTasks = allTasks + editedLists.length;\r\n        if (editedTasks.length !== 0) allTasks = allTasks + editedTasks.length;\r\n        dispatch(actions.setAllTasks(allTasks));\r\n\r\n        //queries\r\n        dispatch(actions.setCompletedTask(true))\r\n        if (deletedLists.length !== 0) {\r\n            deletedLists.map(list => {\r\n                api.deleteTodoList(list.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.map(task => {\r\n                api.deleteTask(task.todoListId, task.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedLists.length !== 0) {\r\n            editedLists.map(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedTasks.length !== 0) {\r\n            editedTasks.map(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n\r\n        const createAndChangeIdOfTasksInOrderList = async () => {\r\n            if (addedTasks.length !== 0) {\r\n                const tasksPromises = addedTasks.map(async (task) => {\r\n                    return await api.addTask(task.title, task.todoListId).then(data => {\r\n                        if (data.resultCode === 0) newTasksId.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            todoListId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                    });\r\n                })\r\n                await Promise.all(tasksPromises);\r\n                if (tasksOrder.length !== 0) {\r\n                    tasksOrder = tasksOrder.map(item => {\r\n                        const newList = newListsId.find(list => list.oldId === item.todoListId)\r\n                        const tasksWithNewId = item.newTasksOrder.map(taskId => {\r\n                            const newTask = newTasksId.find(newTask => newTask.oldId === taskId);\r\n                            if (newTask) return newTask.newId;\r\n                            return taskId\r\n                        })\r\n                        return {todoListId: newList ? newList.newId : item.todoListId, newTasksOrder: tasksWithNewId}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addedLists.length !== 0) {\r\n            const listPromises = addedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        newListsId.push({newId: data.data.item.id, oldId: list.id});\r\n                        dispatch(actions.setCompletedTask(false))\r\n                    }\r\n                })\r\n\r\n            })\r\n            await Promise.all(listPromises);\r\n            if (addedTasks.length !== 0) {\r\n                addedTasks = addedTasks.map(task => {\r\n                    const newListId = newListsId.find(list => list.oldId === task.todoListId);\r\n                    if (newListId) return {...task, todoListId: newListId.newId}\r\n                    return task\r\n                })\r\n            }\r\n            if (listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.map(item => {\r\n                    const newList = newListsId.find(list => list.oldId === item)\r\n                    if (newList) return newList.newId;\r\n                    return item\r\n                })\r\n            }\r\n            await createAndChangeIdOfTasksInOrderList()\r\n        } else await createAndChangeIdOfTasksInOrderList();\r\n\r\n        //swap progress\r\n        dispatch(actions.setPendingState(false));\r\n        dispatch(actions.setSwapState(true))\r\n\r\n        //changing id\r\n        if (newListsId.length !== 0) {\r\n            todoListsWithNewId = newTodoLists.map(list => {\r\n                const newList = newListsId.find(item => item.oldId === list.id)\r\n                if (newList) return {...list, id: newList.newId};\r\n                return list\r\n            })\r\n        } else todoListsWithNewId = newTodoLists;\r\n        if (newTasksId.length !== 0) {\r\n            todoListsWithNewId = todoListsWithNewId.map(list => {\r\n                const tasks = list.tasks.map(task => {\r\n                    const newTask = newTasksId.find(item => item.oldId === task.id)\r\n                    if (newTask) return {...task, id: newTask.newId}\r\n                    return task\r\n                })\r\n                return {...list, tasks}\r\n            })\r\n        }\r\n\r\n        //swap items\r\n        if (listsOrder.length !== 0 || addedLists.length > 1) {\r\n            if (deletedLists.length !== 0 && listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.filter(list => todoListsWithNewId.findIndex(item => item.id === list) !== -1)\r\n            }\r\n            let currentOrder = addedLists.length > 1 ? await api.restoreState().then(data => data.map(item => item.id))\r\n                : todoListsWithNewId.map(list => list.id);\r\n            const swapOrder: Array<{ swappedId: string, beforeSwappedId: string | null }> = [];\r\n            const order = listsOrder.length !== 0 ? listsOrder : todoListsWithNewId.map(list => list.id);\r\n            order.map((thisListPosId, index) => {\r\n                if (thisListPosId !== currentOrder[index]) {\r\n                    if (index === 0) swapOrder.push({swappedId: thisListPosId, beforeSwappedId: null})\r\n                    else swapOrder.push({swappedId: thisListPosId, beforeSwappedId: listsOrder[index - 1]});\r\n                    const oldIndex = currentOrder.findIndex(listId => listId === thisListPosId)\r\n                    currentOrder = movePos(currentOrder, oldIndex, index)\r\n                }\r\n            });\r\n            swapOrder.map(item => {\r\n                api.swapTodoList(item.swappedId, item.beforeSwappedId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n        }\r\n\r\n        if (tasksOrder.length !== 0 || addedTasks.length > 1) {\r\n            if (deletedTasks.length !== 0 && tasksOrder.length !== 0) {\r\n                tasksOrder = tasksOrder.map(item => {\r\n                    const currentList = todoListsWithNewId.find(list => list.id === item.todoListId)\r\n                    if (currentList) {\r\n                        const newTasksOrder = item.newTasksOrder.filter(taskId => currentList.tasks.findIndex(task =>\r\n                            task.id === taskId) !== -1)\r\n                        return {...item, newTasksOrder}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            let addedTasksInLists: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            const currentListsStateOnServer = newTasksId.length > 1 ? await (async () => {\r\n                newTasksId.map(task => {\r\n                    const list = addedTasksInLists.length !== 0 ?\r\n                        addedTasksInLists.find(list => list.todoListId === task.todoListId) : undefined;\r\n                    if (list) {\r\n                        const index = addedTasksInLists.findIndex(list => list.todoListId === task.todoListId);\r\n                        addedTasksInLists[index] = {...list, tasks: [...list.tasks, task.newId]}\r\n                    } else addedTasksInLists.push({todoListId: task.todoListId, tasks: [task.newId]})\r\n                })\r\n                let listsToUpdate: Array<string> = [];\r\n                addedTasksInLists.map(item => {\r\n                    if (item.tasks.length > 1) listsToUpdate.push(item.todoListId)\r\n                })\r\n                if (listsToUpdate.length !== 0) {\r\n                    let listsOnServer: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n                    const getListOrder = listsToUpdate.map(async (item) => {\r\n                        return await api.restoreTasks(item).then(res => {\r\n                            const tasks = res.items.map(item => item.id);\r\n                            listsOnServer.push({todoListId: item, tasks})\r\n                        });\r\n                    });\r\n                    await Promise.all(getListOrder);\r\n                    return listsOnServer\r\n                } else return undefined\r\n            })() : undefined;\r\n\r\n            /*console.log(currentListsStateOnServer,\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.id),\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.title))*/\r\n\r\n            let requiredOrder: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            if (currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const isItemInOrder = tasksOrder.find(currItem =>\r\n                        currItem.todoListId === item.todoListId);\r\n                    if (isItemInOrder) return;\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n                tasksOrder.map(item => requiredOrder.push({todoListId: item.todoListId, tasks: item.newTasksOrder}))\r\n            } else if (!currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                requiredOrder = tasksOrder.map(item => ({todoListId: item.todoListId, tasks: item.newTasksOrder}));\r\n            } else if (currentListsStateOnServer && tasksOrder.length === 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n            }\r\n\r\n            const currentOrder = requiredOrder.map(item => {\r\n                const itemWithUpdatedState = currentListsStateOnServer ? currentListsStateOnServer\r\n                    .find(list => list.todoListId === item.todoListId) : undefined;\r\n                const curItem = todoListsWithNewId.find(list => list.id === item.todoListId)!;\r\n                if (itemWithUpdatedState) return itemWithUpdatedState;\r\n                return {todoListId: curItem.id, tasks: curItem.tasks.map(task => task.id)}\r\n            });\r\n\r\n            const swapOrder: Array<{ todoListId: string, swappedId: string, beforeSwappedId: string | null }> = [];\r\n            requiredOrder.forEach(newOrder => {\r\n                let currOrder = currentOrder.find(item => item.todoListId === newOrder.todoListId)!.tasks;\r\n                newOrder.tasks.forEach((newTaskPosId, index) => {\r\n                    if (newTaskPosId !== currOrder[index]) {\r\n                        if (index === 0) swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId, beforeSwappedId: null\r\n                        });\r\n                        else swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId,\r\n                            beforeSwappedId: currOrder[index - 1]\r\n                        });\r\n                        const oldIndex = currOrder.findIndex(taskId => taskId === newTaskPosId)\r\n                        currOrder = movePos(currOrder, oldIndex, index)\r\n                    }\r\n                })\r\n            });\r\n            const groupedSwapOrder: Array<{todoListId: string, swapOrder: Array<{swappedId: string, beforeSwappedId: string | null}>}> = [];\r\n            swapOrder.forEach(task => {\r\n                const currentList = groupedSwapOrder.find(item => item.todoListId === task.todoListId);\r\n                if (currentList) groupedSwapOrder.map(item => item.todoListId === currentList.todoListId ?\r\n                    item.swapOrder.push({swappedId: task.swappedId, beforeSwappedId: task.todoListId}) : item\r\n                );\r\n                groupedSwapOrder.push({\r\n                    todoListId: task.todoListId,\r\n                    swapOrder: [{swappedId: task.swappedId, beforeSwappedId: task.beforeSwappedId}]\r\n                })\r\n            });\r\n            const swapOrderPending = groupedSwapOrder.map(async (item) => {\r\n                const consistentSwapOrder = item.swapOrder\r\n                for (let order of consistentSwapOrder) {\r\n                    await api.swapTasks(item.todoListId, order.swappedId, order.beforeSwappedId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                }\r\n            });\r\n            await Promise.all(swapOrderPending)\r\n        }\r\n        dispatch(actions.setSwapState(false));\r\n\r\n\r\n        if (addedLists.length !== 0 || addedTasks.length !== 0) {\r\n            dispatch(getStateFromServer(false))\r\n        }\r\n    };\r\n\r\nexport default functionalReducer","import React, {useEffect, useRef, useState} from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nconst ListTitle = styled(animated.div)<{$palette: NeumorphColorsType}>`\r\n  background-image: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  position: relative;\r\n  font-size: 25px;\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  margin: 0 auto 10px auto;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  display: inline-block;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-break: after-white-space;\r\n  &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: ${props => props.$palette.innerShadows};\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    listTitle: string,\r\n    id: string,\r\n    switchTitleMode: () => void,\r\n    isTitleEditable: boolean,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTitle: React.FC<PropsType> = ({listTitle, id, isTitleEditable, switchTitleMode, palette}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && isTitleEditable) {\r\n            ref.current.focus();\r\n            dispatch(actions.setFocusedStatus(true))\r\n        }\r\n    }, [isTitleEditable]);\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.textContent = listTitle\r\n        }\r\n    }, [listTitle]);\r\n\r\n    const [title, setTitle] = useState<string>(listTitle);\r\n    const onChangeHandler = (e: React.FormEvent<HTMLDivElement>) => {\r\n        setTitle(e.currentTarget.textContent || '')\r\n    };\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\" ) {\r\n            e.preventDefault();\r\n            ref.current!.blur()\r\n        }\r\n    };\r\n    const onBlurHandler = () => {\r\n        dispatch(actions.changeTodoListTitle(id, title));\r\n        switchTitleMode();\r\n        dispatch(actions.setFocusedStatus(false))\r\n    };\r\n\r\n    const editModeAnimation = useSpring({\r\n        scale: isTitleEditable ? 1.3 : 1.0,\r\n        /*backgroundColor: isTitleEditable ? 'rgba(202, 106, 154, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n        color : isTitleEditable ? '#ffffff' : '#ca6a9a'*/\r\n    });\r\n\r\n    return (\r\n        <ListTitle contentEditable={isTitleEditable} ref={ref} style={editModeAnimation}\r\n                   onInput={e => onChangeHandler(e)} onKeyPress={e => onKeyPressHandler(e)}\r\n                   onBlur={onBlurHandler}\r\n                   $palette={palette}/>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTitle);\r\n\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 15px;\r\n    border-radius: 100%;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity .6s cubic-bezier(0.25, 0, 0, 1), width 0s linear .6s, height 0s linear .6s;\r\n`;\r\n\r\nexport const Button = styled.div<{ styles: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.styles.background};\r\n    color: ${props => props.styles.color};\r\n    box-shadow: ${props => props.styles.littleShadows};;\r\n    transform: translate(-50%, -50%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.styles.background};\r\n        color: ${props => props.styles.color};\r\n    }\r\n    &:first-child:nth-last-child(3),\r\n        &:first-child:nth-last-child(3) ~ * {\r\n            &:nth-child(1) {\r\n                left: 50px;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(3) {\r\n                left: 0;\r\n                top: 50px;\r\n            }\r\n        }\r\n`;\r\n\r\ntype PropsType = {\r\n    colors: NeumorphColorsType,\r\n    deleteTodoList: () => void,\r\n    addTask: () => void,\r\n    editList: () => void\r\n};\r\n\r\nconst ContextButtons: React.FC<PropsType> = ({colors, deleteTodoList, addTask, editList}) => {\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Button styles={colors}\r\n                    onClick={addTask}>\r\n                <FontAwesomeIcon icon=\"plus\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={deleteTodoList}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={editList}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(ContextButtons);\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const TaskButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    width: 0rem;\r\n    height: 0rem;\r\n    transform: translateX(-70%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid #ca6a9a;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: rgba(202, 106, 154, 0.8);\r\n        color: white;\r\n    }\r\n    &:first-child:nth-last-child(2),\r\n        &:first-child:nth-last-child(2) ~ * { \r\n            &:nth-child(1) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                bottom: 0;\r\n            }\r\n        }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    deleteTask: () => void;\r\n    editTask: () => void\r\n}\r\n\r\nconst TaskButtons: React.FC<PropsType> = ({deleteTask, editTask}) => {\r\n\r\n    return (\r\n        <TaskButtonWrapper>\r\n            <Button onClick={editTask}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n            <Button onClick={deleteTask}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n        </TaskButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskButtons);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {animated, useSpring, useSprings} from \"react-spring\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\n\r\nconst CheckboxWrapper = styled(animated.div)`\r\n    width: 31px;\r\n    height:31px;\r\n    position: relative;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    --background: #fff;\r\n    --border: #D1D6EE;\r\n    --border-hover: #BBC1E1;\r\n    --border-active: #1E2235;\r\n    --tick: #fff;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    z-index: 9;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    outline: none;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: box-shadow .3s;\r\n    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));\r\n    &:hover {\r\n        --s: 2px;\r\n        --b: var(--border-hover);\r\n    }\r\n    &:checked {\r\n        --b: var(--border-active);\r\n        --s: 2px;\r\n        transition-delay: .4s;\r\n        & + svg {\r\n            --a: 16.1 86.12;\r\n            --o: 102.22;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    z-index: 10;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    pointer-events: none;\r\n    fill: none;\r\n    stroke-width: 2px;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    stroke: var(--stroke, var(--border-active));\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    transform: scale(var(--scale, 1)) translateZ(0);\r\n    stroke-dasharray: var(--a, 86.12);\r\n    stroke-dashoffset: var(--o, 86.12);\r\n    transition: stroke-dasharray .6s, stroke-dashoffset .6s;\r\n`;\r\n\r\ntype PropsType = {\r\n    task: TaskType;\r\n    changeDoneStatus: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editable: boolean,\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskCheckbox: React.FC<PropsType> = ({task, changeDoneStatus, editable, palette}) => {\r\n\r\n    const animation = useSpring({\r\n        left: editable ? -32 : 0,\r\n    });\r\n\r\n    return (\r\n        <CheckboxWrapper style={animation}>\r\n            <Checkbox type=\"checkbox\" checked={task.status === 2} disabled={editable}\r\n                      onChange={(e) => changeDoneStatus(e)}/>\r\n            <Svg>\r\n                <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"/>\r\n            </Svg>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskCheckbox);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport TaskButtons, {TaskButtonWrapper} from \"./TaskButtons\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nconst TaskWrapper = styled(animated.div)<{ $editable: boolean}>`\r\n    position: relative;\r\n    padding: 10px 0;\r\n    text-align: left;\r\n    ${props => props.$editable &&\r\n    `&:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n           width: 4rem;\r\n           height: 4rem;\r\n     }`\r\n}\r\n`;\r\n\r\nconst TaskBackground = styled(animated.div)<{$palette: NeumorphColorsType, $editable: boolean}>`\r\n    padding: 15px 0;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    display: flex;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    cursor: ${props => props.$editable ? \"grab\" : \"inherit\"};\r\n    z-index: 2;\r\n    &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: -1;\r\n      box-shadow: ${props => props.$palette.littleShadows};\r\n      border: 3px solid transparent;\r\n      transition: border .3s linear;\r\n    };\r\n    ${props => props.$editable &&\r\n    `&:hover:before {\r\n         border: 3px solid ${props.$palette.background}\r\n    }`\r\n    }\r\n`;\r\n\r\nconst TaskText = styled.div`\r\n    padding: 10px;\r\n    outline: none;\r\n    display: inline-block;\r\n    min-width: 100px;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-break: after-white-space;\r\n    width: 100%;\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    task: TaskType,\r\n    todoListId: string,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTask: React.FC<PropsType> = React.memo(({task, todoListId, palette}) => {\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus, shallowEqual);\r\n\r\n    const [isTaskEditable, setEditableState] = useState<boolean>(false);\r\n    const editTask = () => {\r\n        setEditableState(true);\r\n        dispatch(actions.setFocusedStatus(true))\r\n    };\r\n    const textRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (task.editStatus || isTaskEditable) textRef.current!.focus()\r\n    }, [task, isTaskEditable])\r\n\r\n    const deleteTask = () => {\r\n        dispatch(actions.deleteTask(todoListId, task.id))\r\n    };\r\n\r\n    const [title, setTitle] = useState<string>('');\r\n    useLayoutEffect(() => {\r\n        textRef.current!.textContent = task.title;\r\n        setTitle(task.title)\r\n    }, [task.title]);\r\n\r\n    const changeDoneStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newTask = {...task, status: e.currentTarget.checked ? 2 : 0};\r\n        dispatch(actions.changeTask(newTask))\r\n    };\r\n\r\n    const onChangeHandler = (e: React.FormEvent<HTMLDivElement>) => {\r\n        let title = e.currentTarget.textContent || '';\r\n        setTitle(title)\r\n    };\r\n\r\n    const setNewTask = () => {\r\n        setEditableState(false);\r\n        dispatch(actions.setFocusedStatus(false));\r\n        const isValid = validate(title);\r\n        if (isValid) {\r\n            let newTask = {...task, title, editStatus: false};\r\n            dispatch(actions.changeTask(newTask));\r\n        } else deleteTask()\r\n    };\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key ===  \"Enter\") {\r\n            e.preventDefault();\r\n            textRef.current!.blur()\r\n        }\r\n    };\r\n    //animation\r\n    const editModeAnimation = useSpring({\r\n        scale: isTaskEditable || task.editStatus ? 1.3 : 1.0,\r\n    });\r\n\r\n    const priority = task.priority === 0 ? 'Low' : 1 ? 'Middle' : 2 ?\r\n        'High' : 3 ? 'Urgently' : 'Later';\r\n\r\n    return (\r\n        <TaskWrapper $editable={editable && !focusedStatus}>\r\n            <TaskButtons editTask={editTask} deleteTask={deleteTask}/>\r\n            <TaskBackground style={editModeAnimation} $editable={editable}\r\n                            $palette={palette}>\r\n                <TaskCheckbox task={task} changeDoneStatus={changeDoneStatus} editable={editable} palette={palette}/>\r\n                <TaskText contentEditable={isTaskEditable || task.editStatus}\r\n                          onKeyPress={e => onKeyPressHandler(e)}\r\n                          ref={textRef}\r\n                          onBlur={setNewTask} onInput={e => onChangeHandler(e)}/>\r\n            </TaskBackground>\r\n        </TaskWrapper>\r\n\r\n    );\r\n})\r\n\r\nexport default TodoListTask;\r\n\r\n","\r\n\r\nexport const validate = (value: string): boolean => {\r\n    return value !== '' || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n};","import React, {RefObject, useEffect, useLayoutEffect, useMemo, useRef, useState} from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {animated, useSpring, useTransition} from \"react-spring\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {movePos} from \"../../hooks/movePos\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {clamp} from \"lodash-es\";\r\n\r\nconst TasksWrapper = styled.div<{ $height: number }>`\r\n  user-select: none;\r\n  position: relative;\r\n  height: ${props => props.$height}px;\r\n  transition: height 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n`;\r\n\r\nconst TaskWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  overflow: visible;\r\n  pointer-events: auto;\r\n  text-align: center;\r\n  font-size: 14.5px;\r\n`;\r\n\r\ntype TransitionItemType = {\r\n    y: number,\r\n    id: string,\r\n    height: number,\r\n    initialIndex: number,\r\n    task: TaskType\r\n};\r\n\r\ntype PropsType = {\r\n    todoListId: string;\r\n    tasks: TaskType[],\r\n    setHeight: (height: number) => void,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTasks: React.FC<PropsType> = ({tasks, todoListId, setHeight, palette}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    /*const settings = (down?: boolean, originalIndex?: number, y?: number): any => (index: number) => (\r\n            down && index === originalIndex\r\n                ? {\r\n                    scale: 1.2,\r\n                    zIndex: 2,\r\n                    y: (initialY.current[index] || 0) + (y || 0),\r\n                    opacity: 1,\r\n                    immediate: (prop: string): boolean => prop === 'zIndex' || prop === 'y',\r\n                }\r\n                : {\r\n                    scale: 1,\r\n                    y: initialY.current[index] || 0,\r\n                    zIndex: 1,\r\n                    opacity: 1,\r\n                    immediate: false,\r\n                }\r\n        );*/\r\n\r\n    const [transitionItems, setTransitionItems] = useState<Array<TransitionItemType>>(tasks.map((task, i) => ({\r\n        y: 0,\r\n        id: task.id,\r\n        height: 0,\r\n        initialIndex: i,\r\n        task: task\r\n    })));\r\n\r\n    const [idOfDragged, setIdOfDragged] = useState<string>('');\r\n\r\n    const initialYofDragged = useRef<number | null>(0);\r\n    const initialIndexOfDragged = useRef<number>(0);\r\n    const height = useRef<number>(0);\r\n    const memoizedOrder = useRef<Array<TransitionItemType>>([]);\r\n    const heights = useRef<Array<number>>([]);\r\n    const bounds = useRef<Array<number>>([]);\r\n    const elementsRef = useRef<Array<RefObject<HTMLDivElement>>>([]);\r\n\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        scale: 1,\r\n        y: 0,\r\n        zIndex: 5\r\n    }), [tasks]);\r\n\r\n    const transitions = useTransition(transitionItems, {\r\n        from: ({y}) => ({y, opacity: 0}),\r\n        enter: ({y}) => ({y, opacity: 1}),\r\n        update: ({y}) => ({y}),\r\n        leave: {height: 0, opacity: 0},\r\n        config: {mass: 5, tension: 500, friction: 100},\r\n        trail: 25,\r\n        key: item => item.id,\r\n    });\r\n\r\n    const [forceRerender, rerender] = useState<number>(0);\r\n    useEffect(() => {\r\n        elementsRef.current = tasks.map(() => React.createRef());\r\n        if (tasks.length > transitionItems.length) {\r\n            const newTransitionItems = [{\r\n                y: 0,\r\n                id: tasks[0].id,\r\n                height: 0,\r\n                initialIndex: 0,\r\n                task: tasks[0]\r\n            }].concat(transitionItems);\r\n            setTransitionItems(newTransitionItems);\r\n            rerender(forceRerender + 1);\r\n        }\r\n        if (tasks.length < transitionItems.length) {\r\n            const deletedTaskIndex = transitionItems.findIndex(item => tasks.findIndex(task => task.id === item.id) === -1);\r\n            const deletedItem = transitionItems[deletedTaskIndex];\r\n            const newTransitionItems = transitionItems.filter((_, index) => index !== deletedTaskIndex)\r\n                .map((item, index) => {\r\n                    if (index < deletedTaskIndex) return item;\r\n                    else return {\r\n                        ...item,\r\n                        y: item.y - deletedItem.height,\r\n                        initialIndex: item.initialIndex > deletedItem.initialIndex ? item.initialIndex - 1 : item.initialIndex\r\n                    }\r\n                })\r\n            setTransitionItems(newTransitionItems);\r\n            heights.current = heights.current.filter((_, index) => index !== deletedTaskIndex);\r\n            const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n            height.current = heightsSum;\r\n            setHeight(heightsSum);\r\n\r\n        } else rerender(forceRerender + 1);\r\n    }, [tasks]);\r\n\r\n    useLayoutEffect(() => {\r\n        heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        const newTransitionsItems = transitionItems.map((item, index) => ({\r\n            y: heights.current.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += heights.current[i - 1]\r\n                }\r\n                return total\r\n            }, 0),\r\n            id: item.id,\r\n            height: heights.current[index],\r\n            initialIndex: item.initialIndex,\r\n            task: item.task\r\n        }));\r\n        setTransitionItems(newTransitionsItems)\r\n        const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n        height.current = heightsSum;\r\n        setHeight(heightsSum);\r\n    }, [forceRerender]);\r\n\r\n    const getNewIndex = (initialIndex: number, index: number, y: number) => {\r\n        if (y > 0) {\r\n            let newIndex = initialIndex;\r\n            let height = 0;\r\n            while (y > height + transitionItems[initialIndex + 1].height / 2) {\r\n                newIndex += 1;\r\n                height += transitionItems[initialIndex + 1].height;\r\n            }\r\n            return newIndex > transitionItems.length - 1 ? transitionItems.length - 1 : newIndex;\r\n        }\r\n        if (y < 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (newIndex > 0 && Math.abs(y) > height + transitionItems[index - 1].height / 2) {\r\n                newIndex -= 1;\r\n                height += transitionItems[index - 1].height;\r\n            }\r\n            return newIndex;\r\n        }\r\n        return null\r\n    }\r\n\r\n    const gesture = useDrag(({args: [transitionItem], down, movement: [, y], event, first}) => {\r\n        event!.stopPropagation();\r\n        const curIndex = transitionItems.findIndex(item => item.id === transitionItem.id);\r\n        if (first) {\r\n            initialYofDragged.current = transitionItem.y;\r\n            bounds.current = [-initialYofDragged.current!,\r\n                transitionItems[transitionItems.length - 1].y - initialYofDragged.current!];\r\n            memoizedOrder.current = transitionItems;\r\n            setIdOfDragged(transitionItem.id);\r\n            initialIndexOfDragged.current = curIndex\r\n            setSpring({y: initialYofDragged.current!, scale: 1.2, immediate: false});\r\n        }\r\n        const curRow = getNewIndex(initialIndexOfDragged.current, curIndex, y);//текущий новый индекс\r\n        /*const newOrder = movePos(order.current, curIndex, curRow);// новый порядок\r\n        const newHeights = movePos(heights.current, curIndex, curRow);//новый массив высот\r\n        initialY.current = newHeights.map((_, index) => {//новый массив У координат\r\n            return heights.current.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += newHeights[i - 1]\r\n                }\r\n                return total\r\n            }, 0)\r\n        })*/\r\n        if (curRow !== curIndex && curRow !== null) {\r\n            console.log(curRow, curIndex, y);\r\n            let newTransitionItems = movePos(transitionItems, curIndex, curRow);\r\n            newTransitionItems = newTransitionItems.map((item, index) => ({\r\n                ...item,\r\n                y: newTransitionItems.reduce((total, item, i) => {\r\n                    if (i !== 0 && i <= index) {\r\n                        total += newTransitionItems[i - 1].height\r\n                    }\r\n                    return total\r\n                }, 0)\r\n            }));\r\n            setTransitionItems(newTransitionItems);\r\n            console.log(newTransitionItems)\r\n        }\r\n        const calcY = (y > bounds.current[1] ? bounds.current[1] + (y - bounds.current[1]) * 0.1 : y < bounds.current[0] ?\r\n            bounds.current[0] + (y - bounds.current[0]) * 0.1 : y) + initialYofDragged.current!;\r\n        setSpring({y: calcY, scale: 1.2, immediate: true});\r\n        if (!down) {\r\n            initialYofDragged.current = null;\r\n            setSpring({y: transitionItems[curIndex].y, scale: 1, immediate: false, onRest: () => setIdOfDragged('')});\r\n            if (!isEqual(transitionItems, memoizedOrder.current)) {\r\n                const newOrder = transitionItems.map(item => item.id);\r\n                dispatch(actions.swapTasks(todoListId, newOrder));\r\n            }\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    return (\r\n        <TasksWrapper $height={height.current}>\r\n            {transitions((style, item, t, i) =>\r\n                <TaskWrapper {...editable && {...gesture(item)}} style={idOfDragged === item.id ? spring : style}\r\n                             ref={elementsRef.current[i]}>\r\n                    <TodoListTask task={item.task} todoListId={todoListId} palette={palette}/>\r\n                </TaskWrapper>)}\r\n        </TasksWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTasks, isEqual);\r\n\r\n","import React, {useCallback, useRef, useState} from \"react\";\r\nimport TodoListTasks from '../tasks/TodoListTasks';\r\nimport '../../App.css'\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useHover} from \"react-use-gesture\";\r\nimport ContextButtons, {ButtonWrapper} from \"./ContextButtons\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport TodoListTaskCopyTransitions from \"../tasks/TodoListTaskCopyTransitions\";\r\n\r\nconst SingleListWrapper = styled(animated.div)`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 50%;\r\n  backface-visibility: hidden;\r\n  overflow: visible;\r\n  padding: 25px;\r\n  font-family: NunitoSans-Light;\r\n  &:hover {\r\n      z-index: 5;\r\n  }\r\n`;\r\n\r\nconst DetailsWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 100%;\r\n  transform-origin: 50% 50%;\r\n  transform: rotateZ(-90deg) translateY(-50%);\r\n  transform-style: preserve-3d;\r\n  font-size: 25px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst SingleListBottomLayer = styled(animated.div)<{\r\n    $palette: number, $editable: boolean, $closeLookState: boolean, $hovered: boolean\r\n}>`\r\n  border-radius: 30px;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 100%;\r\n  padding: 25px;\r\n  background: ${props => neumorphColors[props.$palette].concaveBackground};\r\n  position: relative;\r\n  ${props => (props.$closeLookState || props.$hovered && props.$editable) &&\r\n    `&:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      box-shadow: ${neumorphColors[props.$palette].shadows};\r\n  }`};\r\n  ${props => (props.$hovered && !props.$editable && !props.$closeLookState) &&\r\n    `&:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      box-shadow: ${neumorphColors[props.$palette].shadows};\r\n  }`};\r\n  ${props => props.$closeLookState === false && props.$hovered === false &&\r\n    `&:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      box-shadow: 22px 22px 49px rgba(0, 0, 0, .4);\r\n  }`};\r\n  ${props => props.$editable &&\r\n    `&:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: 22px 22px 49px rgba(0, 0, 0, .4);\r\n      border: 5px solid transparent;\r\n      transition: border .3s linear;\r\n    }\r\n    &:hover:after {\r\n          border: 5px solid ${neumorphColors[props.$palette].background}\r\n    }`\r\n  };\r\n  ${props => props.$editable &&\r\n    `&:hover ${ButtonWrapper},  ${ButtonWrapper}:focus-within {\r\n       width: 90px;\r\n       height: 90px;\r\n       opacity: 1;\r\n       transition: opacity .6s cubic-bezier(0.25, 0, 0, 1);\r\n    };`\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    listTitle: string,\r\n    listTasks?: TaskType[],\r\n    paletteIndex: number,\r\n    setNewHeights: (height: number, id: string) => void,\r\n    deleteList: (id: string) => void,\r\n    closeLook: boolean\r\n};\r\n\r\nconst TodoList: React.FC<PropsType> = ({\r\n                                           id, listTitle, listTasks, paletteIndex,\r\n                                           setNewHeights, deleteList, closeLook\r\n                                       }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus);\r\n\r\n    const currHeight = useRef<number>(0);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const setHeight = useCallback((height: number) => {\r\n        if (currHeight.current === 0 && ref.current) {\r\n            currHeight.current = ref.current.offsetHeight\r\n        }\r\n        if (currHeight.current !== height) {\r\n            setNewHeights(height+currHeight.current, id);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const [filterValue, setFilterValue] = useState<string>('All');\r\n\r\n    const changeFilter = (newFilterValue: string) => {\r\n        setFilterValue(newFilterValue)\r\n    };\r\n\r\n\r\n    const addTask = () => {\r\n        const taskId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newTask = {\r\n            title: '',\r\n            id: taskId,\r\n            todoListId: id,\r\n            editStatus: true\r\n        }\r\n        dispatch(actions.addTask(newTask, id));\r\n        dispatch(actions.setFocusedStatus(true))\r\n    };\r\n\r\n    const deleteTodoList = useCallback(() => {\r\n        deleteList(id)\r\n        dispatch(actions.deleteTodoList(id))\r\n    }, []);\r\n\r\n    const tasks = listTasks ? listTasks.filter(t => {\r\n        if (filterValue === \"All\") {\r\n            return true;\r\n        }\r\n        if (filterValue === \"Active\") {\r\n            return t.status === 0;\r\n        }\r\n        if (filterValue === \"Completed\") {\r\n            return t.status === 2;\r\n        }\r\n    }) : [];\r\n\r\n    //hover Effect\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        z: 0\r\n    }));\r\n\r\n    const bind = useHover(({hovering}) => {\r\n        if (hovering) {\r\n            dispatch(actions.setPalette(neumorphColors[paletteIndex]));\r\n            setHoveredState(true);\r\n            setSpring({z: 100})\r\n        }\r\n        if (!hovering) {\r\n            dispatch(actions.setPalette(defaultPalette));\r\n            setHoveredState(false);\r\n            setSpring({z: 0});\r\n        }\r\n    });\r\n\r\n    //close look animations\r\n    const [hoveredState, setHoveredState] = useState<boolean>(false);\r\n\r\n    const [isTitleEditable, setTitleEditMode] = useState<boolean>(false);\r\n    const switchTitleMode = () => {\r\n        setTitleEditMode(!isTitleEditable)\r\n    };\r\n\r\n    /*console.log(`${listTitle} render`)*/\r\n    return (\r\n        <SingleListWrapper {...!closeLook && {...bind()}} ref={ref}>\r\n            <SingleListBottomLayer $palette={paletteIndex} style={spring}\r\n                                   $editable={editable && !focusedStatus}\r\n                                   $closeLookState={closeLook}\r\n                                   $hovered={hoveredState}>\r\n                <ContextButtons colors={neumorphColors[paletteIndex]} deleteTodoList={deleteTodoList}\r\n                                addTask={addTask} editList={switchTitleMode}/>\r\n                <TodoListTitle listTitle={listTitle} id={id} isTitleEditable={isTitleEditable}\r\n                               switchTitleMode={switchTitleMode} palette={neumorphColors[paletteIndex]}/>\r\n                <TodoListTaskCopyTransitions todoListId={id} tasks={tasks} setHeight={setHeight} palette={neumorphColors[paletteIndex]}/>\r\n                {/* <TodoListFooter filterValue={filterValue} changeFilter={changeFilter}/>*/}\r\n                {/*<DetailsWrapper>\r\n                    more details...\r\n                </DetailsWrapper>*/}\r\n            </SingleListBottomLayer>\r\n        </SingleListWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoList, isEqual);\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated} from \"react-spring\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CloseButton = styled(animated.div)<{ $palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.background};\r\n    box-shadow: ${props => props.$palette.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background: ${props => props.$palette.background};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n`;\r\n\r\nconst ClosingButton: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    return(\r\n        <CloseButton $palette={currentPalette}>\r\n            <FontAwesomeIcon icon=\"times\"/>\r\n        </CloseButton>\r\n    )\r\n};\r\n\r\nexport default ClosingButton","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {animated, useSprings, SpringStartFn, useSpring} from \"react-spring\";\r\nimport {swap} from \"../../hooks/swap\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport styled from \"styled-components/macro\";\r\nimport TodoList from \"./TodoList\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport ClosingButton from \"./CloseButton\";\r\n\r\n\r\nconst TodoListContainer = styled(animated.div)<{ $width: number }>` \r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  width: ${props => props.$width}px;\r\n`;\r\n\r\nconst CloseButtonAnimatedWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  border-radius: 100%;\r\n`;\r\n\r\ntype PropsType = {\r\n    setWrapperAnimation: SpringStartFn<{ x: string, rotateX: number, rotateZ: number, y: number, height: number }>,\r\n    width: number\r\n}\r\n\r\ntype GridItemsType = {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    id: string,\r\n    rightX: number,\r\n    botY: number,\r\n    horizontalCenter: number,\r\n    verticalCenter: number,\r\n    index: number,\r\n}\r\n\r\nconst MappedLists: React.FC<PropsType> = ({setWrapperAnimation, width}) => {\r\n//resize logic\r\n\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const todoLists = useSelector((store: AppStateType) => store.todoList.todoLists, isEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const columns = useMemo(() => {\r\n        return width >= 2000 ? 5 : width >= 1400 ? 4 : width >= 900 ? 3 : width >= 600 ? 2 : 1\r\n    }, [width]);\r\n    const currWidth = useMemo(() => width / columns, [width]);\r\n    useEffect(() => {\r\n        recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        });\r\n    }, [width, columns, currWidth]);\r\n\r\n\r\n// child height calculation logic\r\n    const temporaryValue = useRef<Array<{ height: number, id: string }>>([]);\r\n    const setNewHeights = useCallback((height: number, id: string) => {\r\n        const findHeight = temporaryValue.current.findIndex(item => item.id === id);\r\n        const newHeightsArray = findHeight === -1 ? [...temporaryValue.current, {height, id}]\r\n            : temporaryValue.current.map((item, i) => {\r\n                if (i === findHeight) return {height, id};\r\n                return item\r\n            });\r\n        temporaryValue.current = newHeightsArray\r\n        /*console.log(gridItems.current)*/\r\n        if (newHeightsArray.length === todoLists.length) {\r\n            /*console.log(gridItems.current, width, columns)*/\r\n            recalculateMeasures();\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y}\r\n            })\r\n        }\r\n    }, [todoLists, width, columns, currWidth,/*, newListsId*/]);\r\n\r\n    const deleteList = useCallback((id: string) => {\r\n        temporaryValue.current = temporaryValue.current.filter(item => item.id !== id)\r\n    }, []);\r\n\r\n    const height = useRef<number>(0);\r\n    const gridItems = useRef<Array<GridItemsType>>([]);\r\n\r\n    const [springs, setSprings] = useSprings(todoLists.length, i => {\r\n        if (gridItems.current.length === 0) return {x: 0, y: 0, zIndex: 3, opacity: 1, display: 'block'};\r\n        const currentSettings = gridItems.current.find((list) => list.index === i);\r\n        return {\r\n            x: currentSettings ? currentSettings.x : 0,\r\n            y: currentSettings ? currentSettings.y : 0,\r\n            opacity: 1,\r\n            zIndex: 3,\r\n            display: 'block'\r\n        }\r\n    }, [todoLists])\r\n\r\n\r\n//swap animation logic\r\n    useEffect(() => {\r\n        if (!editable && gridItems.current.length === 0) {\r\n            const newHeights = new Array(columns).fill(0);\r\n            gridItems.current = todoLists.map(\r\n                (item, i) => {\r\n                    const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n                    const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n                    const column = i % columns;\r\n                    const x = currWidth * column;\r\n                    const y = (newHeights[column] += height) - height\r\n                    const rightX = x + currWidth;\r\n                    const botY = y + height;\r\n                    const horizontalCenter = x + currWidth / 2;\r\n                    const verticalCenter = y + height / 2;\r\n                    const index = i;\r\n                    return {x, y, height, id: item.id, botY, rightX, horizontalCenter, verticalCenter, index}\r\n                });\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(actions.setHeight(height.current));\r\n            setWrapperAnimation({height: height.current})\r\n        }\r\n        if (editable && gridItems.current.length < todoLists.length) {\r\n            gridItems.current = [{\r\n                x: 0, y: 0, height: 0, id: todoLists[0].id, botY: 0,\r\n                rightX: 0, horizontalCenter: 0, verticalCenter: 0, index: 0\r\n            }, ...gridItems.current].map((item, i) => {\r\n                if (i === 0) return item;\r\n                return {...item, index: item.index + 1}\r\n            })\r\n            recalculateMeasures()\r\n        }\r\n        if (editable && gridItems.current.length > todoLists.length) {\r\n            const deletedListIndex = gridItems.current.findIndex(item =>\r\n                todoLists.findIndex(list => list.id === item.id) === -1);\r\n            const deletedList = gridItems.current[deletedListIndex];\r\n            gridItems.current = gridItems.current.map((item) => {\r\n                const index = item.index > deletedList.index ? item.index - 1 : item.index;\r\n                return {...item, index}\r\n            }).filter((item, i) => i !== deletedListIndex);\r\n            recalculateMeasures()\r\n        }\r\n        if (gridItems.current.length === todoLists.length) recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n        console.log(gridItems.current);\r\n\r\n    }, [todoLists]);\r\n\r\n    const recalculateMeasures = () => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = gridItems.current.map((item, i) => {\r\n            const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n            const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += height) - height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter, height}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            setWrapperAnimation({height: height.current});\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }\r\n\r\n    const reorder = (oldIndex: number, newIndex: number) => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = swap(gridItems.current, oldIndex, newIndex).map((item, i) => {\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += item.height) - item.height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + item.height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + item.height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            setWrapperAnimation({height: height.current});\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }\r\n\r\n    const calculatePositions = (x: number, y: number) => {\r\n        const xPos = currItem.current.horizontalCenter + x;\r\n        const yPos = currItem.current.verticalCenter + y;\r\n        let i = gridItems.current.findIndex(item => {\r\n            if (item.x < xPos && item.rightX > xPos && item.y < yPos && item.botY > yPos) return true\r\n        });\r\n        return i < todoLists.length && i >= 0 ? i : null;\r\n    }\r\n\r\n    const draggedList = useRef<number>(0);\r\n    const currItem = useRef<GridItemsType>({\r\n        botY: 0,\r\n        height: 0,\r\n        horizontalCenter: 0,\r\n        id: \"\",\r\n        index: 0,\r\n        rightX: 0,\r\n        verticalCenter: 0,\r\n        x: 0,\r\n        y: 0\r\n    });\r\n    const bounds = useRef<{ left: number, right: number, top: number, bottom: number }>({\r\n        left: 0, right: 0, top: 0, bottom: 0\r\n    });\r\n\r\n    const getBounds = () => {\r\n        const left = gridItems.current.length !== 0 ? -gridItems.current[draggedList.current].x - 25 : 0;\r\n        const right = gridItems.current.length !== 0 ? width - gridItems.current[draggedList.current].rightX + 25 : 0;\r\n        const top = gridItems.current.length !== 0 ? -gridItems.current[draggedList.current].y - 25 : 0;\r\n        const bottom = gridItems.current.length !== 0 ?\r\n            height.current - gridItems.current[draggedList.current].botY + 25 : 0;\r\n        console.log(left, right, top, bottom)\r\n        return {left, right, top, bottom}\r\n    }\r\n\r\n    const gesture = useDrag(({\r\n                                 args: [index], down, movement: [x, y],\r\n                                 active, first, event\r\n                             }) => {\r\n        event?.stopPropagation();\r\n        draggedList.current = gridItems.current.findIndex(item => item.index === index);\r\n        if (first) {\r\n            currItem.current = gridItems.current[draggedList.current];\r\n        }\r\n        if (active) {\r\n            const newIndex = calculatePositions(x, y);\r\n            if (newIndex !== null && newIndex !== draggedList.current) {\r\n                reorder(draggedList.current, newIndex);\r\n            }\r\n            setSprings(i => {\r\n                if (i === index) {\r\n                    return {\r\n                        x: currItem.current.x + x,\r\n                        y: currItem.current.y + y,\r\n                        zIndex: 4,\r\n                        immediate: (n: string): boolean => n === 'zIndex'\r\n                    }\r\n                }\r\n                const currentSettings = gridItems.current.find((list) => list.index === i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y}\r\n            })\r\n        }\r\n        if (!down) {\r\n            (async () => {\r\n                await setSprings(i => {\r\n                    const currentSettings = gridItems.current.find((list) => list.index === i)!;\r\n                    return {x: currentSettings.x, y: currentSettings.y, zIndex: 3}\r\n                });\r\n                const newOrder = gridItems.current.map(item => item.id)\r\n                dispatch(actions.swapTodoLists(newOrder))\r\n            })();\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const [indexOfLookedList, setIndexOfLookedList] = useState<number | null>(null);\r\n    const closeLook = async (index: number) => {\r\n        if (editable) return;\r\n        const currItem = gridItems.current.find(item => item.index === index)!;\r\n        await setSprings(i => {\r\n            if (i !== index) return {\r\n                to: async animate => {\r\n                    await animate({opacity: 0});\r\n                    await animate({display: 'none'})\r\n                }\r\n            };\r\n            return {to: false}\r\n        });\r\n        setWrapperAnimation({\r\n            height: window.innerHeight,\r\n            x: '15vw',\r\n            rotateX: 0,\r\n            rotateZ: 0,\r\n            y: 0,\r\n        });\r\n        dispatch(actions.setPalette(neumorphColors[(todoLists.length - index) % neumorphColors.length]));\r\n        setIndexOfLookedList(index);\r\n        await setSprings(i => {\r\n            if (i !== index) return {to: false};\r\n            return {\r\n                y: window.innerHeight / 2 - currItem.height / 2,\r\n                x: width / 2 - (width / columns) / 2\r\n            }\r\n        });\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({\r\n                    y: window.innerHeight / 2 - currItem.height / 2 - 60,\r\n                    x: width / 2 + (width / columns) / 2 + 20,\r\n                    display: 'block',\r\n                    immediate: true\r\n                });\r\n                await animate({opacity: 1, immediate: false})\r\n            }\r\n        })\r\n    };\r\n\r\n    const returnFromCloseLook = async () => {\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({opacity: 0});\r\n                await animate({display: 'none'})\r\n            }\r\n        });\r\n        setSprings(i => {\r\n            if (i !== indexOfLookedList) return {to: false};\r\n            const currItem = gridItems.current.find(item => item.index === i)!\r\n            return {x: currItem.x, y: currItem.y}\r\n        });\r\n        await setWrapperAnimation({\r\n            x: '-15vw',\r\n            rotateX: 45,\r\n            rotateZ: 45,\r\n            y: 275,\r\n            height: height.current,\r\n            immediate: (prop) => prop === 'height'\r\n        });\r\n        dispatch(actions.setPalette(defaultPalette));\r\n        setIndexOfLookedList(null);\r\n        setSprings(i => {\r\n            if (i !== indexOfLookedList) return {opacity: 1, display: 'block'};\r\n            return {to: false}\r\n        });\r\n    };\r\n\r\n    const [closeButtonAnimation, setCloseButtonAnimation] = useSpring(() => ({\r\n        x: 0,\r\n        y: 0,\r\n        opacity: 0,\r\n        display: 'none'\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <CloseButtonAnimatedWrapper onClick={returnFromCloseLook}\r\n                style={closeButtonAnimation}>\r\n                <ClosingButton/>\r\n            </CloseButtonAnimatedWrapper>\r\n            {todoLists.length !== 0 && todoLists.map((list, i) =>\r\n                <TodoListContainer style={springs[i]} {...editable && {...gesture(i)}}\r\n                                   onClick={() => closeLook(i)}\r\n                                   $width={currWidth} key={list.id}>\r\n                    <TodoList id={list.id} paletteIndex={(todoLists.length - i) % neumorphColors.length}\r\n                              deleteList={deleteList} setNewHeights={setNewHeights} closeLook={i === indexOfLookedList}\r\n                              listTitle={list.title} listTasks={list.tasks}/>\r\n                </TodoListContainer>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MappedLists, isEqual)","export const swap = (arr: Array<any>, index1: number, index2: number) => arr.map((val, idx) => {\n    if (idx === index1) return arr[index2];\n    if (idx === index2) return arr[index1];\n    return val;\n});\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {initialization} from \"../../redux/functionalReducer\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from \"react-use-gesture\";\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport MappedLists from \"./MappedLists\";\r\nimport {neumorphColors, NeumorphColorsType} from \"../neumorphColors\";\r\nimport {isMobile} from 'react-device-detect'\r\n\r\n\r\nconst AllLists = styled(animated.div)`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  width: 70vw;\r\n  @media screen and (max-width: 800px) {\r\n    top: -50vh\r\n  }\r\n`;\r\n\r\nconst ScrollableWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst ScrollBarWrapper = styled(animated.div)<{$palette: NeumorphColorsType, $visible: boolean}>`\r\n  position: absolute;\r\n  width: 30px;\r\n  height: 100vh;\r\n  top: 0;\r\n  right: 0;\r\n  overflow: hidden;\r\n  transition: background-color, opacity 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.progressBarColor};\r\n`;\r\n\r\nconst ScrollBarThing = styled(animated.div)<{$palette: NeumorphColorsType, $height: number}>`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: ${props => props.$height}%;\r\n  border-radius: 10px;\r\n  transition: background-image 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.background};\r\n`;\r\n\r\n\r\nconst ScrollWrapper: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const height = useSelector((store: AppStateType) => store.todoList.height, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization());\r\n    }, []);\r\n    useEffect(() => {\r\n        console.log('mounted');\r\n        return () => console.log('unmounting...');\r\n    }, []);\r\n\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        if (height < window.innerHeight) setVisible(false)\r\n        else setVisible(true)\r\n    }, [height])\r\n\r\n    const [width, setWidth] = useState<number>(0);\r\n    const onResize = (width: number) => setWidth(width);\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        x: '-15vw',\r\n        rotateX: 45,\r\n        rotateZ: 45,\r\n        y: 275,\r\n        height: 0,\r\n        config: {tension: 100, friction: 60, clamp: true},\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setWrapperAnimation({\r\n            x: editable ? '15vw' : '-15vw',\r\n            rotateX: editable ? 0 : 45,\r\n            rotateZ: editable ? 0 : 45,\r\n            y: editable ? 0 : 275,\r\n        })\r\n    }, [editable]);\r\n\r\n    const measuredRef = useRef<HTMLDivElement>(null);\r\n\r\n    //scroll logic\r\n    const scrolledY = useRef<number>(0);\r\n    const scrolledPercent = useRef<number>(0);\r\n    const [scrollingAnimation, setScroll] = useSpring(() => ({\r\n        y: 0,\r\n        top: `0%`,\r\n        immediate: false\r\n    }));\r\n\r\n    const visibilityOfScrollBar = useSpring({\r\n        from: {opacity: 0, right: 0, display: 'none'},\r\n        to: async animate => {\r\n            await animate(visible ? {display: 'block'} : {opacity: 0, right: -50});\r\n            await animate(visible ? {opacity: 1, right: 0} : {display: 'none'})\r\n        }\r\n    });\r\n\r\n    const border = height - window.innerHeight < 0 ? 0.5 * height : height - window.innerHeight / 2;\r\n    const scrollBarHeight = !height ? 0 : (window.innerHeight - 275) / height * 100;\r\n\r\n    useWheel(({delta: [, y]}) => {\r\n        scrolledY.current = scrolledY.current + y < border && scrolledY.current + y > 0 ? scrolledY.current + y\r\n            : scrolledY.current + y <= 0 ? 0 : border;\r\n        scrolledPercent.current = scrolledY.current/border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window, eventOptions: {capture: true}});\r\n    useDrag(({offset: [, y], active}) => {\r\n        if (active) {\r\n            const posY = -y;\r\n            scrolledY.current = posY < border && posY > 0 ? posY : posY <= 0 ? 0 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, {domTarget: window, filterTaps: true});\r\n\r\n    //scroller\r\n    const bindDraggedScrollBar = useDrag(({delta: [, y], event}) => {\r\n        event?.stopPropagation();\r\n        const absY = y/window.innerHeight * 100;\r\n        scrolledPercent.current = scrolledPercent.current + absY > 0 && scrolledPercent.current + absY < 100 - scrollBarHeight ?\r\n            scrolledPercent.current + absY : scrolledPercent.current + absY <= 0 ? 0 : 100 - scrollBarHeight;\r\n        scrolledY.current = border * scrolledPercent.current / (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`,\r\n            immediate: (prop) => prop === 'top'\r\n        });\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {/* @ts-ignore*/}\r\n                <ReactResizeDetector handleWidth onResize={onResize} refreshMode=\"debounce\" targetRef={measuredRef}>\r\n                {() =>\r\n                    <AllLists style={wrapperAnimation} ref={measuredRef}>\r\n                        <ScrollableWrapper style={{y: scrollingAnimation.y}}>\r\n                            <MappedLists setWrapperAnimation={setWrapperAnimation} width={width}/>\r\n                        </ScrollableWrapper>\r\n                    </AllLists>\r\n                }\r\n            </ReactResizeDetector>\r\n            <ScrollBarWrapper $palette={currentPalette} $visible={visible} style={visibilityOfScrollBar}>\r\n                <ScrollBarThing $palette={currentPalette} style={{top: scrollingAnimation.top}} {...!isMobile && {...bindDraggedScrollBar()}}\r\n                                $height={scrollBarHeight}/>\r\n            </ScrollBarWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollWrapper;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {neumorphColors} from \"./neumorphColors\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst Background = styled(animated.div)` \r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AnimatedBackground:React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    const [animateBackground, setBackground] = useSpring(() => ({\r\n        background: currentPalette.background\r\n    }));\r\n    useEffect(() => {\r\n        setBackground({background: currentPalette.background})\r\n    }, [currentPalette])\r\n\r\n    return <Background style={animateBackground}/>\r\n}\r\n\r\nexport default AnimatedBackground;\r\n\r\n","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {actions, submitAllChanges} from \"../redux/functionalReducer\";\r\nimport {animated, useSpring, useTransition} from \"react-spring\";\r\nimport {neumorphColors, NeumorphColorsType} from \"./neumorphColors\";\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  font-family: NunitoSans-ExtraLight, sans-serif;\r\n  backdrop-filter: blur(5px);\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  place-items: center;\r\n  min-height: min-content;\r\n  max-height: min-content;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  position: absolute;\r\n  width: 16vw;\r\n  height: 16vw;\r\n  max-width: 210px;\r\n  min-width: 150px;\r\n  max-height: 210px;\r\n  min-height: 150px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst EditButton = styled.div<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 15vw;\r\n  height: 15vw;\r\n  max-width: 210px;\r\n  min-width: 150px;\r\n  max-height: 210px;\r\n  min-height: 150px;\r\n  border-radius: 50%;\r\n  box-shadow: ${props => props.$palette.shadows} ;\r\n  background: ${props => props.$palette.background};\r\n`;\r\n\r\nconst ProgressBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  background-color: red;\r\n  position: absolute;\r\n`;\r\n\r\nconst Progress = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  background-color: black;\r\n`;\r\n\r\nconst InnerBackground = styled.div<{ $palette: NeumorphColorsType, $altBackground: boolean }>`\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  position: absolute;\r\n  background: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 50%;\r\n  transition: 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  ${props => !props.$altBackground &&\r\n    `&:hover {\r\n        background: ${props.$palette.background};\r\n        color: ${props.$palette.color};\r\n  }`}\r\n`;\r\n\r\n//calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));\r\nconst InnerEditButtonText = styled(animated.div)`\r\n  z-index: 12;\r\n  text-align: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  font-size: calc(15px + (50 - 15) * ((100vw - 100px) / (1200 - 100)));\r\n`;\r\n\r\nconst SmallerButton = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 2;\r\n  width: 7vw;\r\n  height: 7vw;\r\n  max-width: 105px;\r\n  min-width: 70px;\r\n  max-height: 105px;\r\n  min-height: 70px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.littleShadows};\r\n  background: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transition: 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst MediumButton = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: 10vw;\r\n  height: 10vw;\r\n  max-width: 160px;\r\n  min-width: 100px;\r\n  max-height: 160px;\r\n  min-height: 100px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.littleShadows};\r\n  background: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transition: 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst InnerSmallerButtonText = styled.div`\r\n  text-align: center;\r\n  font-size: calc(10px + (20 - 10) * ((100vw - 50px) / (1200 - 50)));\r\n`;\r\n\r\nconst MainInterface = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n    const pendingState = useSelector((state: AppStateType) => state.todoList.pendingState, shallowEqual);\r\n    const initialLoading = useSelector((state: AppStateType) => state.todoList.initialLoadingState, shallowEqual);\r\n    const swapState = useSelector((state: AppStateType) => state.todoList.swapState, shallowEqual);\r\n    const allTasks = useSelector((state: AppStateType) => state.todoList.allTasks, shallowEqual);\r\n    const completedTasks = useSelector((state: AppStateType) => state.todoList.completedTasks, shallowEqual);\r\n    const fetching = useSelector((state: AppStateType) => state.todoList.fetchingState, shallowEqual);\r\n\r\n    const switchEditMode = () => {\r\n        if (!editable) dispatch(actions.enableEditMode());\r\n        if (editable) dispatch(submitAllChanges());\r\n    };\r\n\r\n    const addTodoList = () => {\r\n        const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (r = Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newList = {\r\n            id,\r\n            title: '',\r\n            tasks: []\r\n        }\r\n        dispatch(actions.addTodoList(newList));\r\n    };\r\n\r\n    const rejectAllChanges = () => {\r\n        dispatch(actions.rejectAllChanges())\r\n    };\r\n\r\n    //animation logic\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        wrapperX: '0%',\r\n        height: '100%',\r\n        width: '100%',\r\n        medX: '50%',\r\n        medY: '50%',\r\n        x: '50%',\r\n        y: '50%',\r\n    }));\r\n\r\n    const [progressBarrAnimation, setProgressBar] = useSpring(() => ({\r\n        clipPath1: `polygon( 50% 0%, 100% 0%, 100% 200%, 50% 200%)`,\r\n        clipPath2: `polygon( 0% 0%, 50% 0%, 50% 200%, 0% 200%)`,\r\n    }));\r\n\r\n    const setProgress = (e:  React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            const progress1 = 200 - (200 - +e.currentTarget.value*200);\r\n            const progress2 = 200 - +e.currentTarget.value*200;\r\n            setProgressBar({\r\n                clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n                clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const progress = allTasks === 0 ? 0 : completedTasks / allTasks;\r\n        const progress1 = 200 - (200 - progress*200);\r\n        const progress2 = 200 - progress*200;\r\n        setProgressBar({\r\n            clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n            clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`\r\n        })\r\n    }, [allTasks, completedTasks])\r\n\r\n    useEffect(() => {\r\n        if (!initialLoading && !editable && !pendingState) {\r\n            setSpring({\r\n                height: '16%',\r\n                width: '16%',\r\n                wrapperX: '10%',\r\n                config: {friction: 50}\r\n            })\r\n        } else if (editable) {\r\n            setSpring({\r\n                wrapperX: '50%',\r\n                medX: '125%',\r\n                medY: '125%',\r\n                x: '-50%',\r\n                y: '150%',\r\n            })\r\n        } else if (pendingState) {\r\n\r\n        } else if (swapState) {\r\n\r\n        }\r\n    }, [editable, pendingState, initialLoading, swapState, fetching]);\r\n\r\n    const actionMessage = useMemo(() =>\r\n            initialLoading ? 'Loading' : editable ? 'Submit' : pendingState ? 'Sending data'\r\n                : 'Edit'\r\n        , [editable, pendingState, initialLoading, swapState, fetching]);\r\n\r\n    const textTransition = useTransition(actionMessage, {\r\n        from: {opacity: 1, y: '-100%'},\r\n        enter: {opacity: 1, y: '0%'},\r\n        leave: {opacity: 0, y: '100%'},\r\n\r\n    })\r\n\r\n    /*console.log('interface render')*/\r\n\r\n    return (\r\n        <Wrapper style={{x: spring.wrapperX, width: spring.width, height: spring.height}}>\r\n            <ButtonsWrapper>\r\n                <EditButton onClick={switchEditMode} $palette={currentPalette}>\r\n                    {/*<ProgressBackground style={progressBarrAnimation}/>*/}\r\n                    <ProgressBackground>\r\n                        <Progress style={{clipPath: progressBarrAnimation.clipPath1}}/>\r\n                        <Progress style={{clipPath: progressBarrAnimation.clipPath2}}/>\r\n                    </ProgressBackground>\r\n                    <InnerBackground $palette={currentPalette}\r\n                                     $altBackground={pendingState || initialLoading || swapState || fetching}>\r\n                        {textTransition((style) =>\r\n                            <InnerEditButtonText style={{...style, translateY: '-50%'}}>\r\n                                {actionMessage}\r\n                            </InnerEditButtonText>)}\r\n                    </InnerBackground>\r\n                </EditButton>\r\n                <SmallerButton onClick={addTodoList} $palette={currentPalette}\r\n                               style={{x: spring.x, y: spring.y, translateX: '-50%', translateY: '-50%'}}>\r\n                    <InnerSmallerButtonText>\r\n                        Add list\r\n                    </InnerSmallerButtonText>\r\n                </SmallerButton>\r\n                <MediumButton onClick={rejectAllChanges} $palette={currentPalette}\r\n                              style={{x: spring.medX, y: spring.medY, translateX: '-50%', translateY: '-50%'}}>\r\n                    <InnerSmallerButtonText>\r\n                        remove changes\r\n                    </InnerSmallerButtonText>\r\n                </MediumButton>\r\n            </ButtonsWrapper>\r\n            <input onKeyPress={(e) => setProgress(e)} style={{position: 'absolute', top: '100%'}}/>\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default MainInterface","import React from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollWrapper from \"./todolists/ScrollWrapper\";\r\nimport AnimatedBackground from \"./AnimatedBackground\";\r\nimport MainInterface from \"./MainInterface\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n      box-sizing: border-box;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n    };\r\n  body {\r\n    background-color: white;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    outline: none;\r\n    &::-webkit-scrollbar { \r\n      display: none;\r\n    };\r\n  };\r\n  html {\r\n    -ms-overflow-style: none; \r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <AnimatedBackground/>\r\n            <Wrapper>\r\n                <MainInterface/>\r\n                <ScrollWrapper/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport functionalReducer from \"./functionalReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: functionalReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport './App.css';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n/// <reference types=\"react-dom/experimental\"\r\n/*ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));*/\r\n\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n// @ts-ignore\r\nReactDOM.unstable_createRoot(root).render( <Provider store={store}>\r\n    <App/>\r\n</Provider>);\r\n\r\n"],"sourceRoot":""}