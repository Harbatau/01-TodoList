{"version":3,"sources":["redux/api.ts","hooks/movePos.ts","Components/neumorphColors.ts","redux/functionalReducer.ts","Components/tasks/TaskButtons.tsx","Components/tasks/TaskCheckbox.tsx","Components/tasks/TodoListTask.tsx","hooks/validate.ts","Components/tasks/TodoListTasks.tsx","Components/todolists/TodoListTitle.tsx","Components/todolists/ContextButtons.tsx","Components/todolists/TodoList.tsx","Components/todolists/CloseButton.tsx","Components/todolists/MappedLists.tsx","hooks/swap.ts","Components/todolists/ScrollWrapper.tsx","Components/AnimatedBackground.tsx","Components/MainInterface.tsx","Components/App.tsx","redux/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","API-KEY","loginInstance","api","get","then","res","response","regenerator_default","a","async","_context","prev","next","status","awrap","sent","abrupt","data","stop","requestObject","email","password","rememberMe","post","_context2","_context3","title","_context4","todoListId","concat","_context5","_context6","taskId","newTask","put","_context7","delete","_context8","_context9","newTitle","_context10","swappedTask","beforeSwappedTask","putAfterItemId","_context11","swappedList","beforeSwappedList","_context12","movePos","array","moveIndex","toIndex","item","length","diff","Object","toConsumableArray","slice","neumorphColors","background","concaveBackground","shadows","innerShadows","littleShadows","innerLittleShadows","progressBarColor","color","defaultPalette","default","interfacePalette","initialState","todoLists","deepCopy","editable","listsOrder","tasksOrder","newListsId","newTasksId","errorsNumber","focusedStatus","currentPaletteIndex","initialLoadingState","pendingState","swapState","fetchingState","height","allTasks","completedTasks","actions","newTodoList","type","task","todoListTitle","newTasksOrder","newListsOrder","newTodoLists","palette","tasks","restore","state","getStateFromServer","initial","dispatch","lists","listsWithTasks","getTasks","map","id","index","findIndex","list","objectSpread2","items","Promise","all","setTimeout","functionalReducer","arguments","undefined","action","filter","newSwappedTasks","i","cloneDeep","TaskButtonWrapper","styled","div","withConfig","displayName","componentId","Button","React","memo","_ref","deleteTask","editTask","react_default","createElement","onClick","react_fontawesome_index_es","icon","CheckboxWrapper","animated","Checkbox","input","Svg","svg","changeDoneStatus","animation","useSpring","left","style","checked","disabled","onChange","e","d","TaskWrapper","props","$editable","TaskBackground","$palette","TaskText","TodoListTask","useDispatch","useSelector","todoList","shallowEqual","_useState","useState","_useState2","slicedToArray","isTaskEditable","setEditableState","textRef","useRef","useEffect","editStatus","current","focus","_useState3","_useState4","setTitle","useLayoutEffect","textContent","editModeAnimation","scale","priority","tasks_TaskButtons","tasks_TaskCheckbox","currentTarget","contentEditable","onKeyPress","key","preventDefault","blur","onKeyPressHandler","ref","onBlur","value","test","onInput","onChangeHandler","TasksWrapper","$height","setHeight","settings","order","down","originalIndex","y","calcY","bounds","zIndex","initialYofDragged","opacity","immediate","prop","initialY","indexOf","memoizedOrder","memoizedTasksId","heights","elementsBorder","elementsRef","setCurrentHeight","_useSprings","useSprings","_useSprings2","springs","setSprings","forceRerender","rerender","createRef","_","offsetHeight","calcPositions","deletedTaskIndex","deletedOrder","heightsSum","reduce","sum","heightsArray","total","topBorder","center","bottomBorder","gesture","useDrag","_ref2","_ref2$args","args","trueIndex","movement","event","first","stopPropagation","curIndex","curRow","newIndex","Math","abs","getNewIndex","newOrder","newHeights","isEqual","filterTaps","TodoListTasks_TaskWrapper","assign","tasks_TodoListTask","ListTitle","listTitle","isTitleEditable","switchTitleMode","ButtonWrapper","styles","colors","deleteTodoList","addTask","editList","ContextButtons_Button","SingleListWrapper","SingleListBottomLayer","$closeLookState","$hovered","listTasks","paletteIndex","setNewHeights","deleteList","closeLook","currHeight","useCallback","filterValue","t","bind","useHover","hovering","hoveredState","_useState5","_useState6","setTitleEditMode","todolists_ContextButtons","replace","c","r","random","toString","todolists_TodoListTitle","tasks_TodoListTasks","CloseButton","ClosingButton","currentPalette","TodoListContainer","$width","CloseButtonAnimatedWrapper","setWrapperAnimation","width","scrollByListDrugging","setCloseLookState","returnFromCloseLookState","switchScrollBar","store","columns","useMemo","currWidth","recalculateMeasures","currentSettings","gridItems","find","x","temporaryValue","findHeight","newHeightsArray","display","Array","fill","heightInMeasuredArray","column","rightX","botY","horizontalCenter","verticalCenter","max","apply","deletedListIndex","deletedList","console","log","reorder","oldIndex","arr","index1","index2","val","idx","calculatePositions","xPos","currItem","yPos","setActualSprings","springsIndex","n","right","top","bottom","pageTop","pageBottom","eventCoords","virtualY","_ref2$movement","active","draggedList","offsetX","offsetY","clientX","clientY","window","innerHeight","getBounds","promise","resolve","indexOfLookedList","setIndexOfLookedList","_useSpring","_useSpring2","closeButtonAnimation","setCloseButtonAnimation","Fragment","to","animate","rotateX","rotateZ","todolists_CloseButton","todolists_TodoList","AllLists","ScrollableWrapper","ScrollBarWrapper","ScrollBarThing","ScrollWrapper","authState","visible","setVisible","measuredRef","setWidth","isMounted","timeoutId","resizeListener","clearTimeout","offsetWidth","addEventListener","removeEventListener","config","tension","friction","clamp","wrapperAnimation","scrolledY","scrolledPercent","memoizedData","_useSpring3","_useSpring4","scrollingAnimation","setScroll","visibilityOfScrollBar","from","border","scrollBarHeight","useWheel","delta","domTarget","eventOptions","capture","offset","posY","bindDraggedScrollBar","_ref3","absY","direction","todolists_MappedLists","$visible","isMobile","library","add","far","fas","Background","AnimatedBackground","animateBackground","setBackground","RotatedBackground","Wrapper","ButtonsWrapper","EditButton","ProgressBackground","Progress","InnerBackground","$altBackground","InnerEditButtonText","SmallerButton","MediumButton","InnerSmallerButtonText","MainInterface","initialLoading","fetching","backgroundHeight","medX","medY","spring","setSpring","clipPath1","clipPath2","progressBarrAnimation","setProgressBar","progress","progress1","progress2","actionMessage","textTransition","useTransition","enter","leave","getState","oldTodoLists","todoListsWithNewId","addedLists","deletedLists","editedLists","addedTasks","editedTasks","deletedTasks","createAndChangeIdOfTasksInOrderList","listPromises","currentOrder","swapOrder","addedTasksInLists","currentListsStateOnServer","requiredOrder","_currentOrder","_swapOrder","groupedSwapOrder","swapOrderPending","oldList","newList","push","oldTask","resultCode","tasksPromises","newId","oldId","tasksWithNewId","newListId","t0","thisListPosId","swappedId","beforeSwappedId","listId","currentList","listsToUpdate","listsOnServer","getListOrder","t1","orderFromCurrentState","itemWithUpdatedState","curItem","forEach","currOrder","newTaskPosId","consistentSwapOrder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_order","Symbol","iterator","done","return","finish","clipPath","translateY","translateX","GlobalStyles","createGlobalStyle","_templateObject","App","Components_AnimatedBackground","App_Wrapper","Components_MainInterface","todolists_ScrollWrapper","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","root","document","getElementById","ReactDOM","unstable_createRoot","render","es","Components_App"],"mappings":"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","file":"static/js/main.ea504b9f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/auth/me\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\ntype CommonResponseType<T> = {\r\n    resultCode: number;\r\n    messages: string[];\r\n    data: T\r\n};\r\ntype RestoreTasksResponseType = {\r\n    items: TaskType[];\r\n    totalCount: number;\r\n    error?: string\r\n};\r\ntype GetMeType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n};\r\n\r\nexport const api = {\r\n    getAuthState: () => {\r\n        return loginInstance.get<CommonResponseType<GetMeType>>('').then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await loginInstance.get<CommonResponseType<GetMeType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    logIn: () => {\r\n        const requestObject = {email: \"npikolist@gmail.com\", password: \"512347\", rememberMe: false};\r\n        return loginInstance.post<CommonResponseType<{userId: string}>>('', requestObject)\r\n            .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await loginInstance.post<CommonResponseType<{userId: string}>>\r\n                    ('', requestObject)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreState: () => {\r\n        return instance.get<Array<TodoListType>>('') .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<Array<TodoListType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTodoList: (title: string) => {\r\n        return instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title}).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title})\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreTasks: (todoListId: string) => {\r\n        return instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTask: (title: string, todoListId: string) => {\r\n        return instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTask: (todoListId: string, taskId: string, newTask: TaskType) => {\r\n        return instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    deleteTodoList: (todoListId: string) => {\r\n        return instance.delete<CommonResponseType<{}>>(`/${todoListId}`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.delete<CommonResponseType<{}>>(`/${todoListId}`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    deleteTask: (todoListId: string, taskId: string) => {\r\n        return instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTodoListTitle: (todoListId:string, newTitle: string) => {\r\n        return instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTasks: (todoListId: string, swappedTask: string, beforeSwappedTask: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`, {putAfterItemId: beforeSwappedTask})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`,\r\n                            {putAfterItemId: beforeSwappedTask})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTodoList: (swappedList: string, beforeSwappedList: string| null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`, {putAfterItemId: beforeSwappedList})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`,\r\n                            {putAfterItemId: beforeSwappedList})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    }\r\n};\r\n","export const movePos  = (array: Array<any>, moveIndex: number, toIndex: number) => {\r\n    /* #move - Moves an array item from one position in an array to another.\r\n\r\n       Note: This is a pure function so a new array will be returned, instead\r\n       of altering the array argument.\r\n\r\n      Arguments:\r\n      1. array     (String) : Array in which to move an item.         (required)\r\n      2. moveIndex (Object) : The index of the item to move.          (required)\r\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\r\n    */\r\n    let item = array[moveIndex];\r\n    let length = array.length;\r\n    let diff = moveIndex - toIndex;\r\n\r\n    if (diff > 0) {\r\n        // move left\r\n        return [\r\n            ...array.slice(0, toIndex),\r\n            item,\r\n            ...array.slice(toIndex, moveIndex),\r\n            ...array.slice(moveIndex + 1, length)\r\n        ];\r\n    } else if (diff < 0) {\r\n        // move right\r\n        return [\r\n            ...array.slice(0, moveIndex),\r\n            ...array.slice(moveIndex + 1, toIndex + 1),\r\n            item,\r\n            ...array.slice(toIndex + 1, length)\r\n        ];\r\n    }\r\n    return array;\r\n}","/*export const neumorphColors = [\r\n    {\r\n        background: '#1a0b3b',\r\n        backgroundOuter: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n        shadows: '22px 22px 49px #0a0418, -22px -22px 49px #2a125e',\r\n        shadowsFocused: 'inset 11px 11px 23px #0a0418, inset -11px -11px 23px #2a125e',\r\n        shadowsHovered: '22px 22px 49px #0a0418',\r\n        innerShadows: '11px 11px 23px #0a0418, -11px -11px 23px #2a125e',\r\n        color: 'rgb(108, 98, 131)',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: 'rgb(30, 13, 55)',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#f6f7fa',\r\n        backgroundOuter: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadows: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsFocused: 'inset 11px 11px 23px #a2a3a5, inset -11px -11px 23px #ffffff',\r\n        shadowsHovered: '22px 22px 49px #a2a3a5',\r\n        innerShadows: '11px 11px 23px #a2a3a5, -11px -11px 23px #ffffff',\r\n        color: '#ff9605',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: '#f6f7fa',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#ff9605',\r\n        backgroundOuter: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadows: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsFocused: 'inset 11px 11px 23px #a86303, inset -11px -11px 23px #ffc907',\r\n        shadowsHovered: '22px 22px 49px #a86303',\r\n        innerShadows: '11px 11px 23px #a86303, -11px -11px 23px #ffc907',\r\n        color: '#f6f7fa',\r\n        hoveredAltBackground: '#f6f7fa',\r\n        hoveredColor: '#ff9605',\r\n        backgroundAltInner: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadowsAlt: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a2a3a5, inset -22px -22px 49px #ffffff',\r\n    }\r\n];*/\r\n\r\nexport const neumorphColors: Array<NeumorphColorsType> = [\r\n    {\r\n        background: '#B5838D',\r\n        concaveBackground: 'linear-gradient(145deg, #a3767f, #c28c97)',\r\n        shadows: '20px 20px 40px #9a6f78, -20px -20px 40px #d097a2',\r\n        innerShadows: 'inset 20px 20px 40px #9a6f78, inset -20px -20px 40px #d097a2',\r\n        littleShadows: '5px 5px 10px #9a6f78, -5px -5px 10px #d097a2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #9a6f78, inset -5px -5px 10px #d097a2',\r\n        progressBarColor: '#d097a2',\r\n        color: 'white',\r\n    },{\r\n        background: '#E5989B',\r\n        concaveBackground: 'linear-gradient(145deg, #ce898c, #f5a3a6)',\r\n        shadows: '20px 20px 40px #c38184, -20px -20px 40px #ffafb2',\r\n        innerShadows: 'inset 20px 20px 40px #c38184, inset -20px -20px 40px #ffafb2',\r\n        littleShadows: '5px 5px 10px #c38184, -5px -5px 10px #ffafb2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c38184, inset -5px -5px 10px #ffafb2',\r\n        progressBarColor: '#ffafb2',\r\n        color: 'white',\r\n    },{\r\n        background: '#FFB4A2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6a292, #ffc1ad)',\r\n        shadows: '20px 20px 40px #d49586, -20px -20px 40px #ffd3be',\r\n        innerShadows: 'inset 20px 20px 40px #d49586, inset -20px -20px 40px #ffd3be',\r\n        littleShadows: '5px 5px 10px #d49586, -5px -5px 10px #ffd3be;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d49586, inset -5px -5px 10px #ffd3be',\r\n        progressBarColor: '#ffd3be',\r\n        color: 'white',\r\n    }, {\r\n        background: '#FFCDB2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6b9a0, #ffdbbe)',\r\n        shadows: '20px 20px 40px #d4aa94, -20px -20px 40px #fff0d0',\r\n        innerShadows: 'inset 20px 20px 40px #d4aa94, inset -20px -20px 40px #fff0d0',\r\n        littleShadows: '5px 5px 10px #d4aa94, -5px -5px 10px #fff0d0;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d4aa94, inset -5px -5px 10px #fff0d0',\r\n        progressBarColor: '#fff0d0',\r\n        color: 'white'\r\n    }\r\n];\r\n\r\nexport const defaultPalette: NeumorphColorsType = {\r\n    background: '#6D6875',\r\n    concaveBackground: 'linear-gradient(145deg, #625e69, #756f7d)',\r\n    shadows: '20px 20px 40px #5e5965, -20px -20px 40px #7c7785',\r\n    innerShadows: 'inset 20px 20px 40px #5e5965, inset -20px -20px 40px #7c7785',\r\n    littleShadows: '5px 5px 10px #5d5863, -5px -5px 10px #7d7887',\r\n    innerLittleShadows: 'inset 5px 5px 10px #5d5863, inset -5px -5px 10px #7d7887',\r\n    progressBarColor: '#7c7785',\r\n    color: 'white',\r\n    default: true\r\n};\r\n\r\nexport const interfacePalette: NeumorphColorsType = {\r\n    background: '#1a0b3b',\r\n    concaveBackground: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n    shadows: '20px 20px 40px #0a0418, -20px -20px 40px #2a125e',\r\n    innerShadows: '20px 20px 40px #0a0418, -20px -20px 40px #2a125e',\r\n    littleShadows: '5px 5px 10px #0a0418, -5px -5px 10px #2a125e',\r\n    color: 'white',\r\n    innerLittleShadows: 'inset 5px 5px 10px #0a0418, inset -5px -5px 10px #2a125e',\r\n    progressBarColor: '#1a0b3b',\r\n}\r\n\r\n\r\nexport type NeumorphColorsType = {\r\n    background: string,\r\n    concaveBackground: string,\r\n    shadows: string,\r\n    innerShadows: string,\r\n    littleShadows: string,\r\n    innerLittleShadows: string,\r\n    progressBarColor: string,\r\n    color: string,\r\n    default?: boolean\r\n};","import {api} from \"./api\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport cloneDeep from \"lodash-es/cloneDeep\";\r\nimport {movePos} from \"../hooks/movePos\";\r\nimport {act} from \"react-dom/test-utils\";\r\nimport {defaultPalette, neumorphColors, NeumorphColorsType} from \"../Components/neumorphColors\";\r\n\r\ntype InitialStateType = {\r\n    todoLists: Array<TodoListType>,\r\n    deepCopy: Array<TodoListType>,\r\n    editable: boolean,\r\n    listsOrder: Array<string>,\r\n    tasksOrder: Array<{ todoListId: string, newTasksOrder: Array<string> }>,\r\n    newListsId: Array<{ oldId: string, newId: string }>,\r\n    newTasksId: Array<{ oldId: string, newId: string, todoListId: string }>,\r\n    errorsNumber: number,\r\n    focusedStatus: boolean,\r\n    currentPaletteIndex: NeumorphColorsType,\r\n    initialLoadingState: boolean,\r\n    pendingState: boolean,\r\n    swapState: boolean,\r\n    fetchingState: boolean,\r\n    height: number,\r\n    allTasks: number,\r\n    completedTasks: number\r\n};\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    deepCopy: [],\r\n    editable: false,\r\n    listsOrder: [],\r\n    tasksOrder: [],\r\n    newListsId: [],\r\n    newTasksId: [],\r\n    errorsNumber: 0,\r\n    focusedStatus: false,\r\n    currentPaletteIndex: defaultPalette,\r\n    initialLoadingState: true,\r\n    pendingState: false,\r\n    swapState: false,\r\n    fetchingState: false,\r\n    height: 0,\r\n    allTasks: 0,\r\n    completedTasks: 0\r\n};\r\n\r\nconst functionalReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'functionalReducer/SET_TODO_LISTS':\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        case 'functionalReducer/SET_TASKS':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: action.tasks}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/ADD_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [action.newTodoList, ...state.todoLists],\r\n            };\r\n        case 'functionalReducer/ADD_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: [action.newTask, ...list.tasks]}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list, tasks: list.tasks.map(task => {\r\n                                if (task.id === action.task.id) {\r\n                                    return {...action.task}\r\n                                } else return task;\r\n                            })\r\n                        }\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/DELETE_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(list => list.id !== action.todoListId),\r\n            };\r\n        case 'functionalReducer/DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: list.tasks.filter(task => task.id !== action.taskId)}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TODO_LIST_TITLE':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, title: action.todoListTitle}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case \"functionalReducer/SWAP_TODO_LISTS\":\r\n            return {\r\n                ...state,\r\n                listsOrder: action.newListsOrder\r\n            }\r\n        case \"functionalReducer/SWAP_TASKS\":\r\n            const index = state.tasksOrder.findIndex(item => item.todoListId === action.todoListId);\r\n            const newSwappedTasks = index !== -1 ? state.tasksOrder.map((item, i) => {\r\n                if (i === index) return {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}\r\n                return item\r\n            }) : [...state.tasksOrder, {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}]\r\n            return {\r\n                ...state,\r\n                tasksOrder: newSwappedTasks\r\n            }\r\n        case \"functionalReducer/ENABLE_EDIT_MODE\": //глянуть\r\n            return {\r\n                ...state,\r\n                editable: true,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n                errorsNumber: 0,\r\n                deepCopy: cloneDeep(state.todoLists)\r\n            };\r\n        case \"functionalReducer/DISABLE_EDIT_MODE\":\r\n            return {\r\n                ...state,\r\n                editable: false\r\n            }\r\n        case \"functionalReducer/SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorsNumber: state.errorsNumber + 1\r\n            };\r\n        case \"functionalReducer/SET_FOCUSED_STATUS\":\r\n            return {\r\n                ...state,\r\n                focusedStatus: action.status\r\n            };\r\n        case \"functionalReducer/SET_NEW_ID\":\r\n            return {\r\n                ...state,\r\n                todoLists: action.newTodoLists\r\n            };\r\n        case \"functionalReducer/SET_CURRENT_PALETTE_INDEX\":\r\n            return {\r\n                ...state,\r\n                currentPaletteIndex: action.palette\r\n            }\r\n        case \"functionalReducer/REJECT_ALL_CHANGES\":\r\n            return {\r\n                ...state,\r\n                todoLists: state.deepCopy,\r\n                editable: false,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n            }\r\n        case \"functionalReducer/COMPLETE_INITIAL_LOADING_STATE\":\r\n            return {\r\n                ...state,\r\n                initialLoadingState: false\r\n            }\r\n        case \"functionalReducer/SET_PENDING_STATE\":\r\n            return {\r\n                ...state,\r\n                pendingState: action.pendingState\r\n            }\r\n        case \"functionalReducer/SET_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case \"functionalReducer/SET_ALL_TASKS\":\r\n            return {\r\n                ...state,\r\n                allTasks: action.tasks\r\n            }\r\n        case \"functionalReducer/SET_COMPLETED_TASK\":\r\n            return {\r\n                ...state,\r\n                completedTasks: action.restore ? 0 : state.completedTasks+1\r\n            }\r\n        case \"functionalReducer/SET_SWAP_STATE\":\r\n            return {\r\n                ...state,\r\n                swapState: action.state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n    addTodoList: (newTodoList: TodoListType) => ({type: 'functionalReducer/ADD_TODO_LIST', newTodoList} as const),\r\n    addTask: (newTask: TaskType, todoListId: string) => ({type: 'functionalReducer/ADD_TASK', newTask, todoListId} as const),\r\n    changeTask: (task: TaskType) => ({type: 'functionalReducer/CHANGE_TASK', task} as const),\r\n    deleteTodoList: (todoListId: string) => ({type: 'functionalReducer/DELETE_TODO_LIST', todoListId} as const),\r\n    deleteTask: (todoListId: string, taskId: string) => ({type: 'functionalReducer/DELETE_TASK', taskId, todoListId} as const),\r\n    restoreTodoList: (todoLists: TodoListType[]) => ({type: 'functionalReducer/SET_TODO_LISTS', todoLists} as const),\r\n    restoreTasks: (tasks: TaskType[], todoListId: string) => ({\r\n        type: 'functionalReducer/SET_TASKS',\r\n        tasks,\r\n        todoListId\r\n    } as const),\r\n    changeTodoListTitle: (todoListId: string, todoListTitle: string) => ({\r\n        type: 'functionalReducer/CHANGE_TODO_LIST_TITLE',\r\n        todoListId,\r\n        todoListTitle\r\n    } as const),\r\n    enableEditMode: () => ({type: 'functionalReducer/ENABLE_EDIT_MODE'} as const),\r\n    disableEditMode: () => ({type: 'functionalReducer/DISABLE_EDIT_MODE'} as const),\r\n    setError: () => ({type: 'functionalReducer/SET_ERROR'} as const),\r\n    setFocusedStatus: (status: boolean) => ({type: 'functionalReducer/SET_FOCUSED_STATUS', status} as const),\r\n    swapTasks: (todoListId: string, newTasksOrder: Array<string>) => ({\r\n        type: 'functionalReducer/SWAP_TASKS', todoListId, newTasksOrder\r\n    } as const),\r\n    swapTodoLists: (newListsOrder: Array<string>) => ({type: 'functionalReducer/SWAP_TODO_LISTS', newListsOrder} as const),\r\n    setTodoLists: (newTodoLists: Array<TodoListType>) => ({type: 'functionalReducer/SET_NEW_ID', newTodoLists} as const),\r\n    setPalette: (palette: NeumorphColorsType) => ({type: 'functionalReducer/SET_CURRENT_PALETTE_INDEX', palette} as const),\r\n    rejectAllChanges: () => ({type: 'functionalReducer/REJECT_ALL_CHANGES'} as const),\r\n    completeInitialLoadingState: () => ({type: 'functionalReducer/COMPLETE_INITIAL_LOADING_STATE'} as const),\r\n    setPendingState: (pendingState: boolean) => ({type: 'functionalReducer/SET_PENDING_STATE', pendingState} as const),\r\n    setHeight: (height: number) => ({type: 'functionalReducer/SET_HEIGHT', height} as const),\r\n    setAllTasks: (tasks: number) => ({type: 'functionalReducer/SET_ALL_TASKS', tasks} as const),\r\n    setCompletedTask: (restore: boolean) => ({type: 'functionalReducer/SET_COMPLETED_TASK', restore} as const),\r\n    setSwapState: (state: boolean) => ({type: 'functionalReducer/SET_SWAP_STATE', state} as const),\r\n    setFetchingState: (state: boolean) => ({type: 'functionalReducer/SET_FETCHING_STATE', state} as const),\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsTypes>;\r\ntype ThunkActionType = ThunkDispatch<AppStateType, unknown, ActionsTypes>;\r\n\r\nexport const loadTodoListsTC = (): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreState().then(data => {\r\n        dispatch(actions.restoreTodoList(data))\r\n    })\r\n};\r\nexport const addTodoListTC = (title: string): ThunkType => (dispatch: ThunkActionType) => {//done\r\n    api.addTodoList(title).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTodoList(data.data.item))\r\n    })\r\n};\r\nexport const addTaskTC = (newTask: string, todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.addTask(newTask, todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTask(data.data.item, todoListId))\r\n    })\r\n};\r\nexport const changeTaskTC = (todoListId: string, taskId: string, newTask: TaskType): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTask(todoListId, taskId, newTask).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTask(data.data.item))\r\n    })\r\n};\r\nexport const deleteTodoListTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTodoList(todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTodoList(todoListId))\r\n    })\r\n};\r\nexport const deleteTaskTC = (todoListId: string, taskId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTask(todoListId, taskId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTask(todoListId, taskId))\r\n    })\r\n};\r\nexport const restoreTasksTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreTasks(todoListId).then(data => {\r\n        dispatch(actions.restoreTasks(data.items, todoListId))\r\n    })\r\n};\r\nexport const changeTodoListTitleTC = (todoListId: string, todoListTitle: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTodoListTitle(todoListId, todoListTitle).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTodoListTitle(todoListId, todoListTitle))\r\n    })\r\n};\r\n\r\n/*export const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n        const deletedLists = getState().todoList.deletedLists;\r\n        const addedLists = getState().todoList.addedLists;\r\n        const clearedAddedLists = getState().todoList.addedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const changedLists = getState().todoList.changedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const clearlyDeletedLists = deletedLists.filter(list => addedLists\r\n            .findIndex(item => item.id === list) === -1);\r\n        /!*const addedSwappedLists = getState().todoList.swappedLists.filter(item => clearedAddedLists\r\n            .findIndex(i => i.id === (item[0].id || item[1].id)) !== -1);\r\n        const clearlySwappedLists = getState().todoList.swappedLists.filter(item => addedSwappedLists\r\n            .findIndex(i => i[0] === item[0] && i[1] === item[1]) === -1);*!/\r\n\r\n        const deletedTasksWithList = getState().todoList.deletedTasksWithList;\r\n        const deletedTasks = getState().todoList.deletedTasks.filter(item => deletedTasksWithList\r\n            .findIndex(i => i.taskId === item.taskId) === -1);\r\n        const allDeletedTasks = [...deletedTasks, ...deletedTasksWithList];\r\n        const changedTasks = getState().todoList.changedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const addedTasks = getState().todoList.addedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const clearedSwappedTasks = getState().todoList.swappedTasks.filter(item => deletedLists\r\n            .findIndex(i => i === item.todoListId) === -1).map(item => item.swappedTasks\r\n            .map(taskArray => [...taskArray, item.todoListId])).map(item => {\r\n            const newArray: Array<string> = [];\r\n            return newArray.concat(...item)\r\n        })\r\n        //очистка от удалённых\r\n\r\n        const clearlyAddedLists = clearedAddedLists.map(list => {\r\n            const sameList = changedLists.find(item => item.id === list.id);\r\n            if (sameList) {\r\n                return sameList\r\n            } else return list\r\n        });\r\n        const clearlyChangedLists = changedLists.filter(list => clearlyAddedLists\r\n            .findIndex(item => item.id === list.id) === -1);\r\n        //очистка одинаковых листов\r\n\r\n        const clearedNewTasks = addedTasks.map(task => {\r\n            const sameTask = changedTasks.find(item => item.id === task.id)\r\n            if (sameTask) {\r\n                return sameTask\r\n            } else return task\r\n        });\r\n        const clearlyChangedTasks = changedTasks.filter(task => clearedNewTasks\r\n            .findIndex(item => item.id === task.id) === -1);\r\n        const addedInNewListsTasks = clearedNewTasks.filter(task => clearlyAddedLists\r\n            .findIndex(list => list.id === task.todoListId) !== -1);\r\n        const clearlyAddedTasks = clearedNewTasks.filter(task => addedInNewListsTasks\r\n            .findIndex(item => item.id === task.id) !== 1);\r\n        const addedSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            clearlyAddedTasks.findIndex(i => i.id === task) !== -1));\r\n        const addedInNewListsSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            addedInNewListsTasks.findIndex(i => i.id === task) !== -1));\r\n        const clearlySwappedTasks = clearedSwappedTasks.map(item => item.filter(task => (\r\n            addedSwappedTasks.findIndex(i => (i[0] || i[1]) === task) === -1 || addedInNewListsSwappedTasks\r\n                .findIndex(i => (i[0] || i[1]) === task) === -1)));\r\n        //очистка тасок\r\n\r\n        //запросы\r\n        if (clearlyAddedLists.length !== 0) {\r\n            let newLists: Array<{ newId: string, oldId: string }> = [];\r\n            const promises = clearlyAddedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) newLists.push({newId: data.data.item.id, oldId: list.id})\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedInNewListsTasks.length !== 0) {\r\n                let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n                const promises = addedInNewListsTasks.map(async (task) => {\r\n                    let newListId = newLists.find(list => list.oldId === task.todoListId)!.newId;\r\n                    return await api.addTask(task.title, newListId).then(data => {\r\n                        if (data.resultCode === 0) newTasks.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            listId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n                await Promise.all(promises);\r\n                if (addedInNewListsSwappedTasks.length !== 0) {\r\n                    const newIdSwappedTasks = addedInNewListsSwappedTasks.map(tasks => tasks.map(task => {\r\n                        const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                        return {newId: currentTask.newId, listId: currentTask.listId}\r\n                    }))\r\n                    newIdSwappedTasks.map(tasks => {\r\n                        api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (clearlyAddedTasks.length !== 0) {\r\n            let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n            const promises = clearlyAddedTasks.map(async (task) => {\r\n                api.addTask(task.title, task.todoListId).then(data => {\r\n                    if (data.resultCode === 0) newTasks.push({\r\n                        newId: data.data.item.id,\r\n                        oldId: task.id,\r\n                        listId: data.data.item.todoListId\r\n                    })\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedSwappedTasks.length !== 0) {\r\n                const newIdSwappedTasks = addedSwappedTasks.map(tasks => tasks.map(task => {\r\n                    const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                    return {newId: currentTask.newId, listId: currentTask.listId}\r\n                }))\r\n                newIdSwappedTasks.map(tasks => {\r\n                    api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        if (clearlySwappedTasks.length !== 0) {\r\n            clearlySwappedTasks.forEach(tasks => {\r\n                api.swapTasks(tasks[2], tasks[0], tasks[1]).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyDeletedLists.length !== 0) {\r\n            clearlyDeletedLists.forEach(list => {\r\n                api.deleteTodoList(list).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedLists.length !== 0) {\r\n            clearlyChangedLists.forEach(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedTasks.length !== 0) {\r\n            clearlyChangedTasks.forEach(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.forEach(task => {\r\n                api.deleteTask(task.todoListId, task.taskId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        dispatch(actions.disableEditMode())\r\n    };*/\r\n\r\n\r\nexport const initialization = (): ThunkType => async (dispatch: ThunkActionType) => {\r\n    const authState = await api.getAuthState();\r\n    console.log(authState)\r\n    if (!authState.data.id) {\r\n        await api.logIn()\r\n    }\r\n    dispatch(getStateFromServer(true));\r\n};\r\n\r\nconst getStateFromServer = (initial: boolean): ThunkType => async (dispatch: ThunkActionType) => {\r\n    if (!initial) dispatch(actions.setFetchingState(true));\r\n    const lists = await api.restoreState();\r\n    let listsWithTasks = lists;\r\n    if (lists.length !== 0) {\r\n        dispatch(actions.setAllTasks(lists.length));\r\n        dispatch(actions.setCompletedTask(true))\r\n        const getTasks = lists.map(async (item) => {\r\n            return await api.restoreTasks(item.id).then(data => {\r\n                const index = listsWithTasks.findIndex(list => item.id === list.id);\r\n                listsWithTasks[index] = {...item, tasks: data.items};\r\n                dispatch(actions.setCompletedTask(false))\r\n            })\r\n        });\r\n        await Promise.all(getTasks)\r\n    }\r\n    dispatch(actions.setTodoLists(listsWithTasks));\r\n    if (initial) setTimeout(() => dispatch(actions.completeInitialLoadingState()), 400);\r\n};\r\n\r\nexport const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n\r\n        dispatch(actions.disableEditMode());\r\n        dispatch(actions.setPendingState(true))\r\n        /*dispatch(actions.setPendingState(true))*/\r\n\r\n        const oldTodoLists = getState().todoList.deepCopy;\r\n        const newTodoLists = getState().todoList.todoLists;\r\n        let listsOrder = getState().todoList.listsOrder;\r\n        let tasksOrder = getState().todoList.tasksOrder;\r\n\r\n        const newListsId: Array<{ oldId: string, newId: string }> = [];\r\n        const newTasksId: Array<{ oldId: string, newId: string, todoListId: string }> = [];\r\n        let todoListsWithNewId: Array<TodoListType> = [];\r\n\r\n        //added items\r\n        const addedLists = newTodoLists.filter(list => oldTodoLists.findIndex(oldList => oldList.id === list.id) === -1);\r\n        const deletedLists = oldTodoLists.filter(list => newTodoLists.findIndex(newList => newList.id === list.id) === -1);\r\n        const editedLists: Array<TodoListType> = []\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList && list.title !== oldList.title) {\r\n                editedLists.push(list)\r\n            }\r\n        })\r\n\r\n        let addedTasks: Array<TaskType> = [];\r\n        const editedTasks: Array<TaskType> = [];\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList) {\r\n                list.tasks.map(task => {\r\n                    const oldTask = oldList.tasks.find(oldTask => oldTask.id === task.id)\r\n                    if (!oldTask) {\r\n                        addedTasks.push(task);\r\n                        return\r\n                    }\r\n                    if (oldTask && oldTask.title !== task.title) {\r\n                        editedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n            if (!oldList && list.tasks.length !== 0) {\r\n                list.tasks.map(task => addedTasks.push(task))\r\n            }\r\n        })\r\n        const deletedTasks: Array<TaskType> = [];\r\n        oldTodoLists.map(list => {\r\n            const newList = newTodoLists.find(newList => newList.id === list.id);\r\n            if (newList) {\r\n                list.tasks.map(task => {\r\n                    const newTask = newList.tasks.find(newTask => newTask.id === task.id)\r\n                    if (!newTask) {\r\n                        deletedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        //progress bar logic\r\n        let allTasks = 0;\r\n        if (deletedLists.length !== 0) allTasks = allTasks + deletedLists.length;\r\n        if (deletedTasks.length !== 0) allTasks = allTasks + deletedTasks.length;\r\n        if (addedLists.length !== 0) allTasks = allTasks + addedLists.length;\r\n        if (addedTasks.length !== 0) allTasks = allTasks + addedTasks.length;\r\n        if (editedLists.length !== 0) allTasks = allTasks + editedLists.length;\r\n        if (editedTasks.length !== 0) allTasks = allTasks + editedTasks.length;\r\n        dispatch(actions.setAllTasks(allTasks));\r\n\r\n        //queries\r\n        dispatch(actions.setCompletedTask(true))\r\n        if (deletedLists.length !== 0) {\r\n            deletedLists.map(list => {\r\n                api.deleteTodoList(list.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.map(task => {\r\n                api.deleteTask(task.todoListId, task.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedLists.length !== 0) {\r\n            editedLists.map(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedTasks.length !== 0) {\r\n            editedTasks.map(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n\r\n        const createAndChangeIdOfTasksInOrderList = async () => {\r\n            if (addedTasks.length !== 0) {\r\n                const tasksPromises = addedTasks.map(async (task) => {\r\n                    return await api.addTask(task.title, task.todoListId).then(data => {\r\n                        if (data.resultCode === 0) newTasksId.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            todoListId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                    });\r\n                })\r\n                await Promise.all(tasksPromises);\r\n                if (tasksOrder.length !== 0) {\r\n                    tasksOrder = tasksOrder.map(item => {\r\n                        const newList = newListsId.find(list => list.oldId === item.todoListId)\r\n                        const tasksWithNewId = item.newTasksOrder.map(taskId => {\r\n                            const newTask = newTasksId.find(newTask => newTask.oldId === taskId);\r\n                            if (newTask) return newTask.newId;\r\n                            return taskId\r\n                        })\r\n                        return {todoListId: newList ? newList.newId : item.todoListId, newTasksOrder: tasksWithNewId}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addedLists.length !== 0) {\r\n            const listPromises = addedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        newListsId.push({newId: data.data.item.id, oldId: list.id});\r\n                        dispatch(actions.setCompletedTask(false))\r\n                    }\r\n                })\r\n\r\n            })\r\n            await Promise.all(listPromises);\r\n            if (addedTasks.length !== 0) {\r\n                addedTasks = addedTasks.map(task => {\r\n                    const newListId = newListsId.find(list => list.oldId === task.todoListId);\r\n                    if (newListId) return {...task, todoListId: newListId.newId}\r\n                    return task\r\n                })\r\n            }\r\n            if (listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.map(item => {\r\n                    const newList = newListsId.find(list => list.oldId === item)\r\n                    if (newList) return newList.newId;\r\n                    return item\r\n                })\r\n            }\r\n            await createAndChangeIdOfTasksInOrderList()\r\n        } else await createAndChangeIdOfTasksInOrderList();\r\n\r\n        //swap progress\r\n        dispatch(actions.setPendingState(false));\r\n        dispatch(actions.setSwapState(true))\r\n\r\n        //changing id\r\n        if (newListsId.length !== 0) {\r\n            todoListsWithNewId = newTodoLists.map(list => {\r\n                const newList = newListsId.find(item => item.oldId === list.id)\r\n                if (newList) return {...list, id: newList.newId};\r\n                return list\r\n            })\r\n        } else todoListsWithNewId = newTodoLists;\r\n        if (newTasksId.length !== 0) {\r\n            todoListsWithNewId = todoListsWithNewId.map(list => {\r\n                const tasks = list.tasks.map(task => {\r\n                    const newTask = newTasksId.find(item => item.oldId === task.id)\r\n                    if (newTask) return {...task, id: newTask.newId}\r\n                    return task\r\n                })\r\n                return {...list, tasks}\r\n            })\r\n        }\r\n\r\n        //swap items\r\n        if (listsOrder.length !== 0 || addedLists.length > 1) {\r\n            if (deletedLists.length !== 0 && listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.filter(list => todoListsWithNewId.findIndex(item => item.id === list) !== -1)\r\n            }\r\n            let currentOrder = addedLists.length > 1 ? await api.restoreState().then(data => data.map(item => item.id))\r\n                : todoListsWithNewId.map(list => list.id);\r\n            const swapOrder: Array<{ swappedId: string, beforeSwappedId: string | null }> = [];\r\n            const order = listsOrder.length !== 0 ? listsOrder : todoListsWithNewId.map(list => list.id);\r\n            order.map((thisListPosId, index) => {\r\n                if (thisListPosId !== currentOrder[index]) {\r\n                    if (index === 0) swapOrder.push({swappedId: thisListPosId, beforeSwappedId: null})\r\n                    else swapOrder.push({swappedId: thisListPosId, beforeSwappedId: listsOrder[index - 1]});\r\n                    const oldIndex = currentOrder.findIndex(listId => listId === thisListPosId)\r\n                    currentOrder = movePos(currentOrder, oldIndex, index)\r\n                }\r\n            });\r\n            swapOrder.map(item => {\r\n                api.swapTodoList(item.swappedId, item.beforeSwappedId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n        }\r\n\r\n        if (tasksOrder.length !== 0 || addedTasks.length > 1) {\r\n            if (deletedTasks.length !== 0 && tasksOrder.length !== 0) {\r\n                tasksOrder = tasksOrder.map(item => {\r\n                    const currentList = todoListsWithNewId.find(list => list.id === item.todoListId)\r\n                    if (currentList) {\r\n                        const newTasksOrder = item.newTasksOrder.filter(taskId => currentList.tasks.findIndex(task =>\r\n                            task.id === taskId) !== -1)\r\n                        return {...item, newTasksOrder}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            let addedTasksInLists: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            const currentListsStateOnServer = newTasksId.length > 1 ? await (async () => {\r\n                newTasksId.map(task => {\r\n                    const list = addedTasksInLists.length !== 0 ?\r\n                        addedTasksInLists.find(list => list.todoListId === task.todoListId) : undefined;\r\n                    if (list) {\r\n                        const index = addedTasksInLists.findIndex(list => list.todoListId === task.todoListId);\r\n                        addedTasksInLists[index] = {...list, tasks: [...list.tasks, task.newId]}\r\n                    } else addedTasksInLists.push({todoListId: task.todoListId, tasks: [task.newId]})\r\n                })\r\n                let listsToUpdate: Array<string> = [];\r\n                addedTasksInLists.map(item => {\r\n                    if (item.tasks.length > 1) listsToUpdate.push(item.todoListId)\r\n                })\r\n                if (listsToUpdate.length !== 0) {\r\n                    let listsOnServer: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n                    const getListOrder = listsToUpdate.map(async (item) => {\r\n                        return await api.restoreTasks(item).then(res => {\r\n                            const tasks = res.items.map(item => item.id);\r\n                            listsOnServer.push({todoListId: item, tasks})\r\n                        });\r\n                    });\r\n                    await Promise.all(getListOrder);\r\n                    return listsOnServer\r\n                } else return undefined\r\n            })() : undefined;\r\n\r\n            /*console.log(currentListsStateOnServer,\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.id),\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.title))*/\r\n\r\n            let requiredOrder: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            if (currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const isItemInOrder = tasksOrder.find(currItem =>\r\n                        currItem.todoListId === item.todoListId);\r\n                    if (isItemInOrder) return;\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n                tasksOrder.map(item => requiredOrder.push({todoListId: item.todoListId, tasks: item.newTasksOrder}))\r\n            } else if (!currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                requiredOrder = tasksOrder.map(item => ({todoListId: item.todoListId, tasks: item.newTasksOrder}));\r\n            } else if (currentListsStateOnServer && tasksOrder.length === 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n            }\r\n\r\n            const currentOrder = requiredOrder.map(item => {\r\n                const itemWithUpdatedState = currentListsStateOnServer ? currentListsStateOnServer\r\n                    .find(list => list.todoListId === item.todoListId) : undefined;\r\n                const curItem = todoListsWithNewId.find(list => list.id === item.todoListId)!;\r\n                if (itemWithUpdatedState) return itemWithUpdatedState;\r\n                return {todoListId: curItem.id, tasks: curItem.tasks.map(task => task.id)}\r\n            });\r\n\r\n            const swapOrder: Array<{ todoListId: string, swappedId: string, beforeSwappedId: string | null }> = [];\r\n            requiredOrder.forEach(newOrder => {\r\n                let currOrder = currentOrder.find(item => item.todoListId === newOrder.todoListId)!.tasks;\r\n                newOrder.tasks.forEach((newTaskPosId, index) => {\r\n                    if (newTaskPosId !== currOrder[index]) {\r\n                        if (index === 0) swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId, beforeSwappedId: null\r\n                        });\r\n                        else swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId,\r\n                            beforeSwappedId: currOrder[index - 1]\r\n                        });\r\n                        const oldIndex = currOrder.findIndex(taskId => taskId === newTaskPosId)\r\n                        currOrder = movePos(currOrder, oldIndex, index)\r\n                    }\r\n                })\r\n            });\r\n            const groupedSwapOrder: Array<{todoListId: string, swapOrder: Array<{swappedId: string, beforeSwappedId: string | null}>}> = [];\r\n            swapOrder.forEach(task => {\r\n                const currentList = groupedSwapOrder.find(item => item.todoListId === task.todoListId);\r\n                if (currentList) groupedSwapOrder.map(item => item.todoListId === currentList.todoListId ?\r\n                    item.swapOrder.push({swappedId: task.swappedId, beforeSwappedId: task.todoListId}) : item\r\n                );\r\n                groupedSwapOrder.push({\r\n                    todoListId: task.todoListId,\r\n                    swapOrder: [{swappedId: task.swappedId, beforeSwappedId: task.beforeSwappedId}]\r\n                })\r\n            });\r\n            const swapOrderPending = groupedSwapOrder.map(async (item) => {\r\n                const consistentSwapOrder = item.swapOrder\r\n                for (let order of consistentSwapOrder) {\r\n                    await api.swapTasks(item.todoListId, order.swappedId, order.beforeSwappedId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                }\r\n            });\r\n            await Promise.all(swapOrderPending)\r\n        }\r\n        dispatch(actions.setSwapState(false));\r\n\r\n\r\n        if (addedLists.length !== 0 || addedTasks.length !== 0) {\r\n            dispatch(getStateFromServer(false))\r\n        }\r\n    };\r\n\r\nexport default functionalReducer","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const TaskButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    width: 0rem;\r\n    height: 0rem;\r\n    transform: translateX(-70%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid #ca6a9a;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: rgba(202, 106, 154, 0.8);\r\n        color: white;\r\n    }\r\n    &:first-child:nth-last-child(2),\r\n        &:first-child:nth-last-child(2) ~ * { \r\n            &:nth-child(1) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                bottom: 0;\r\n            }\r\n        }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    deleteTask: () => void;\r\n    editTask: () => void\r\n}\r\n\r\nconst TaskButtons: React.FC<PropsType> = ({deleteTask, editTask}) => {\r\n\r\n    return (\r\n        <TaskButtonWrapper>\r\n            <Button onClick={editTask}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n            <Button onClick={deleteTask}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n        </TaskButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskButtons);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {animated, useSpring, useSprings} from \"react-spring\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\n\r\nconst CheckboxWrapper = styled(animated.div)`\r\n    width: 31px;\r\n    height:31px;\r\n    position: relative;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    --background: #fff;\r\n    --border: #D1D6EE;\r\n    --border-hover: #BBC1E1;\r\n    --border-active: #1E2235;\r\n    --tick: #fff;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    z-index: 9;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    outline: none;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: box-shadow .3s;\r\n    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));\r\n    &:hover {\r\n        --s: 2px;\r\n        --b: var(--border-hover);\r\n    }\r\n    &:checked {\r\n        --b: var(--border-active);\r\n        --s: 2px;\r\n        transition-delay: .4s;\r\n        & + svg {\r\n            --a: 16.1 86.12;\r\n            --o: 102.22;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    z-index: 10;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    pointer-events: none;\r\n    fill: none;\r\n    stroke-width: 2px;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    stroke: var(--stroke, var(--border-active));\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    transform: scale(var(--scale, 1)) translateZ(0);\r\n    stroke-dasharray: var(--a, 86.12);\r\n    stroke-dashoffset: var(--o, 86.12);\r\n    transition: stroke-dasharray .6s, stroke-dashoffset .6s;\r\n`;\r\n\r\ntype PropsType = {\r\n    task: TaskType;\r\n    changeDoneStatus: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editable: boolean,\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskCheckbox: React.FC<PropsType> = ({task, changeDoneStatus, editable, palette}) => {\r\n\r\n    const animation = useSpring({\r\n        left: editable ? -32 : 0,\r\n    });\r\n\r\n    return (\r\n        <CheckboxWrapper style={animation}>\r\n            <Checkbox type=\"checkbox\" checked={task.status === 2} disabled={editable}\r\n                      onChange={(e) => changeDoneStatus(e)}/>\r\n            <Svg>\r\n                <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"/>\r\n            </Svg>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskCheckbox);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport TaskButtons, {TaskButtonWrapper} from \"./TaskButtons\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nconst TaskWrapper = styled(animated.div)<{ $editable: boolean}>`\r\n    position: relative;\r\n    padding: 10px 0;\r\n    text-align: left;\r\n    ${props => props.$editable &&\r\n    `&:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n           width: 4rem;\r\n           height: 4rem;\r\n     }`\r\n}\r\n`;\r\n\r\nconst TaskBackground = styled(animated.div)<{$palette: NeumorphColorsType, $editable: boolean}>`\r\n    padding: 15px 0;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    display: flex;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    cursor: ${props => props.$editable ? \"grab\" : \"inherit\"};\r\n    z-index: 2;\r\n    &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: -1;\r\n      box-shadow: ${props => props.$palette.littleShadows};\r\n      border: 3px solid transparent;\r\n      transition: border .3s linear;\r\n    };\r\n    ${props => props.$editable &&\r\n    `&:hover:before {\r\n         border: 3px solid ${props.$palette.background}\r\n    }`\r\n    }\r\n`;\r\n\r\nconst TaskText = styled.div`\r\n    padding: 10px;\r\n    outline: none;\r\n    display: inline-block;\r\n    min-width: 100px;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-break: after-white-space;\r\n    width: 100%;\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    task: TaskType,\r\n    todoListId: string,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTask: React.FC<PropsType> = React.memo(({task, todoListId, palette}) => {\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus, shallowEqual);\r\n\r\n    const [isTaskEditable, setEditableState] = useState<boolean>(false);\r\n    const editTask = () => {\r\n        setEditableState(true);\r\n        dispatch(actions.setFocusedStatus(true))\r\n    };\r\n    const textRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (task.editStatus || isTaskEditable) textRef.current!.focus()\r\n    }, [task, isTaskEditable])\r\n\r\n    const deleteTask = () => {\r\n        dispatch(actions.deleteTask(todoListId, task.id))\r\n    };\r\n\r\n    const [title, setTitle] = useState<string>('');\r\n    useLayoutEffect(() => {\r\n        textRef.current!.textContent = task.title;\r\n        setTitle(task.title)\r\n    }, [task.title]);\r\n\r\n    const changeDoneStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newTask = {...task, status: e.currentTarget.checked ? 2 : 0};\r\n        dispatch(actions.changeTask(newTask))\r\n    };\r\n\r\n    const onChangeHandler = (e: React.FormEvent<HTMLDivElement>) => {\r\n        let title = e.currentTarget.textContent || '';\r\n        setTitle(title)\r\n    };\r\n\r\n    const setNewTask = () => {\r\n        setEditableState(false);\r\n        dispatch(actions.setFocusedStatus(false));\r\n        const isValid = validate(title);\r\n        if (isValid) {\r\n            let newTask = {...task, title, editStatus: false};\r\n            dispatch(actions.changeTask(newTask));\r\n        } else deleteTask()\r\n    };\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key ===  \"Enter\") {\r\n            e.preventDefault();\r\n            textRef.current!.blur()\r\n        }\r\n    };\r\n    //animation\r\n    const editModeAnimation = useSpring({\r\n        scale: isTaskEditable || task.editStatus ? 1.3 : 1.0,\r\n    });\r\n\r\n    const priority = task.priority === 0 ? 'Low' : 1 ? 'Middle' : 2 ?\r\n        'High' : 3 ? 'Urgently' : 'Later';\r\n\r\n    return (\r\n        <TaskWrapper $editable={editable && !focusedStatus}>\r\n            <TaskButtons editTask={editTask} deleteTask={deleteTask}/>\r\n            <TaskBackground style={editModeAnimation} $editable={editable}\r\n                            $palette={palette}>\r\n                <TaskCheckbox task={task} changeDoneStatus={changeDoneStatus} editable={editable} palette={palette}/>\r\n                <TaskText contentEditable={isTaskEditable || task.editStatus}\r\n                          onKeyPress={e => onKeyPressHandler(e)}\r\n                          ref={textRef}\r\n                          onBlur={setNewTask} onInput={e => onChangeHandler(e)}/>\r\n            </TaskBackground>\r\n        </TaskWrapper>\r\n\r\n    );\r\n})\r\n\r\nexport default TodoListTask;\r\n\r\n","\r\n\r\nexport const validate = (value: string): boolean => {\r\n    return value !== '' || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n};","import React, {RefObject, useEffect, useLayoutEffect, useMemo, useRef, useState} from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {animated, useSprings, useSpring} from \"react-spring\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {movePos} from \"../../hooks/movePos\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {clamp} from \"lodash-es\";\r\n\r\nconst TasksWrapper = styled.div<{ $height: number }>`\r\n  user-select: none;\r\n  position: relative;\r\n  height: ${props => props.$height}px;\r\n  transition: height 0.3s cubic-bezier(0.25, 0, 0, 1) 0.2s;\r\n`;\r\n\r\nconst TaskWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  overflow: visible;\r\n  pointer-events: auto;\r\n  text-align: center;\r\n  font-size: 14.5px;\r\n`;\r\n\r\ntype PropsType = {\r\n    todoListId: string;\r\n    tasks: TaskType[],\r\n    setHeight: (height: number) => void,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTasks: React.FC<PropsType> = ({tasks, todoListId, setHeight, palette}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = (order: Array<number>, down?: boolean, originalIndex?: number, y?: number): any => (index: number) => {\r\n            if (down && index === originalIndex && y !== undefined) {\r\n                const calcY = y > bounds.current[1] ? bounds.current[1] + (y - bounds.current[1]) * 0.1 : y < bounds.current[0] ?\r\n                    bounds.current[0] + (y - bounds.current[0]) * 0.1 : y;\r\n                return {\r\n                    scale: 1.2,\r\n                    zIndex: 2,\r\n                    y: initialYofDragged.current! + calcY,\r\n                    opacity: 1,\r\n                    immediate: (prop: string): boolean => prop === 'zIndex' || prop === 'y',\r\n                }\r\n            } else return {\r\n                scale: 1,\r\n                y: initialY.current[order.indexOf(tasks.length-index-1)] || 0,\r\n                zIndex: 1,\r\n                opacity: 1,\r\n                immediate: false,\r\n            }\r\n        }\r\n    ;\r\n\r\n    const order = useRef<Array<number>>([]);\r\n    const initialYofDragged = useRef<number | null>(0);\r\n    const memoizedOrder = useRef<Array<number>>([]);\r\n    const memoizedTasksId = useRef<Array<string>>([]);\r\n    const initialY = useRef<Array<number>>([]);\r\n    const heights = useRef<Array<number>>([]);\r\n    const bounds = useRef<Array<number>>([]);\r\n    const elementsBorder = useRef<Array<{topBorder: number, center: number, bottomBorder: number}>>([]);\r\n    const elementsRef = useRef<Array<RefObject<HTMLDivElement>>>([]);\r\n    const [height, setCurrentHeight] = useState<number>(0)\r\n\r\n    const [springs, setSprings] = useSprings(tasks.length, settings(order.current), [tasks]);\r\n\r\n    const [forceRerender, rerender] = useState<number>(0);\r\n    useEffect(() => {\r\n        elementsRef.current = tasks.map(() => React.createRef());\r\n        rerender(forceRerender + 1);\r\n    }, [tasks]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (!editable && tasks.length !== 0) {\r\n            order.current = tasks.map((_, i) => i);\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n            calcPositions(heights.current);\r\n            setSprings(settings(order.current));\r\n        }\r\n        if (editable && tasks.length > memoizedTasksId.current.length) {\r\n            order.current = [0, ...order.current.map(item => item + 1)];\r\n            heights.current = [elementsRef.current[0].current!.offsetHeight, ...heights.current];\r\n            calcPositions(heights.current);\r\n            setSprings(settings(order.current));\r\n        }\r\n        if (editable && tasks.length < memoizedTasksId.current.length) {\r\n            const deletedTaskIndex = memoizedTasksId.current.findIndex(taskId => tasks.findIndex(item => item.id === taskId) === -1);\r\n            const deletedOrder = order.current.indexOf(deletedTaskIndex);\r\n            order.current = order.current.filter(index => index !== deletedTaskIndex)\r\n                .map(item => item > deletedTaskIndex ? item - 1 : item);\r\n            heights.current = heights.current.filter((_, index) => index !== deletedOrder);\r\n            calcPositions(heights.current);\r\n            setSprings(settings(order.current));\r\n        }\r\n        const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n        setCurrentHeight(heightsSum);\r\n        setHeight(heightsSum);\r\n        memoizedTasksId.current = tasks.map(item => item.id);\r\n    }, [forceRerender]);\r\n\r\n    const calcPositions = (heightsArray: Array<number>) => {\r\n        initialY.current = heightsArray.map((height, index) => {\r\n            return heightsArray.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += heightsArray[i - 1]\r\n                }\r\n                return total\r\n            }, 0)\r\n        });\r\n        elementsBorder.current = initialY.current.map((item, i) => ({\r\n            topBorder: item,\r\n            center: item + heightsArray[i]/2,\r\n            bottomBorder: item + heightsArray[i]\r\n        }));\r\n    }\r\n\r\n    const getNewIndex = (index: number, y: number) => {\r\n        if (y > 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (y > height + heights.current[index + 1] / 2) {\r\n                newIndex += 1;\r\n                height += heights.current[index + 1];\r\n            }\r\n            return newIndex > heights.current.length - 1 ? heights.current.length - 1 : newIndex;\r\n        }\r\n        if (y < 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (Math.abs(y) > height + heights.current[index - 1] / 2) {\r\n                newIndex -= 1;\r\n                height += heights.current[index - 1];\r\n            }\r\n            return newIndex < 0 ? 0 : newIndex;\r\n        }\r\n        return index\r\n    }\r\n\r\n    const gesture = useDrag(({args: [originalIndex, trueIndex], down, movement: [, y], event, first}) => {\r\n        event!.stopPropagation();\r\n        const curIndex = order.current.indexOf(trueIndex);\r\n        if (first) {\r\n            initialYofDragged.current = initialY.current[curIndex];\r\n            bounds.current = [-initialYofDragged.current, initialY.current[tasks.length-1] - initialYofDragged.current];\r\n        }\r\n        if (!initialYofDragged.current) initialYofDragged.current = initialY.current[curIndex];\r\n        const curRow = getNewIndex(curIndex, y);//текущий новый индекс\r\n        const newOrder = movePos(order.current, curIndex, curRow);// новый порядок\r\n        const newHeights = movePos(heights.current, curIndex, curRow);//новый массив высот\r\n        calcPositions(newHeights);\r\n        setSprings(settings(newOrder, down, originalIndex, y));\r\n        if (!down) {\r\n            order.current = newOrder;\r\n            heights.current = newHeights;\r\n            initialYofDragged.current = null;\r\n            if (!isEqual(order.current, memoizedOrder.current)) {\r\n                const newOrder = order.current.map(item => tasks[item].id)\r\n                dispatch(actions.swapTasks(todoListId, newOrder))\r\n            }\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    return (\r\n        <TasksWrapper $height={height}>\r\n            {tasks.map((task, i) =>\r\n                <TaskWrapper {...editable && {...gesture(tasks.length-i-1, i)}} key={task.id} style={springs[tasks.length-i-1]}\r\n                             ref={elementsRef.current[i]}>\r\n                    <TodoListTask task={task} todoListId={todoListId} palette={palette}/>\r\n                </TaskWrapper>)}\r\n        </TasksWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTasks, isEqual);\r\n\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nconst ListTitle = styled(animated.div)<{$palette: NeumorphColorsType}>`\r\n  background-image: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  position: relative;\r\n  font-size: 25px;\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  margin: 0 auto 10px auto;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  display: inline-block;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-break: after-white-space;\r\n  &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: ${props => props.$palette.innerShadows};\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    listTitle: string,\r\n    id: string,\r\n    switchTitleMode: () => void,\r\n    isTitleEditable: boolean,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTitle: React.FC<PropsType> = ({listTitle, id, isTitleEditable, switchTitleMode, palette}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && isTitleEditable) {\r\n            ref.current.focus();\r\n            dispatch(actions.setFocusedStatus(true))\r\n        }\r\n    }, [isTitleEditable]);\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.textContent = listTitle\r\n        }\r\n    }, [listTitle]);\r\n\r\n    const [title, setTitle] = useState<string>(listTitle);\r\n    const onChangeHandler = (e: React.FormEvent<HTMLDivElement>) => {\r\n        setTitle(e.currentTarget.textContent || '')\r\n    };\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\" ) {\r\n            e.preventDefault();\r\n            ref.current!.blur()\r\n        }\r\n    };\r\n    const onBlurHandler = () => {\r\n        dispatch(actions.changeTodoListTitle(id, title));\r\n        switchTitleMode();\r\n        dispatch(actions.setFocusedStatus(false))\r\n    };\r\n\r\n    const editModeAnimation = useSpring({\r\n        scale: isTitleEditable ? 1.3 : 1.0,\r\n        /*backgroundColor: isTitleEditable ? 'rgba(202, 106, 154, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n        color : isTitleEditable ? '#ffffff' : '#ca6a9a'*/\r\n    });\r\n\r\n    return (\r\n        <ListTitle contentEditable={isTitleEditable} ref={ref} style={editModeAnimation}\r\n                   onInput={e => onChangeHandler(e)} onKeyPress={e => onKeyPressHandler(e)}\r\n                   onBlur={onBlurHandler}\r\n                   $palette={palette}/>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTitle);\r\n\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 15px;\r\n    border-radius: 100%;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity .6s cubic-bezier(0.25, 0, 0, 1), width 0s linear .6s, height 0s linear .6s;\r\n`;\r\n\r\nexport const Button = styled.div<{ styles: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.styles.background};\r\n    color: ${props => props.styles.color};\r\n    box-shadow: ${props => props.styles.littleShadows};;\r\n    transform: translate(-50%, -50%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.styles.background};\r\n        color: ${props => props.styles.color};\r\n    }\r\n    &:first-child:nth-last-child(3),\r\n        &:first-child:nth-last-child(3) ~ * {\r\n            &:nth-child(1) {\r\n                left: 50px;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(3) {\r\n                left: 0;\r\n                top: 50px;\r\n            }\r\n        }\r\n`;\r\n\r\ntype PropsType = {\r\n    colors: NeumorphColorsType,\r\n    deleteTodoList: () => void,\r\n    addTask: () => void,\r\n    editList: () => void\r\n};\r\n\r\nconst ContextButtons: React.FC<PropsType> = ({colors, deleteTodoList, addTask, editList}) => {\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Button styles={colors}\r\n                    onClick={addTask}>\r\n                <FontAwesomeIcon icon=\"plus\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={deleteTodoList}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={editList}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(ContextButtons);\r\n\r\n","import React, {useCallback, useRef, useState} from \"react\";\r\nimport TodoListTasks from '../tasks/TodoListTasks';\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useHover} from \"react-use-gesture\";\r\nimport ContextButtons, {ButtonWrapper} from \"./ContextButtons\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\n\r\nconst SingleListWrapper = styled.div`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 50%;\r\n  backface-visibility: hidden;\r\n  overflow: visible;\r\n  padding: 25px;\r\n  font-family: NunitoSans-Light;\r\n  &:hover {\r\n      z-index: 5;\r\n  }\r\n`;\r\n\r\nconst DetailsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 100%;\r\n  transform-origin: 50% 50%;\r\n  transform: rotateZ(-90deg) translateY(-50%);\r\n  transform-style: preserve-3d;\r\n  font-size: 25px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst SingleListBottomLayer = styled.div<{\r\n    $palette: number, $editable: boolean, $closeLookState: boolean, $hovered: boolean\r\n}>`\r\n  border-radius: 30px;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 100%;\r\n  padding: 25px;\r\n  background: ${props => neumorphColors[props.$palette].concaveBackground};\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  transition: transform .6s cubic-bezier(0.25, 0, 0, 1);\r\n  ${props => !props.$editable && \r\n    `&:hover {\r\n        transform: translateZ(100px)\r\n  }`}\r\n  ${props => (props.$closeLookState || props.$hovered && props.$editable) &&\r\n    `&:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      box-shadow: ${neumorphColors[props.$palette].shadows};\r\n  }`};\r\n  ${props => (props.$hovered && !props.$editable && !props.$closeLookState) &&\r\n    `&:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      box-shadow: ${neumorphColors[props.$palette].shadows};\r\n  }`};\r\n  ${props => props.$closeLookState === false && props.$hovered === false &&\r\n    `&:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      box-shadow: 22px 22px 49px rgba(0, 0, 0, .4);\r\n  }`};\r\n  ${props => props.$editable &&\r\n    `&:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: 22px 22px 49px rgba(0, 0, 0, .4);\r\n      border: 5px solid transparent;\r\n      transition: border .3s linear;\r\n    }\r\n    &:hover:after {\r\n          border: 5px solid ${neumorphColors[props.$palette].background}\r\n    }`\r\n  };\r\n  ${props => props.$editable &&\r\n    `&:hover ${ButtonWrapper},  ${ButtonWrapper}:focus-within {\r\n       width: 90px;\r\n       height: 90px;\r\n       opacity: 1;\r\n       transition: opacity .6s cubic-bezier(0.25, 0, 0, 1);\r\n    };`\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    listTitle: string,\r\n    listTasks?: TaskType[],\r\n    paletteIndex: number,\r\n    setNewHeights: (height: number, id: string) => void,\r\n    deleteList: (id: string) => void,\r\n    closeLook: boolean\r\n};\r\n\r\nconst TodoList: React.FC<PropsType> = ({\r\n                                           id, listTitle, listTasks, paletteIndex,\r\n                                           setNewHeights, deleteList, closeLook\r\n                                       }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus);\r\n\r\n    const currHeight = useRef<number>(0);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const setHeight = useCallback((height: number) => {\r\n        if (currHeight.current === 0 && ref.current) {\r\n            currHeight.current = ref.current.offsetHeight\r\n        }\r\n        if (currHeight.current !== height) {\r\n            setNewHeights(height+currHeight.current, id);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const [filterValue, setFilterValue] = useState<string>('All');\r\n\r\n    const changeFilter = (newFilterValue: string) => {\r\n        setFilterValue(newFilterValue)\r\n    };\r\n\r\n\r\n    const addTask = () => {\r\n        const taskId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newTask = {\r\n            title: '',\r\n            id: taskId,\r\n            todoListId: id,\r\n            editStatus: true\r\n        }\r\n        dispatch(actions.addTask(newTask, id));\r\n        dispatch(actions.setFocusedStatus(true))\r\n    };\r\n\r\n    const deleteTodoList = useCallback(() => {\r\n        deleteList(id)\r\n        dispatch(actions.deleteTodoList(id))\r\n    }, []);\r\n\r\n    const tasks = listTasks ? listTasks.filter(t => {\r\n        if (filterValue === \"All\") {\r\n            return true;\r\n        }\r\n        if (filterValue === \"Active\") {\r\n            return t.status === 0;\r\n        }\r\n        if (filterValue === \"Completed\") {\r\n            return t.status === 2;\r\n        }\r\n    }) : [];\r\n\r\n    //hover Effect\r\n\r\n    const bind = useHover(({hovering}) => {\r\n        if (hovering) {\r\n            dispatch(actions.setPalette(neumorphColors[paletteIndex]));\r\n        }\r\n        if (!hovering) {\r\n            dispatch(actions.setPalette(defaultPalette));\r\n        }\r\n    });\r\n\r\n    //close look animations\r\n    const [hoveredState, setHoveredState] = useState<boolean>(false);\r\n\r\n    const [isTitleEditable, setTitleEditMode] = useState<boolean>(false);\r\n    const switchTitleMode = () => {\r\n        setTitleEditMode(!isTitleEditable)\r\n    };\r\n\r\n    /*console.log(`${listTitle} render`)*/\r\n    return (\r\n        <SingleListWrapper {...!closeLook && {...bind()}} ref={ref}>\r\n            <SingleListBottomLayer $palette={paletteIndex}\r\n                                   $editable={editable && !focusedStatus}\r\n                                   $closeLookState={closeLook}\r\n                                   $hovered={hoveredState}>\r\n                <ContextButtons colors={neumorphColors[paletteIndex]} deleteTodoList={deleteTodoList}\r\n                                addTask={addTask} editList={switchTitleMode}/>\r\n                <TodoListTitle listTitle={listTitle} id={id} isTitleEditable={isTitleEditable}\r\n                               switchTitleMode={switchTitleMode} palette={neumorphColors[paletteIndex]}/>\r\n                <TodoListTasks todoListId={id} tasks={tasks} setHeight={setHeight} palette={neumorphColors[paletteIndex]}/>\r\n                {/* <TodoListFooter filterValue={filterValue} changeFilter={changeFilter}/>*/}\r\n                {/*<DetailsWrapper>\r\n                    more details...\r\n                </DetailsWrapper>*/}\r\n            </SingleListBottomLayer>\r\n        </SingleListWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoList, isEqual);\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated} from \"react-spring\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CloseButton = styled(animated.div)<{ $palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.background};\r\n    box-shadow: ${props => props.$palette.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background: ${props => props.$palette.background};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n`;\r\n\r\nconst ClosingButton: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    return(\r\n        <CloseButton $palette={currentPalette}>\r\n            <FontAwesomeIcon icon=\"times\"/>\r\n        </CloseButton>\r\n    )\r\n};\r\n\r\nexport default ClosingButton","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {animated, useSprings, SpringStartFn, useSpring} from \"react-spring\";\r\nimport {swap} from \"../../hooks/swap\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport styled from \"styled-components/macro\";\r\nimport TodoList from \"./TodoList\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport ClosingButton from \"./CloseButton\";\r\n\r\n\r\nconst TodoListContainer = styled(animated.div)<{ $width: number }>` \r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  width: ${props => props.$width}px;\r\n`;\r\n\r\nconst CloseButtonAnimatedWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  border-radius: 100%;\r\n`;\r\n\r\ntype PropsType = {\r\n    setWrapperAnimation: SpringStartFn<{ x: string, rotateX: number, rotateZ: number, y: number, height: number }>,\r\n    width: number,\r\n    scrollByListDrugging: (direction: string) => void,\r\n    setCloseLookState: (height: number) => void,\r\n    returnFromCloseLookState: () => void,\r\n    switchScrollBar: () => void\r\n}\r\n\r\ntype GridItemsType = {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    id: string,\r\n    rightX: number,\r\n    botY: number,\r\n    horizontalCenter: number,\r\n    verticalCenter: number,\r\n    index: number,\r\n}\r\n\r\nconst MappedLists: React.FC<PropsType> = ({setWrapperAnimation, width, scrollByListDrugging,\r\n                                              setCloseLookState, returnFromCloseLookState, switchScrollBar}) => {\r\n//resize logic\r\n\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const todoLists = useSelector((store: AppStateType) => store.todoList.todoLists, isEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const columns = useMemo(() => {\r\n        return width >= 1700 ? 4 : width >= 1100 ? 3 : width >= 700 ? 2 : 1\r\n    }, [width]);\r\n    const currWidth = useMemo(() => width / columns, [width]);\r\n    useEffect(() => {\r\n        recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        });\r\n    }, [width, columns, currWidth]);\r\n\r\n\r\n// child height calculation logic\r\n    const temporaryValue = useRef<Array<{ height: number, id: string }>>([]);\r\n    const setNewHeights = useCallback((height: number, id: string) => {\r\n        const findHeight = temporaryValue.current.findIndex(item => item.id === id);\r\n        const newHeightsArray = findHeight === -1 ? [...temporaryValue.current, {height, id}]\r\n            : temporaryValue.current.map((item, i) => {\r\n                if (i === findHeight) return {height, id};\r\n                return item\r\n            });\r\n        temporaryValue.current = newHeightsArray\r\n        /*console.log(gridItems.current)*/\r\n        if (newHeightsArray.length === todoLists.length) {\r\n            /*console.log(gridItems.current, width, columns)*/\r\n            recalculateMeasures();\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y}\r\n            })\r\n        }\r\n    }, [todoLists, width, columns, currWidth,/*, newListsId*/])\r\n\r\n    const deleteList = useCallback((id: string) => {\r\n        temporaryValue.current = temporaryValue.current.filter(item => item.id !== id)\r\n    }, []);\r\n\r\n    const height = useRef<number>(0);\r\n    const gridItems = useRef<Array<GridItemsType>>([]);\r\n\r\n    const [springs, setSprings] = useSprings(todoLists.length, i => {\r\n        if (gridItems.current.length === 0) return {x: 0, y: 0, zIndex: 3, opacity: 1, display: 'block'};\r\n        const currentSettings = gridItems.current.find((list) => list.index === i);\r\n        return {\r\n            x: currentSettings ? currentSettings.x : 0,\r\n            y: currentSettings ? currentSettings.y : 0,\r\n            opacity: 1,\r\n            zIndex: 3,\r\n            display: 'block'\r\n        }\r\n    }, [todoLists])\r\n\r\n\r\n//swap animation logic\r\n    useEffect(() => {\r\n        if (!editable && gridItems.current.length === 0) {\r\n            const newHeights = new Array(columns).fill(0);\r\n            gridItems.current = todoLists.map(\r\n                (item, i) => {\r\n                    const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n                    const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n                    const column = i % columns;\r\n                    const x = currWidth * column;\r\n                    const y = (newHeights[column] += height) - height\r\n                    const rightX = x + currWidth;\r\n                    const botY = y + height;\r\n                    const horizontalCenter = x + currWidth / 2;\r\n                    const verticalCenter = y + height / 2;\r\n                    const index = i;\r\n                    return {x, y, height, id: item.id, botY, rightX, horizontalCenter, verticalCenter, index}\r\n                });\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(actions.setHeight(height.current));\r\n            setWrapperAnimation({height: height.current})\r\n        }\r\n        if (editable && gridItems.current.length < todoLists.length) {\r\n            gridItems.current = [{\r\n                x: 0, y: 0, height: 0, id: todoLists[0].id, botY: 0,\r\n                rightX: 0, horizontalCenter: 0, verticalCenter: 0, index: 0\r\n            }, ...gridItems.current].map((item, i) => {\r\n                if (i === 0) return item;\r\n                return {...item, index: item.index + 1}\r\n            })\r\n            recalculateMeasures()\r\n        }\r\n        if (editable && gridItems.current.length > todoLists.length) {\r\n            const deletedListIndex = gridItems.current.findIndex(item =>\r\n                todoLists.findIndex(list => list.id === item.id) === -1);\r\n            const deletedList = gridItems.current[deletedListIndex];\r\n            gridItems.current = gridItems.current.map((item) => {\r\n                const index = item.index > deletedList.index ? item.index - 1 : item.index;\r\n                return {...item, index}\r\n            }).filter((item, i) => i !== deletedListIndex);\r\n            recalculateMeasures()\r\n        }\r\n        if (gridItems.current.length === todoLists.length) recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n        console.log(gridItems.current);\r\n\r\n    }, [todoLists]);\r\n\r\n    const recalculateMeasures = () => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = gridItems.current.map((item, i) => {\r\n            const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n            const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += height) - height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter, height}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            setWrapperAnimation({height: height.current});\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }\r\n\r\n    const reorder = (oldIndex: number, newIndex: number) => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = swap(gridItems.current, oldIndex, newIndex).map((item, i) => {\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += item.height) - item.height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + item.height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + item.height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            setWrapperAnimation({height: height.current});\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }\r\n\r\n    const calculatePositions = (x: number, y: number) => {\r\n        const xPos = currItem.current.horizontalCenter + x;\r\n        const yPos = currItem.current.verticalCenter + y;\r\n        let i = gridItems.current.findIndex(item => {\r\n            if (item.x < xPos && item.rightX > xPos && item.y < yPos && item.botY > yPos) return true\r\n        });\r\n        return i < todoLists.length && i >= 0 ? i : null;\r\n    };\r\n\r\n    const setActualSprings = (x: number, y: number, springsIndex: number) => {\r\n        setSprings(i => {\r\n            if (i === springsIndex) {\r\n                return {\r\n                    x: currItem.current.x + x,\r\n                    y: currItem.current.y + y,\r\n                    zIndex: 4,\r\n                    immediate: (n: string): boolean => n === 'zIndex'\r\n                }\r\n            }\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    };\r\n\r\n    const currItem = useRef<GridItemsType>({\r\n        botY: 0,\r\n        height: 0,\r\n        horizontalCenter: 0,\r\n        id: \"\",\r\n        index: 0,\r\n        rightX: 0,\r\n        verticalCenter: 0,\r\n        x: 0,\r\n        y: 0\r\n    });\r\n    const bounds = useRef<{ left: number, right: number, top: number, bottom: number, pageTop: number, pageBottom: number }>({\r\n        left: 0, right: 0, top: 0, bottom: 0, pageTop: 0, pageBottom: 0\r\n    });\r\n    const eventCoords = useRef<{ offsetX: number, offsetY: number, clientX: number, clientY: number } | null>(null);\r\n    const virtualY = useRef<number>(0)\r\n\r\n    const getBounds = () => {\r\n        const left = -currItem.current.x - 25 + eventCoords.current!.offsetX;\r\n        const right = width - currItem.current.rightX + 25 + (width / columns - eventCoords.current!.offsetX);\r\n        const top = -currItem.current.y - 25 - eventCoords.current!.offsetY - 25;\r\n        const bottom = height.current - currItem.current.y - 25 - (currItem.current.height - (eventCoords.current!.offsetY + 25));\r\n        const pageTop = -eventCoords.current!.clientY - 25;\r\n        const pageBottom = window.innerHeight - eventCoords.current!.clientY - (currItem.current.height - 75 - eventCoords.current!.offsetY);\r\n        bounds.current = {left, right, top, bottom, pageTop, pageBottom}\r\n    }\r\n\r\n    const gesture = useDrag(({\r\n                                 args: [index, springsIndex], down, movement: [x, y],\r\n                                 active, first, event\r\n                             }) => {\r\n        event?.stopPropagation();\r\n        const draggedList = gridItems.current.findIndex(item => item.index === index);\r\n        if (first) {\r\n            currItem.current = gridItems.current[draggedList];\r\n            //@ts-ignore\r\n            eventCoords.current = {offsetX: event.offsetX, offsetY: event.offsetY, clientX: event.clientX, clientY: event.clientY};\r\n            getBounds();\r\n            virtualY.current = y;\r\n            console.log(bounds.current)\r\n        }\r\n        if (active) {\r\n            if (y > bounds.current.pageBottom) {\r\n                (async () => {\r\n                    while (virtualY.current < bounds.current.bottom) {\r\n                        const promise = new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                    scrollByListDrugging('bottom');\r\n                                    virtualY.current = virtualY.current + 5;\r\n                                    const newIndex = calculatePositions(x, virtualY.current);\r\n                                    if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                    setActualSprings(x, virtualY.current, springsIndex)\r\n                                    resolve()\r\n                                }\r\n                                , 5)\r\n                        });\r\n                        await promise\r\n                    }\r\n                })();\r\n            } else if (y < bounds.current.pageTop) {\r\n                (async () => {\r\n                    while (virtualY.current > bounds.current.top) {\r\n                        const promise = new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                    scrollByListDrugging('top');\r\n                                    virtualY.current = virtualY.current - 5;\r\n                                    const newIndex = calculatePositions(x, virtualY.current);\r\n                                    if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                    setActualSprings(x, virtualY.current, springsIndex);\r\n                                    resolve()\r\n                                }\r\n                                , 5)\r\n                        });\r\n                        await promise\r\n                    }\r\n                })()\r\n            } else {\r\n                virtualY.current = y;\r\n                const newIndex = calculatePositions(x, virtualY.current);\r\n                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                setActualSprings(x, virtualY.current, springsIndex)\r\n            }\r\n        }\r\n        if (!down) {\r\n            eventCoords.current = null;\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y, zIndex: 3}\r\n            });\r\n            const newOrder = gridItems.current.map(item => item.id)\r\n            dispatch(actions.swapTodoLists(newOrder))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const [indexOfLookedList, setIndexOfLookedList] = useState<number | null>(null);\r\n    const closeLook = async (index: number) => {\r\n        if (editable) return;\r\n        const currItem = gridItems.current.find(item => item.index === index)!;\r\n        switchScrollBar();\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-index) return {\r\n                to: async animate => {\r\n                    await animate({opacity: 0});\r\n                    await animate({display: 'none'})\r\n                }\r\n            };\r\n            return {to: false}\r\n        });\r\n        setWrapperAnimation({\r\n            height: window.innerHeight,\r\n            x: '15vw',\r\n            rotateX: 0,\r\n            rotateZ: 0,\r\n            y: 0,\r\n        });\r\n        setCloseLookState(currItem.height);\r\n        dispatch(actions.setPalette(neumorphColors[(todoLists.length-1-index) % neumorphColors.length]));\r\n        setIndexOfLookedList(index);\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-index) return {to: false};\r\n            return {\r\n                y: window.innerHeight / 2 - currItem.height / 2,\r\n                x: width / 2 - (width / columns) / 2\r\n            }\r\n        });\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({\r\n                    y: window.innerHeight / 2 - currItem.height / 2 - 60,\r\n                    x: width / 2 + (width / columns) / 2 + 20,\r\n                    display: 'block',\r\n                    immediate: true\r\n                });\r\n                await animate({opacity: 1, immediate: false})\r\n            }\r\n        })\r\n    };\r\n\r\n    const returnFromCloseLook = async () => {\r\n        switchScrollBar()\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({opacity: 0});\r\n                await animate({display: 'none'})\r\n            }\r\n        });\r\n        setSprings(i => {\r\n            if (i !== todoLists.length-1-indexOfLookedList!) return {to: false};\r\n            const currItem = gridItems.current.find(item => item.index === indexOfLookedList)!\r\n            return {x: currItem.x, y: currItem.y}\r\n        });\r\n        returnFromCloseLookState();\r\n        await setWrapperAnimation({\r\n            x: '-15vw',\r\n            rotateX: 45,\r\n            rotateZ: 45,\r\n            y: 275,\r\n            height: height.current,\r\n            immediate: (prop) => prop === 'height'\r\n        });\r\n        dispatch(actions.setPalette(defaultPalette));\r\n        setIndexOfLookedList(null);\r\n        setSprings(i => {\r\n            if (i !== todoLists.length-1-indexOfLookedList!) return {opacity: 1, display: 'block'};\r\n            return {to: false}\r\n        });\r\n    };\r\n\r\n    const [closeButtonAnimation, setCloseButtonAnimation] = useSpring(() => ({\r\n        x: 0,\r\n        y: 0,\r\n        opacity: 0,\r\n        display: 'none'\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <CloseButtonAnimatedWrapper onClick={returnFromCloseLook} style={closeButtonAnimation}>\r\n                <ClosingButton/>\r\n            </CloseButtonAnimatedWrapper>\r\n            {todoLists.length !== 0 && todoLists.map((list, i) =>\r\n                <TodoListContainer\r\n                    style={springs[todoLists.length - i - 1]} {...editable && {...gesture(i, todoLists.length - i - 1)}}\r\n                    onClick={() => closeLook(i)}\r\n                    $width={currWidth} key={list.id}>\r\n                    <TodoList id={list.id} paletteIndex={(todoLists.length - 1 - i) % neumorphColors.length}\r\n                              deleteList={deleteList} setNewHeights={setNewHeights} closeLook={i === indexOfLookedList}\r\n                              listTitle={list.title} listTasks={list.tasks}/>\r\n                </TodoListContainer>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MappedLists, isEqual)","export const swap = (arr: Array<any>, index1: number, index2: number) => arr.map((val, idx) => {\r\n    if (idx === index1) return arr[index2];\r\n    if (idx === index2) return arr[index1];\r\n    return val;\r\n});\r\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {initialization} from \"../../redux/functionalReducer\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from \"react-use-gesture\";\r\nimport MappedLists from \"./MappedLists\";\r\nimport {NeumorphColorsType, interfacePalette} from \"../neumorphColors\";\r\nimport {isMobile} from 'react-device-detect'\r\n\r\n\r\nconst AllLists = styled(animated.div)`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  width: 70vw;\r\n  max-width: 2000px;\r\n  @media screen and (max-width: 800px) {\r\n    top: -50vh\r\n  }\r\n`;\r\n\r\nconst ScrollableWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst ScrollBarWrapper = styled(animated.div)<{ $palette: NeumorphColorsType, $visible: boolean }>`\r\n  position: absolute;\r\n  width: 30px;\r\n  height: 100vh;\r\n  top: 0;\r\n  right: 0;\r\n  overflow: hidden;\r\n  transition: background-color, opacity 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.progressBarColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ScrollBarThing = styled(animated.div)<{ $palette: NeumorphColorsType, $height: number }>`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: ${props => props.$height}%;\r\n  border-radius: 10px;\r\n  transition: background-image 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.background};\r\n  &:before {\r\n      transition: opacity 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      border-radius: 10px;\r\n      background-color: ${props => props.$palette.default ? interfacePalette.background : 'rgba(0, 0, 0, 0.3)'};\r\n      opacity: 0;\r\n  }\r\n  &:hover:before {\r\n      opacity: 1;\r\n   }\r\n`;\r\n\r\n\r\nconst ScrollWrapper: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const height = useSelector((store: AppStateType) => store.todoList.height, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization());\r\n    }, []);\r\n    useEffect(() => {\r\n        console.log('mounted');\r\n        return () => console.log('unmounting...');\r\n    }, []);\r\n\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        if (height < window.innerHeight) setVisible(false)\r\n        else setVisible(true)\r\n    }, [height]);\r\n\r\n    const measuredRef = useRef<HTMLDivElement>(null);\r\n    const [width, setWidth] = useState<number>(0);\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => setWidth(measuredRef.current!.offsetWidth), 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, []);\r\n    useLayoutEffect(() => {\r\n        setWidth(measuredRef.current!.offsetWidth)\r\n    }, []);\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        x: '-15vw',\r\n        rotateX: 45,\r\n        rotateZ: 45,\r\n        y: 275,\r\n        height: 0,\r\n        config: {tension: 100, friction: 60, clamp: true},\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setWrapperAnimation({\r\n            x: editable ? '15vw' : '-15vw',\r\n            rotateX: editable ? 0 : 45,\r\n            rotateZ: editable ? 0 : 45,\r\n            y: editable ? 0 : 275,\r\n        })\r\n    }, [editable]);\r\n\r\n    //scroll logic\r\n    const scrolledY = useRef<number>(0);\r\n    const scrolledPercent = useRef<number>(0);\r\n    const memoizedData = useRef<Array<number>>([]);\r\n    const [scrollingAnimation, setScroll] = useSpring(() => ({\r\n        y: 0,\r\n        top: `0%`,\r\n        immediate: false\r\n    }));\r\n\r\n    const visibilityOfScrollBar = useSpring({\r\n        from: {opacity: 0, right: -50, display: 'none'},\r\n        to: async animate => {\r\n            await animate(visible ? {display: 'block'} : {opacity: 0, right: -50});\r\n            await animate(visible ? {opacity: 1, right: 0} : {display: 'none'})\r\n        }\r\n    });\r\n\r\n    const border = height - window.innerHeight < 0 ? 0.5 * height : height - window.innerHeight / 2;\r\n    const scrollBarHeight = !height ? 0 : (window.innerHeight - 275) / height * 100;\r\n\r\n    useWheel(({delta: [, y]}) => {\r\n        scrolledY.current = scrolledY.current + y < border && scrolledY.current + y > 0 ? scrolledY.current + y\r\n            : scrolledY.current + y <= 0 ? 0 : border;\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window, eventOptions: {capture: true}});\r\n    useDrag(({offset: [, y], active}) => {\r\n        if (active) {\r\n            const posY = -y;\r\n            scrolledY.current = posY < border && posY > 0 ? posY : posY <= 0 ? 0 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, {domTarget: window, filterTaps: true});\r\n\r\n    //scroller\r\n    const bindDraggedScrollBar = useDrag(({delta: [, y], event}) => {\r\n        event?.stopPropagation();\r\n        const absY = y / window.innerHeight * 100;\r\n        scrolledPercent.current = scrolledPercent.current + absY > 0 && scrolledPercent.current + absY < 100 - scrollBarHeight ?\r\n            scrolledPercent.current + absY : scrolledPercent.current + absY <= 0 ? 0 : 100 - scrollBarHeight;\r\n        scrolledY.current = border * scrolledPercent.current / (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`,\r\n            immediate: (prop) => prop === 'top'\r\n        });\r\n    });\r\n\r\n    const scrollByListDrugging = useCallback((direction: string) => {\r\n        if (direction === 'bottom' && scrolledY.current < border) {\r\n            scrolledY.current = scrolledY.current + 5 < border ? scrolledY.current + 5 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n        if (direction === 'top' && scrolledY.current > 0) {\r\n            scrolledY.current = scrolledY.current - 5 > 0 ? scrolledY.current - 5 : 0;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, [border, scrollBarHeight])\r\n\r\n    const setCloseLookState = useCallback((height: number) => {\r\n        if (height < window.innerHeight) setVisible(false)\r\n        else setVisible(true);\r\n        memoizedData.current = [scrolledY.current, scrolledPercent.current];\r\n        scrolledY.current = 0;\r\n        scrolledPercent.current = 0;\r\n        setScroll({\r\n            y: 0,\r\n            top: `${0}%`\r\n        });\r\n    }, [border, scrollBarHeight])\r\n\r\n    const returnFromCloseLookState = useCallback(() => {\r\n        scrolledY.current = memoizedData.current[0];\r\n        scrolledPercent.current = memoizedData.current[1];\r\n        setScroll({\r\n            y: -memoizedData.current[0],\r\n            top: `${memoizedData.current[1]}%`\r\n        });\r\n    }, [border, scrollBarHeight])\r\n\r\n    const switchScrollBar = useCallback(() => setVisible(!visible), [border, scrollBarHeight]);\r\n\r\n    return (\r\n        <>\r\n            <AllLists style={wrapperAnimation} ref={measuredRef}>\r\n                <ScrollableWrapper style={{y: scrollingAnimation.y}}>\r\n                    <MappedLists setWrapperAnimation={setWrapperAnimation} width={width}\r\n                                 scrollByListDrugging={scrollByListDrugging} setCloseLookState={setCloseLookState}\r\n                                 returnFromCloseLookState={returnFromCloseLookState} switchScrollBar={switchScrollBar}/>\r\n                </ScrollableWrapper>\r\n            </AllLists>\r\n            <ScrollBarWrapper $palette={currentPalette} $visible={visible} style={visibilityOfScrollBar}>\r\n                <ScrollBarThing $palette={currentPalette}\r\n                                style={{top: scrollingAnimation.top}} {...!isMobile && {...bindDraggedScrollBar()}}\r\n                                $height={scrollBarHeight}/>\r\n            </ScrollBarWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollWrapper;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {neumorphColors} from \"./neumorphColors\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst Background = styled(animated.div)` \r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AnimatedBackground:React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    const [animateBackground, setBackground] = useSpring(() => ({\r\n        background: currentPalette.background\r\n    }));\r\n    useEffect(() => {\r\n        setBackground({background: currentPalette.background})\r\n    }, [currentPalette])\r\n\r\n    return <Background style={animateBackground}/>\r\n}\r\n\r\nexport default AnimatedBackground;\r\n\r\n","import React, {useEffect, useMemo} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {actions, submitAllChanges} from \"../redux/functionalReducer\";\r\nimport {animated, useSpring, useTransition} from \"react-spring\";\r\nimport {interfacePalette, NeumorphColorsType} from \"./neumorphColors\";\r\n\r\nconst RotatedBackground = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n   position: absolute;\r\n   z-index: 998;\r\n   background-color: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n   width: 200%;\r\n   transform-origin: 50% 0;\r\n   left: -100%;\r\n   transition: background-color 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n   box-shadow: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n   &:before {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      background-color: ${props => props.$palette.default ? interfacePalette.background : 'rgba(0, 0, 0, 0.3)'};\r\n   }\r\n`;\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  font-family: NunitoSans-ExtraLight, sans-serif;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  position: absolute;\r\n  width: 16vw;\r\n  height: 16vw;\r\n  max-width: 210px;\r\n  min-width: 150px;\r\n  max-height: 210px;\r\n  min-height: 150px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst EditButton = styled.div<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 15vw;\r\n  height: 15vw;\r\n  max-width: 210px;\r\n  min-width: 150px;\r\n  max-height: 210px;\r\n  min-height: 150px;\r\n  border-radius: 50%;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.shadows : props.$palette.shadows} ;\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n`;\r\n\r\nconst ProgressBackground = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  background-color: red;\r\n  position: absolute;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Progress = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  background-color: black;\r\n`;\r\n\r\nconst InnerBackground = styled.div<{ $palette: NeumorphColorsType, $altBackground: boolean }>`\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  position: absolute;\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 50%;\r\n  transition: 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  ${props => !props.$altBackground &&\r\n    `&:hover {\r\n        background: ${props.$palette.background};\r\n        color: ${props.$palette.color};\r\n  }`}\r\n`;\r\n\r\n//calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));\r\nconst InnerEditButtonText = styled(animated.div)`\r\n  z-index: 12;\r\n  text-align: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  font-size: calc(15px + (50 - 15) * ((100vw - 100px) / (1200 - 100)));\r\n`;\r\n\r\nconst SmallerButton = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 2;\r\n  width: 7vw;\r\n  height: 7vw;\r\n  max-width: 105px;\r\n  min-width: 70px;\r\n  max-height: 105px;\r\n  min-height: 70px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transition: 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst MediumButton = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: 10vw;\r\n  height: 10vw;\r\n  max-width: 160px;\r\n  min-width: 100px;\r\n  max-height: 160px;\r\n  min-height: 100px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transition: 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst InnerSmallerButtonText = styled.div`\r\n  text-align: center;\r\n  font-size: calc(10px + (20 - 10) * ((100vw - 50px) / (1200 - 50)));\r\n`;\r\n\r\nconst MainInterface = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n    const pendingState = useSelector((state: AppStateType) => state.todoList.pendingState, shallowEqual);\r\n    const initialLoading = useSelector((state: AppStateType) => state.todoList.initialLoadingState, shallowEqual);\r\n    const swapState = useSelector((state: AppStateType) => state.todoList.swapState, shallowEqual);\r\n    const allTasks = useSelector((state: AppStateType) => state.todoList.allTasks, shallowEqual);\r\n    const completedTasks = useSelector((state: AppStateType) => state.todoList.completedTasks, shallowEqual);\r\n    const fetching = useSelector((state: AppStateType) => state.todoList.fetchingState, shallowEqual);\r\n\r\n    const switchEditMode = () => {\r\n        if (!editable) dispatch(actions.enableEditMode());\r\n        if (editable) dispatch(submitAllChanges());\r\n    };\r\n\r\n    const addTodoList = () => {\r\n        const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (r = Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newList = {\r\n            id,\r\n            title: '',\r\n            tasks: []\r\n        }\r\n        dispatch(actions.addTodoList(newList));\r\n    };\r\n\r\n    const rejectAllChanges = () => {\r\n        dispatch(actions.rejectAllChanges())\r\n    };\r\n\r\n    //animation logic\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        height: '100%',\r\n        width: '100%',\r\n        backgroundHeight: '150%',\r\n        medX: '50%',\r\n        medY: '50%',\r\n        x: '50%',\r\n        y: '50%',\r\n        rotateZ: -35\r\n    }));\r\n\r\n    const [progressBarrAnimation, setProgressBar] = useSpring(() => ({\r\n        clipPath1: `polygon( 50% 0%, 100% 0%, 100% 200%, 50% 200%)`,\r\n        clipPath2: `polygon( 0% 0%, 50% 0%, 50% 200%, 0% 200%)`,\r\n        opacity: 1\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const progress = allTasks === 0 ? 0 : completedTasks / allTasks;\r\n        const progress1 = 200 - (200 - progress * 200);\r\n        const progress2 = 200 - progress * 200;\r\n        setProgressBar(() =>{\r\n           if (progress === 1) return {\r\n               to: async animate => {\r\n                   await  animate({\r\n                       clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n                       clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`\r\n                   });\r\n                   await animate({opacity: 0})\r\n               }\r\n           }\r\n           return {\r\n               clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n               clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`,\r\n               opacity: 1,\r\n               immediate: (props) => props === 'opacity'\r\n           }\r\n        })\r\n    }, [allTasks, completedTasks])\r\n\r\n    useEffect(() => {\r\n        if (!initialLoading && !editable && !pendingState) {\r\n            setSpring({\r\n                height: '20%',\r\n                width: '20%',\r\n                backgroundHeight: '30%',\r\n                rotateZ: -30,\r\n                config: {friction: 50}\r\n            })\r\n        } else if (editable) {\r\n            setSpring({\r\n                height: '20%',\r\n                width: '20%',\r\n                medX: '125%',\r\n                medY: '125%',\r\n                rotateZ: 0,\r\n                x: '-50%',\r\n                y: '150%',\r\n            })\r\n        } else if (pendingState) {\r\n\r\n        } else if (swapState) {\r\n\r\n        }\r\n    }, [editable, pendingState, initialLoading, swapState, fetching]);\r\n\r\n    const actionMessage = useMemo(() =>\r\n            initialLoading ? 'Loading' : editable ? 'Submit' : pendingState ? 'Sending data'\r\n                : 'Edit'\r\n        , [editable, pendingState, initialLoading, swapState, fetching]);\r\n\r\n    const textTransition = useTransition(actionMessage, {\r\n        from: {opacity: 1, y: '-100%'},\r\n        enter: {opacity: 1, y: '0%'},\r\n        leave: {opacity: 0, y: '100%'},\r\n\r\n    })\r\n\r\n    /*console.log('interface render')*/\r\n\r\n    return (\r\n        <>\r\n            <RotatedBackground $palette={currentPalette} style={{height: spring.backgroundHeight, rotateZ: spring.rotateZ /*translateX: '-50%'*/}}/>\r\n            <Wrapper style={{width: spring.width, height: spring.height}}>\r\n                <ButtonsWrapper>\r\n                    <EditButton onClick={switchEditMode} $palette={currentPalette}>\r\n                        <ProgressBackground style={{opacity: progressBarrAnimation.opacity}}>\r\n                            <Progress style={{clipPath: progressBarrAnimation.clipPath1}}/>\r\n                            <Progress style={{clipPath: progressBarrAnimation.clipPath2}}/>\r\n                        </ProgressBackground>\r\n                        <InnerBackground $palette={currentPalette}\r\n                                         $altBackground={pendingState || initialLoading || swapState || fetching}>\r\n                            {textTransition((style) =>\r\n                                <InnerEditButtonText style={{...style, translateY: '-50%'}}>\r\n                                    {actionMessage}\r\n                                </InnerEditButtonText>)}\r\n                        </InnerBackground>\r\n                    </EditButton>\r\n                    <SmallerButton onClick={addTodoList} $palette={currentPalette}\r\n                                   style={{x: spring.x, y: spring.y, translateX: '-50%', translateY: '-50%'}}>\r\n                        <InnerSmallerButtonText>\r\n                            Add list\r\n                        </InnerSmallerButtonText>\r\n                    </SmallerButton>\r\n                    <MediumButton onClick={rejectAllChanges} $palette={currentPalette}\r\n                                  style={{x: spring.medX, y: spring.medY, translateX: '-50%', translateY: '-50%'}}>\r\n                        <InnerSmallerButtonText>\r\n                            remove changes\r\n                        </InnerSmallerButtonText>\r\n                    </MediumButton>\r\n                </ButtonsWrapper>\r\n            </Wrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MainInterface","import React from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollWrapper from \"./todolists/ScrollWrapper\";\r\nimport AnimatedBackground from \"./AnimatedBackground\";\r\nimport MainInterface from \"./MainInterface\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n      box-sizing: border-box;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n    };\r\n  body {\r\n    background-color: white;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    outline: none;\r\n    &::-webkit-scrollbar { \r\n      display: none;\r\n    };\r\n  };\r\n  html {\r\n    -ms-overflow-style: none; \r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <AnimatedBackground/>\r\n            <Wrapper>\r\n                <MainInterface/>\r\n                <ScrollWrapper/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport functionalReducer from \"./functionalReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: functionalReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport './App.css';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n/// <reference types=\"react-dom/experimental\"\r\n/*ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));*/\r\n\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n// @ts-ignore\r\nReactDOM.unstable_createRoot(root).render( <Provider store={store}>\r\n    <App/>\r\n</Provider>);\r\n\r\n"],"sourceRoot":""}