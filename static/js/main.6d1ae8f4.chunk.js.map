{"version":3,"sources":["redux/api.ts","hooks/movePos.ts","Components/neumorphColors.ts","redux/functionalReducer.ts","Components/tasks/TaskButtons.tsx","Components/tasks/TaskCheckbox.tsx","Components/tasks/TodoListTask.tsx","hooks/validate.ts","Components/tasks/TodoListTasks.tsx","Components/todolists/TodoListTitle.tsx","Components/todolists/ContextButtons.tsx","Components/todolists/TodoList.tsx","Components/todolists/CloseButton.tsx","Components/todolists/MappedLists.tsx","hooks/swap.ts","Components/todolists/ScrollWrapper.tsx","Components/AnimatedBackground.tsx","Components/MainInterface.tsx","Components/App.tsx","redux/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","API-KEY","loginInstance","api","get","then","res","response","regenerator_default","a","async","_context","prev","next","status","awrap","sent","abrupt","data","stop","requestObject","email","password","rememberMe","post","_context2","_context3","title","_context4","todoListId","concat","_context5","_context6","taskId","newTask","put","_context7","delete","_context8","_context9","newTitle","_context10","swappedTask","beforeSwappedTask","putAfterItemId","_context11","swappedList","beforeSwappedList","_context12","movePos","array","moveIndex","toIndex","item","length","diff","Object","toConsumableArray","slice","neumorphColors","background","concaveBackground","shadows","innerShadows","littleShadows","innerLittleShadows","progressBarColor","color","defaultPalette","default","interfacePalette","initialState","todoLists","deepCopy","editable","listsOrder","tasksOrder","newListsId","newTasksId","errorsNumber","focusedStatus","currentPaletteIndex","initialLoadingState","pendingState","swapState","fetchingState","closeLookState","height","allTasks","completedTasks","actions","newTodoList","type","task","todoListTitle","newTasksOrder","newListsOrder","newTodoLists","palette","tasks","restore","state","getStateFromServer","initial","dispatch","lists","listsWithTasks","getTasks","map","id","index","findIndex","list","objectSpread2","items","Promise","all","setTimeout","functionalReducer","arguments","undefined","action","filter","newSwappedTasks","i","cloneDeep","TaskButtonWrapper","styled","div","withConfig","displayName","componentId","Button","React","memo","_ref","deleteTask","editTask","react_default","createElement","onClick","react_fontawesome_index_es","icon","CheckboxWrapper","props","$editable","Checkbox","input","Svg","svg","changeDoneStatus","checked","disabled","onChange","e","d","TaskWrapper","animated","TaskBackground","$palette","$editorState","TaskText","TodoListTask","useDispatch","useSelector","todoList","shallowEqual","_useState","useState","_useState2","slicedToArray","editorState","setEditorState","textRef","useRef","useEffect","current","focus","useLayoutEffect","textContent","priority","tasks_TaskButtons","tasks_TaskCheckbox","currentTarget","contentEditable","onKeyPress","key","preventDefault","blur","onKeyPressHandler","ref","onBlur","taskTitle","console","log","editStatus","TasksWrapper","$height","setHeight","settings","order","down","originalIndex","y","calcY","bounds","scale","zIndex","initialYofDragged","opacity","immediate","prop","initialY","indexOf","memoizedOrder","memoizedTasksId","heights","elementsBorder","elementsRef","setCurrentHeight","_useSprings","useSprings","_useSprings2","springs","setSprings","_useState3","_useState4","forceRerender","rerender","createRef","_","offsetHeight","calcPositions","deletedTaskIndex","deletedOrder","heightsSum","reduce","sum","heightsArray","total","topBorder","center","bottomBorder","gesture","useDrag","_ref2","_ref2$args","args","trueIndex","movement","event","first","stopPropagation","curIndex","curRow","newIndex","Math","abs","getNewIndex","newOrder","newHeights","isEqual","filterTaps","TodoListTasks_TaskWrapper","assign","style","tasks_TodoListTask","ListTitle","listTitle","isTitleEditable","switchTitleMode","deleteTodoList","ButtonWrapper","styles","colors","addTask","editList","ContextButtons_Button","SingleListWrapper","SingleListBottomLayer","$closeLookState","$focusedStatus","listTasks","paletteIndex","setNewHeights","deleteList","closeLook","currHeight","useCallback","filterValue","t","bind","useHover","hovering","setTitleEditMode","todolists_ContextButtons","replace","c","r","random","toString","todolists_TodoListTitle","tasks_TodoListTasks","CloseButton","ClosingButton","currentPalette","TodoListContainer","$width","CloseButtonAnimatedWrapper","setWrapperAnimation","width","scrollByListDrugging","setCloseLookState","returnFromCloseLookState","switchScrollBar","store","columns","useMemo","currWidth","recalculateMeasures","currentSettings","gridItems","find","x","temporaryValue","findHeight","newHeightsArray","display","Array","fill","heightInMeasuredArray","column","rightX","botY","horizontalCenter","verticalCenter","max","apply","deletedListIndex","deletedList","reorder","oldIndex","arr","index1","index2","val","idx","calculatePositions","xPos","currItem","yPos","setActualSprings","springsIndex","n","left","right","top","bottom","pageTop","pageBottom","eventCoords","virtualY","_ref2$movement","active","draggedList","offsetX","offsetY","clientX","clientY","window","innerHeight","getBounds","promise","resolve","indexOfLookedList","setIndexOfLookedList","_useSpring","useSpring","_useSpring2","closeButtonAnimation","setCloseButtonAnimation","Fragment","to","animate","innerWidth","rotateX","rotateZ","todolists_CloseButton","todolists_TodoList","AllLists","$closeLook","ScrollableWrapper","ScrollBarWrapper","ScrollBarThing","$drugged","ScrollWrapper","authState","isMounted","timeoutId","resizeListener","clearTimeout","setWidth","measuredRef","offsetWidth","addEventListener","removeEventListener","border","scrollBarHeight","_useState2$","setBorders","drugged","setDrugged","_useState5","_useState6","visible","setVisible","_useState7","_useState8","setCloseLook","_useState9","_useState10","config","tension","friction","clamp","wrapperAnimation","scrolledY","scrolledPercent","memoizedData","_useSpring3","_useSpring4","scrollingAnimation","setScroll","visibilityOfScrollBar","from","useWheel","delta","domTarget","offset","isMobile","posY","eventOptions","passive","bindDraggedScrollBar","_ref3","absY","direction","elementHeight","newBorder","newScrollBarHeight","visibility","translateX","todolists_MappedLists","$visible","library","add","far","fas","Background","AnimatedBackground","animateBackground","setBackground","RotatedBackground","Wrapper","ButtonsWrapper","EditButton","ProgressBackground","Progress","InnerBackground","$altBackground","InnerEditButtonText","SmallerButton","MediumButton","InnerSmallerButtonText","MainInterface","initialLoading","fetching","backgroundHeight","spring","setSpring","clipPath1","clipPath2","progressBarrAnimation","setProgressBar","progress","progress1","progress2","actionMessage","textTransition","useTransition","enter","leave","getState","oldTodoLists","todoListsWithNewId","addedLists","deletedLists","editedLists","addedTasks","editedTasks","deletedTasks","createAndChangeIdOfTasksInOrderList","listPromises","currentOrder","swapOrder","addedTasksInLists","currentListsStateOnServer","requiredOrder","_currentOrder","_swapOrder","groupedSwapOrder","swapOrderPending","oldList","newList","push","oldTask","resultCode","tasksPromises","newId","oldId","tasksWithNewId","newListId","t0","thisListPosId","swappedId","beforeSwappedId","listId","currentList","listsToUpdate","listsOnServer","getListOrder","t1","orderFromCurrentState","itemWithUpdatedState","curItem","forEach","currOrder","newTaskPosId","consistentSwapOrder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_order","Symbol","iterator","done","value","return","finish","clipPath","translateY","GlobalStyles","createGlobalStyle","_templateObject","App","Components_AnimatedBackground","App_Wrapper","Components_MainInterface","todolists_ScrollWrapper","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","root","document","getElementById","ReactDOM","unstable_createRoot","render","es","Components_App"],"mappings":"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","file":"static/js/main.6d1ae8f4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/auth/me\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\ntype CommonResponseType<T> = {\r\n    resultCode: number;\r\n    messages: string[];\r\n    data: T\r\n};\r\ntype RestoreTasksResponseType = {\r\n    items: TaskType[];\r\n    totalCount: number;\r\n    error?: string\r\n};\r\ntype GetMeType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n};\r\n\r\nexport const api = {\r\n    getAuthState: () => {\r\n        return loginInstance.get<CommonResponseType<GetMeType>>('').then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await loginInstance.get<CommonResponseType<GetMeType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    logIn: () => {\r\n        const requestObject = {email: \"npikolist@gmail.com\", password: \"512347\", rememberMe: false};\r\n        return loginInstance.post<CommonResponseType<{userId: string}>>('', requestObject)\r\n            .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await loginInstance.post<CommonResponseType<{userId: string}>>\r\n                    ('', requestObject)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreState: () => {\r\n        return instance.get<Array<TodoListType>>('') .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<Array<TodoListType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTodoList: (title: string) => {\r\n        return instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title}).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title})\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreTasks: (todoListId: string) => {\r\n        return instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTask: (title: string, todoListId: string) => {\r\n        return instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTask: (todoListId: string, taskId: string, newTask: TaskType) => {\r\n        return instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    deleteTodoList: (todoListId: string) => {\r\n        return instance.delete<CommonResponseType<{}>>(`/${todoListId}`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.delete<CommonResponseType<{}>>(`/${todoListId}`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    deleteTask: (todoListId: string, taskId: string) => {\r\n        return instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTodoListTitle: (todoListId:string, newTitle: string) => {\r\n        return instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTasks: (todoListId: string, swappedTask: string, beforeSwappedTask: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`, {putAfterItemId: beforeSwappedTask})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`,\r\n                            {putAfterItemId: beforeSwappedTask})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTodoList: (swappedList: string, beforeSwappedList: string| null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`, {putAfterItemId: beforeSwappedList})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`,\r\n                            {putAfterItemId: beforeSwappedList})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    }\r\n};\r\n","export const movePos  = (array: Array<any>, moveIndex: number, toIndex: number) => {\r\n    /* #move - Moves an array item from one position in an array to another.\r\n\r\n       Note: This is a pure function so a new array will be returned, instead\r\n       of altering the array argument.\r\n\r\n      Arguments:\r\n      1. array     (String) : Array in which to move an item.         (required)\r\n      2. moveIndex (Object) : The index of the item to move.          (required)\r\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\r\n    */\r\n    let item = array[moveIndex];\r\n    let length = array.length;\r\n    let diff = moveIndex - toIndex;\r\n\r\n    if (diff > 0) {\r\n        // move left\r\n        return [\r\n            ...array.slice(0, toIndex),\r\n            item,\r\n            ...array.slice(toIndex, moveIndex),\r\n            ...array.slice(moveIndex + 1, length)\r\n        ];\r\n    } else if (diff < 0) {\r\n        // move right\r\n        return [\r\n            ...array.slice(0, moveIndex),\r\n            ...array.slice(moveIndex + 1, toIndex + 1),\r\n            item,\r\n            ...array.slice(toIndex + 1, length)\r\n        ];\r\n    }\r\n    return array;\r\n}","/*export const neumorphColors = [\r\n    {\r\n        background: '#1a0b3b',\r\n        backgroundOuter: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n        shadows: '22px 22px 49px #0a0418, -22px -22px 49px #2a125e',\r\n        shadowsFocused: 'inset 11px 11px 23px #0a0418, inset -11px -11px 23px #2a125e',\r\n        shadowsHovered: '22px 22px 49px #0a0418',\r\n        innerShadows: '11px 11px 23px #0a0418, -11px -11px 23px #2a125e',\r\n        color: 'rgb(108, 98, 131)',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: 'rgb(30, 13, 55)',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#f6f7fa',\r\n        backgroundOuter: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadows: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsFocused: 'inset 11px 11px 23px #a2a3a5, inset -11px -11px 23px #ffffff',\r\n        shadowsHovered: '22px 22px 49px #a2a3a5',\r\n        innerShadows: '11px 11px 23px #a2a3a5, -11px -11px 23px #ffffff',\r\n        color: '#ff9605',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: '#f6f7fa',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#ff9605',\r\n        backgroundOuter: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadows: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsFocused: 'inset 11px 11px 23px #a86303, inset -11px -11px 23px #ffc907',\r\n        shadowsHovered: '22px 22px 49px #a86303',\r\n        innerShadows: '11px 11px 23px #a86303, -11px -11px 23px #ffc907',\r\n        color: '#f6f7fa',\r\n        hoveredAltBackground: '#f6f7fa',\r\n        hoveredColor: '#ff9605',\r\n        backgroundAltInner: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadowsAlt: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a2a3a5, inset -22px -22px 49px #ffffff',\r\n    }\r\n];*/\r\n\r\nexport const neumorphColors: Array<NeumorphColorsType> = [\r\n    {\r\n        background: '#B5838D',\r\n        concaveBackground: 'linear-gradient(145deg, #a3767f, #c28c97)',\r\n        shadows: '20px 20px 40px #9a6f78, -20px -20px 40px #d097a2',\r\n        innerShadows: 'inset 20px 20px 40px #9a6f78, inset -20px -20px 40px #d097a2',\r\n        littleShadows: '5px 5px 10px #9a6f78, -5px -5px 10px #d097a2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #9a6f78, inset -5px -5px 10px #d097a2',\r\n        progressBarColor: '#d097a2',\r\n        color: 'white',\r\n    },{\r\n        background: '#E5989B',\r\n        concaveBackground: 'linear-gradient(145deg, #ce898c, #f5a3a6)',\r\n        shadows: '20px 20px 40px #c38184, -20px -20px 40px #ffafb2',\r\n        innerShadows: 'inset 20px 20px 40px #c38184, inset -20px -20px 40px #ffafb2',\r\n        littleShadows: '5px 5px 10px #c38184, -5px -5px 10px #ffafb2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c38184, inset -5px -5px 10px #ffafb2',\r\n        progressBarColor: '#ffafb2',\r\n        color: 'white',\r\n    },{\r\n        background: '#FFB4A2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6a292, #ffc1ad)',\r\n        shadows: '20px 20px 40px #d49586, -20px -20px 40px #ffd3be',\r\n        innerShadows: 'inset 20px 20px 40px #d49586, inset -20px -20px 40px #ffd3be',\r\n        littleShadows: '5px 5px 10px #d49586, -5px -5px 10px #ffd3be;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d49586, inset -5px -5px 10px #ffd3be',\r\n        progressBarColor: '#ffd3be',\r\n        color: 'white',\r\n    }, {\r\n        background: '#FFCDB2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6b9a0, #ffdbbe)',\r\n        shadows: '20px 20px 40px #d4aa94, -20px -20px 40px #fff0d0',\r\n        innerShadows: 'inset 20px 20px 40px #d4aa94, inset -20px -20px 40px #fff0d0',\r\n        littleShadows: '5px 5px 10px #d4aa94, -5px -5px 10px #fff0d0;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d4aa94, inset -5px -5px 10px #fff0d0',\r\n        progressBarColor: '#fff0d0',\r\n        color: 'white'\r\n    }\r\n];\r\n\r\nexport const defaultPalette: NeumorphColorsType = {\r\n    background: '#6D6875',\r\n    concaveBackground: 'linear-gradient(145deg, #625e69, #756f7d)',\r\n    shadows: '20px 20px 40px #5e5965, -20px -20px 40px #7c7785',\r\n    innerShadows: 'inset 20px 20px 40px #5e5965, inset -20px -20px 40px #7c7785',\r\n    littleShadows: '5px 5px 10px #5d5863, -5px -5px 10px #7d7887',\r\n    innerLittleShadows: 'inset 5px 5px 10px #5d5863, inset -5px -5px 10px #7d7887',\r\n    progressBarColor: '#7c7785',\r\n    color: 'white',\r\n    default: true\r\n};\r\n\r\nexport const interfacePalette: NeumorphColorsType = {\r\n    background: '#1a0b3b',\r\n    concaveBackground: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n    shadows: '20px 20px 40px #0a0418, -20px -20px 40px #2a125e',\r\n    innerShadows: '20px 20px 40px #0a0418, -20px -20px 40px #2a125e',\r\n    littleShadows: '5px 5px 10px #0a0418, -5px -5px 10px #2a125e',\r\n    color: 'white',\r\n    innerLittleShadows: 'inset 5px 5px 10px #0a0418, inset -5px -5px 10px #2a125e',\r\n    progressBarColor: '#1a0b3b',\r\n}\r\n\r\n\r\nexport type NeumorphColorsType = {\r\n    background: string,\r\n    concaveBackground: string,\r\n    shadows: string,\r\n    innerShadows: string,\r\n    littleShadows: string,\r\n    innerLittleShadows: string,\r\n    progressBarColor: string,\r\n    color: string,\r\n    default?: boolean\r\n};","import {api} from \"./api\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport cloneDeep from \"lodash-es/cloneDeep\";\r\nimport {movePos} from \"../hooks/movePos\";\r\nimport {act} from \"react-dom/test-utils\";\r\nimport {defaultPalette, neumorphColors, NeumorphColorsType} from \"../Components/neumorphColors\";\r\n\r\ntype InitialStateType = {\r\n    todoLists: Array<TodoListType>,\r\n    deepCopy: Array<TodoListType>,\r\n    editable: boolean,\r\n    listsOrder: Array<string>,\r\n    tasksOrder: Array<{ todoListId: string, newTasksOrder: Array<string> }>,\r\n    newListsId: Array<{ oldId: string, newId: string }>,\r\n    newTasksId: Array<{ oldId: string, newId: string, todoListId: string }>,\r\n    errorsNumber: number,\r\n    focusedStatus: boolean,\r\n    currentPaletteIndex: NeumorphColorsType,\r\n    initialLoadingState: boolean,\r\n    pendingState: boolean,\r\n    swapState: boolean,\r\n    fetchingState: boolean,\r\n    height: number,\r\n    allTasks: number,\r\n    completedTasks: number,\r\n    closeLookState: boolean\r\n};\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    deepCopy: [],\r\n    editable: false,\r\n    listsOrder: [],\r\n    tasksOrder: [],\r\n    newListsId: [],\r\n    newTasksId: [],\r\n    errorsNumber: 0,\r\n    focusedStatus: false,\r\n    currentPaletteIndex: defaultPalette,\r\n    initialLoadingState: true,\r\n    pendingState: false,\r\n    swapState: false,\r\n    fetchingState: false,\r\n    closeLookState: false,\r\n    height: 0,\r\n    allTasks: 0,\r\n    completedTasks: 0\r\n};\r\n\r\nconst functionalReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'functionalReducer/SET_TODO_LISTS':\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        case 'functionalReducer/SET_TASKS':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: action.tasks}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/ADD_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [action.newTodoList, ...state.todoLists],\r\n            };\r\n        case 'functionalReducer/ADD_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: [action.newTask, ...list.tasks]}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list, tasks: list.tasks.map(task => {\r\n                                if (task.id === action.task.id) {\r\n                                    return {...action.task}\r\n                                } else return task;\r\n                            })\r\n                        }\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/DELETE_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(list => list.id !== action.todoListId),\r\n            };\r\n        case 'functionalReducer/DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: list.tasks.filter(task => task.id !== action.taskId)}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TODO_LIST_TITLE':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, title: action.todoListTitle}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case \"functionalReducer/SWAP_TODO_LISTS\":\r\n            return {\r\n                ...state,\r\n                listsOrder: action.newListsOrder\r\n            }\r\n        case \"functionalReducer/SWAP_TASKS\":\r\n            const index = state.tasksOrder.findIndex(item => item.todoListId === action.todoListId);\r\n            const newSwappedTasks = index !== -1 ? state.tasksOrder.map((item, i) => {\r\n                if (i === index) return {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}\r\n                return item\r\n            }) : [...state.tasksOrder, {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}]\r\n            return {\r\n                ...state,\r\n                tasksOrder: newSwappedTasks\r\n            }\r\n        case \"functionalReducer/ENABLE_EDIT_MODE\": //глянуть\r\n            return {\r\n                ...state,\r\n                editable: true,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n                errorsNumber: 0,\r\n                deepCopy: cloneDeep(state.todoLists)\r\n            };\r\n        case \"functionalReducer/DISABLE_EDIT_MODE\":\r\n            return {\r\n                ...state,\r\n                editable: false\r\n            }\r\n        case \"functionalReducer/SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorsNumber: state.errorsNumber + 1\r\n            };\r\n        case \"functionalReducer/SET_FOCUSED_STATUS\":\r\n            return {\r\n                ...state,\r\n                focusedStatus: action.status\r\n            };\r\n        case \"functionalReducer/SET_NEW_ID\":\r\n            return {\r\n                ...state,\r\n                todoLists: action.newTodoLists\r\n            };\r\n        case \"functionalReducer/SET_CURRENT_PALETTE_INDEX\":\r\n            return {\r\n                ...state,\r\n                currentPaletteIndex: action.palette\r\n            }\r\n        case \"functionalReducer/REJECT_ALL_CHANGES\":\r\n            return {\r\n                ...state,\r\n                todoLists: state.deepCopy,\r\n                editable: false,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n            }\r\n        case \"functionalReducer/COMPLETE_INITIAL_LOADING_STATE\":\r\n            return {\r\n                ...state,\r\n                initialLoadingState: false\r\n            }\r\n        case \"functionalReducer/SET_PENDING_STATE\":\r\n            return {\r\n                ...state,\r\n                pendingState: action.pendingState\r\n            }\r\n        case \"functionalReducer/SET_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case \"functionalReducer/SET_ALL_TASKS\":\r\n            return {\r\n                ...state,\r\n                allTasks: action.tasks\r\n            }\r\n        case \"functionalReducer/SET_COMPLETED_TASK\":\r\n            return {\r\n                ...state,\r\n                completedTasks: action.restore ? 0 : state.completedTasks+1\r\n            }\r\n        case \"functionalReducer/SET_SWAP_STATE\":\r\n            return {\r\n                ...state,\r\n                swapState: action.state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n    addTodoList: (newTodoList: TodoListType) => ({type: 'functionalReducer/ADD_TODO_LIST', newTodoList} as const),\r\n    addTask: (newTask: TaskType, todoListId: string) => ({type: 'functionalReducer/ADD_TASK', newTask, todoListId} as const),\r\n    changeTask: (task: TaskType) => ({type: 'functionalReducer/CHANGE_TASK', task} as const),\r\n    deleteTodoList: (todoListId: string) => ({type: 'functionalReducer/DELETE_TODO_LIST', todoListId} as const),\r\n    deleteTask: (todoListId: string, taskId: string) => ({type: 'functionalReducer/DELETE_TASK', taskId, todoListId} as const),\r\n    restoreTodoList: (todoLists: TodoListType[]) => ({type: 'functionalReducer/SET_TODO_LISTS', todoLists} as const),\r\n    restoreTasks: (tasks: TaskType[], todoListId: string) => ({\r\n        type: 'functionalReducer/SET_TASKS',\r\n        tasks,\r\n        todoListId\r\n    } as const),\r\n    changeTodoListTitle: (todoListId: string, todoListTitle: string) => ({\r\n        type: 'functionalReducer/CHANGE_TODO_LIST_TITLE',\r\n        todoListId,\r\n        todoListTitle\r\n    } as const),\r\n    enableEditMode: () => ({type: 'functionalReducer/ENABLE_EDIT_MODE'} as const),\r\n    disableEditMode: () => ({type: 'functionalReducer/DISABLE_EDIT_MODE'} as const),\r\n    setError: () => ({type: 'functionalReducer/SET_ERROR'} as const),\r\n    setFocusedStatus: (status: boolean) => ({type: 'functionalReducer/SET_FOCUSED_STATUS', status} as const),\r\n    swapTasks: (todoListId: string, newTasksOrder: Array<string>) => ({\r\n        type: 'functionalReducer/SWAP_TASKS', todoListId, newTasksOrder\r\n    } as const),\r\n    swapTodoLists: (newListsOrder: Array<string>) => ({type: 'functionalReducer/SWAP_TODO_LISTS', newListsOrder} as const),\r\n    setTodoLists: (newTodoLists: Array<TodoListType>) => ({type: 'functionalReducer/SET_NEW_ID', newTodoLists} as const),\r\n    setPalette: (palette: NeumorphColorsType) => ({type: 'functionalReducer/SET_CURRENT_PALETTE_INDEX', palette} as const),\r\n    rejectAllChanges: () => ({type: 'functionalReducer/REJECT_ALL_CHANGES'} as const),\r\n    completeInitialLoadingState: () => ({type: 'functionalReducer/COMPLETE_INITIAL_LOADING_STATE'} as const),\r\n    setPendingState: (pendingState: boolean) => ({type: 'functionalReducer/SET_PENDING_STATE', pendingState} as const),\r\n    setHeight: (height: number) => ({type: 'functionalReducer/SET_HEIGHT', height} as const),\r\n    setAllTasks: (tasks: number) => ({type: 'functionalReducer/SET_ALL_TASKS', tasks} as const),\r\n    setCompletedTask: (restore: boolean) => ({type: 'functionalReducer/SET_COMPLETED_TASK', restore} as const),\r\n    setSwapState: (state: boolean) => ({type: 'functionalReducer/SET_SWAP_STATE', state} as const),\r\n    setFetchingState: (state: boolean) => ({type: 'functionalReducer/SET_FETCHING_STATE', state} as const),\r\n    setCloseLookState: (state: boolean) => ({type: 'functionalReducer/SET_CLOSE_LOOK_STATE', state} as const),\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsTypes>;\r\ntype ThunkActionType = ThunkDispatch<AppStateType, unknown, ActionsTypes>;\r\n\r\nexport const loadTodoListsTC = (): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreState().then(data => {\r\n        dispatch(actions.restoreTodoList(data))\r\n    })\r\n};\r\nexport const addTodoListTC = (title: string): ThunkType => (dispatch: ThunkActionType) => {//done\r\n    api.addTodoList(title).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTodoList(data.data.item))\r\n    })\r\n};\r\nexport const addTaskTC = (newTask: string, todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.addTask(newTask, todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTask(data.data.item, todoListId))\r\n    })\r\n};\r\nexport const changeTaskTC = (todoListId: string, taskId: string, newTask: TaskType): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTask(todoListId, taskId, newTask).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTask(data.data.item))\r\n    })\r\n};\r\nexport const deleteTodoListTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTodoList(todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTodoList(todoListId))\r\n    })\r\n};\r\nexport const deleteTaskTC = (todoListId: string, taskId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTask(todoListId, taskId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTask(todoListId, taskId))\r\n    })\r\n};\r\nexport const restoreTasksTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreTasks(todoListId).then(data => {\r\n        dispatch(actions.restoreTasks(data.items, todoListId))\r\n    })\r\n};\r\nexport const changeTodoListTitleTC = (todoListId: string, todoListTitle: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTodoListTitle(todoListId, todoListTitle).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTodoListTitle(todoListId, todoListTitle))\r\n    })\r\n};\r\n\r\n/*export const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n        const deletedLists = getState().todoList.deletedLists;\r\n        const addedLists = getState().todoList.addedLists;\r\n        const clearedAddedLists = getState().todoList.addedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const changedLists = getState().todoList.changedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const clearlyDeletedLists = deletedLists.filter(list => addedLists\r\n            .findIndex(item => item.id === list) === -1);\r\n        /!*const addedSwappedLists = getState().todoList.swappedLists.filter(item => clearedAddedLists\r\n            .findIndex(i => i.id === (item[0].id || item[1].id)) !== -1);\r\n        const clearlySwappedLists = getState().todoList.swappedLists.filter(item => addedSwappedLists\r\n            .findIndex(i => i[0] === item[0] && i[1] === item[1]) === -1);*!/\r\n\r\n        const deletedTasksWithList = getState().todoList.deletedTasksWithList;\r\n        const deletedTasks = getState().todoList.deletedTasks.filter(item => deletedTasksWithList\r\n            .findIndex(i => i.taskId === item.taskId) === -1);\r\n        const allDeletedTasks = [...deletedTasks, ...deletedTasksWithList];\r\n        const changedTasks = getState().todoList.changedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const addedTasks = getState().todoList.addedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const clearedSwappedTasks = getState().todoList.swappedTasks.filter(item => deletedLists\r\n            .findIndex(i => i === item.todoListId) === -1).map(item => item.swappedTasks\r\n            .map(taskArray => [...taskArray, item.todoListId])).map(item => {\r\n            const newArray: Array<string> = [];\r\n            return newArray.concat(...item)\r\n        })\r\n        //очистка от удалённых\r\n\r\n        const clearlyAddedLists = clearedAddedLists.map(list => {\r\n            const sameList = changedLists.find(item => item.id === list.id);\r\n            if (sameList) {\r\n                return sameList\r\n            } else return list\r\n        });\r\n        const clearlyChangedLists = changedLists.filter(list => clearlyAddedLists\r\n            .findIndex(item => item.id === list.id) === -1);\r\n        //очистка одинаковых листов\r\n\r\n        const clearedNewTasks = addedTasks.map(task => {\r\n            const sameTask = changedTasks.find(item => item.id === task.id)\r\n            if (sameTask) {\r\n                return sameTask\r\n            } else return task\r\n        });\r\n        const clearlyChangedTasks = changedTasks.filter(task => clearedNewTasks\r\n            .findIndex(item => item.id === task.id) === -1);\r\n        const addedInNewListsTasks = clearedNewTasks.filter(task => clearlyAddedLists\r\n            .findIndex(list => list.id === task.todoListId) !== -1);\r\n        const clearlyAddedTasks = clearedNewTasks.filter(task => addedInNewListsTasks\r\n            .findIndex(item => item.id === task.id) !== 1);\r\n        const addedSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            clearlyAddedTasks.findIndex(i => i.id === task) !== -1));\r\n        const addedInNewListsSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            addedInNewListsTasks.findIndex(i => i.id === task) !== -1));\r\n        const clearlySwappedTasks = clearedSwappedTasks.map(item => item.filter(task => (\r\n            addedSwappedTasks.findIndex(i => (i[0] || i[1]) === task) === -1 || addedInNewListsSwappedTasks\r\n                .findIndex(i => (i[0] || i[1]) === task) === -1)));\r\n        //очистка тасок\r\n\r\n        //запросы\r\n        if (clearlyAddedLists.length !== 0) {\r\n            let newLists: Array<{ newId: string, oldId: string }> = [];\r\n            const promises = clearlyAddedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) newLists.push({newId: data.data.item.id, oldId: list.id})\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedInNewListsTasks.length !== 0) {\r\n                let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n                const promises = addedInNewListsTasks.map(async (task) => {\r\n                    let newListId = newLists.find(list => list.oldId === task.todoListId)!.newId;\r\n                    return await api.addTask(task.title, newListId).then(data => {\r\n                        if (data.resultCode === 0) newTasks.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            listId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n                await Promise.all(promises);\r\n                if (addedInNewListsSwappedTasks.length !== 0) {\r\n                    const newIdSwappedTasks = addedInNewListsSwappedTasks.map(tasks => tasks.map(task => {\r\n                        const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                        return {newId: currentTask.newId, listId: currentTask.listId}\r\n                    }))\r\n                    newIdSwappedTasks.map(tasks => {\r\n                        api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (clearlyAddedTasks.length !== 0) {\r\n            let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n            const promises = clearlyAddedTasks.map(async (task) => {\r\n                api.addTask(task.title, task.todoListId).then(data => {\r\n                    if (data.resultCode === 0) newTasks.push({\r\n                        newId: data.data.item.id,\r\n                        oldId: task.id,\r\n                        listId: data.data.item.todoListId\r\n                    })\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedSwappedTasks.length !== 0) {\r\n                const newIdSwappedTasks = addedSwappedTasks.map(tasks => tasks.map(task => {\r\n                    const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                    return {newId: currentTask.newId, listId: currentTask.listId}\r\n                }))\r\n                newIdSwappedTasks.map(tasks => {\r\n                    api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        if (clearlySwappedTasks.length !== 0) {\r\n            clearlySwappedTasks.forEach(tasks => {\r\n                api.swapTasks(tasks[2], tasks[0], tasks[1]).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyDeletedLists.length !== 0) {\r\n            clearlyDeletedLists.forEach(list => {\r\n                api.deleteTodoList(list).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedLists.length !== 0) {\r\n            clearlyChangedLists.forEach(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedTasks.length !== 0) {\r\n            clearlyChangedTasks.forEach(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.forEach(task => {\r\n                api.deleteTask(task.todoListId, task.taskId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        dispatch(actions.disableEditMode())\r\n    };*/\r\n\r\n\r\nexport const initialization = (): ThunkType => async (dispatch: ThunkActionType) => {\r\n    const authState = await api.getAuthState();\r\n    console.log(authState)\r\n    if (!authState.data.id) {\r\n        await api.logIn()\r\n    }\r\n    dispatch(getStateFromServer(true));\r\n};\r\n\r\nconst getStateFromServer = (initial: boolean): ThunkType => async (dispatch: ThunkActionType) => {\r\n    if (!initial) dispatch(actions.setFetchingState(true));\r\n    const lists = await api.restoreState();\r\n    let listsWithTasks = lists;\r\n    if (lists.length !== 0) {\r\n        dispatch(actions.setAllTasks(lists.length));\r\n        dispatch(actions.setCompletedTask(true))\r\n        const getTasks = lists.map(async (item) => {\r\n            return await api.restoreTasks(item.id).then(data => {\r\n                const index = listsWithTasks.findIndex(list => item.id === list.id);\r\n                listsWithTasks[index] = {...item, tasks: data.items};\r\n                dispatch(actions.setCompletedTask(false))\r\n            })\r\n        });\r\n        await Promise.all(getTasks)\r\n    }\r\n    dispatch(actions.setTodoLists(listsWithTasks));\r\n    if (initial) setTimeout(() => dispatch(actions.completeInitialLoadingState()), 400);\r\n};\r\n\r\nexport const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n\r\n        dispatch(actions.disableEditMode());\r\n        dispatch(actions.setPendingState(true))\r\n        /*dispatch(actions.setPendingState(true))*/\r\n\r\n        const oldTodoLists = getState().todoList.deepCopy;\r\n        const newTodoLists = getState().todoList.todoLists;\r\n        let listsOrder = getState().todoList.listsOrder;\r\n        let tasksOrder = getState().todoList.tasksOrder;\r\n\r\n        const newListsId: Array<{ oldId: string, newId: string }> = [];\r\n        const newTasksId: Array<{ oldId: string, newId: string, todoListId: string }> = [];\r\n        let todoListsWithNewId: Array<TodoListType> = [];\r\n\r\n        //added items\r\n        const addedLists = newTodoLists.filter(list => oldTodoLists.findIndex(oldList => oldList.id === list.id) === -1);\r\n        const deletedLists = oldTodoLists.filter(list => newTodoLists.findIndex(newList => newList.id === list.id) === -1);\r\n        const editedLists: Array<TodoListType> = []\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList && list.title !== oldList.title) {\r\n                editedLists.push(list)\r\n            }\r\n        })\r\n\r\n        let addedTasks: Array<TaskType> = [];\r\n        const editedTasks: Array<TaskType> = [];\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList) {\r\n                list.tasks.map(task => {\r\n                    const oldTask = oldList.tasks.find(oldTask => oldTask.id === task.id)\r\n                    if (!oldTask) {\r\n                        addedTasks.push(task);\r\n                        return\r\n                    }\r\n                    if (oldTask && oldTask.title !== task.title) {\r\n                        editedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n            if (!oldList && list.tasks.length !== 0) {\r\n                list.tasks.map(task => addedTasks.push(task))\r\n            }\r\n        })\r\n        const deletedTasks: Array<TaskType> = [];\r\n        oldTodoLists.map(list => {\r\n            const newList = newTodoLists.find(newList => newList.id === list.id);\r\n            if (newList) {\r\n                list.tasks.map(task => {\r\n                    const newTask = newList.tasks.find(newTask => newTask.id === task.id)\r\n                    if (!newTask) {\r\n                        deletedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        //progress bar logic\r\n        let allTasks = 0;\r\n        if (deletedLists.length !== 0) allTasks = allTasks + deletedLists.length;\r\n        if (deletedTasks.length !== 0) allTasks = allTasks + deletedTasks.length;\r\n        if (addedLists.length !== 0) allTasks = allTasks + addedLists.length;\r\n        if (addedTasks.length !== 0) allTasks = allTasks + addedTasks.length;\r\n        if (editedLists.length !== 0) allTasks = allTasks + editedLists.length;\r\n        if (editedTasks.length !== 0) allTasks = allTasks + editedTasks.length;\r\n        dispatch(actions.setAllTasks(allTasks));\r\n\r\n        //queries\r\n        dispatch(actions.setCompletedTask(true))\r\n        if (deletedLists.length !== 0) {\r\n            deletedLists.map(list => {\r\n                api.deleteTodoList(list.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.map(task => {\r\n                api.deleteTask(task.todoListId, task.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedLists.length !== 0) {\r\n            editedLists.map(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedTasks.length !== 0) {\r\n            editedTasks.map(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n\r\n        const createAndChangeIdOfTasksInOrderList = async () => {\r\n            if (addedTasks.length !== 0) {\r\n                const tasksPromises = addedTasks.map(async (task) => {\r\n                    return await api.addTask(task.title, task.todoListId).then(data => {\r\n                        if (data.resultCode === 0) newTasksId.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            todoListId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                    });\r\n                })\r\n                await Promise.all(tasksPromises);\r\n                if (tasksOrder.length !== 0) {\r\n                    tasksOrder = tasksOrder.map(item => {\r\n                        const newList = newListsId.find(list => list.oldId === item.todoListId)\r\n                        const tasksWithNewId = item.newTasksOrder.map(taskId => {\r\n                            const newTask = newTasksId.find(newTask => newTask.oldId === taskId);\r\n                            if (newTask) return newTask.newId;\r\n                            return taskId\r\n                        })\r\n                        return {todoListId: newList ? newList.newId : item.todoListId, newTasksOrder: tasksWithNewId}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addedLists.length !== 0) {\r\n            const listPromises = addedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        newListsId.push({newId: data.data.item.id, oldId: list.id});\r\n                        dispatch(actions.setCompletedTask(false))\r\n                    }\r\n                })\r\n\r\n            })\r\n            await Promise.all(listPromises);\r\n            if (addedTasks.length !== 0) {\r\n                addedTasks = addedTasks.map(task => {\r\n                    const newListId = newListsId.find(list => list.oldId === task.todoListId);\r\n                    if (newListId) return {...task, todoListId: newListId.newId}\r\n                    return task\r\n                })\r\n            }\r\n            if (listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.map(item => {\r\n                    const newList = newListsId.find(list => list.oldId === item)\r\n                    if (newList) return newList.newId;\r\n                    return item\r\n                })\r\n            }\r\n            await createAndChangeIdOfTasksInOrderList()\r\n        } else await createAndChangeIdOfTasksInOrderList();\r\n\r\n        //swap progress\r\n        dispatch(actions.setPendingState(false));\r\n        dispatch(actions.setSwapState(true))\r\n\r\n        //changing id\r\n        if (newListsId.length !== 0) {\r\n            todoListsWithNewId = newTodoLists.map(list => {\r\n                const newList = newListsId.find(item => item.oldId === list.id)\r\n                if (newList) return {...list, id: newList.newId};\r\n                return list\r\n            })\r\n        } else todoListsWithNewId = newTodoLists;\r\n        if (newTasksId.length !== 0) {\r\n            todoListsWithNewId = todoListsWithNewId.map(list => {\r\n                const tasks = list.tasks.map(task => {\r\n                    const newTask = newTasksId.find(item => item.oldId === task.id)\r\n                    if (newTask) return {...task, id: newTask.newId}\r\n                    return task\r\n                })\r\n                return {...list, tasks}\r\n            })\r\n        }\r\n\r\n        //swap items\r\n        if (listsOrder.length !== 0 || addedLists.length > 1) {\r\n            if (deletedLists.length !== 0 && listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.filter(list => todoListsWithNewId.findIndex(item => item.id === list) !== -1)\r\n            }\r\n            let currentOrder = addedLists.length > 1 ? await api.restoreState().then(data => data.map(item => item.id))\r\n                : todoListsWithNewId.map(list => list.id);\r\n            const swapOrder: Array<{ swappedId: string, beforeSwappedId: string | null }> = [];\r\n            const order = listsOrder.length !== 0 ? listsOrder : todoListsWithNewId.map(list => list.id);\r\n            order.map((thisListPosId, index) => {\r\n                if (thisListPosId !== currentOrder[index]) {\r\n                    if (index === 0) swapOrder.push({swappedId: thisListPosId, beforeSwappedId: null})\r\n                    else swapOrder.push({swappedId: thisListPosId, beforeSwappedId: listsOrder[index - 1]});\r\n                    const oldIndex = currentOrder.findIndex(listId => listId === thisListPosId)\r\n                    currentOrder = movePos(currentOrder, oldIndex, index)\r\n                }\r\n            });\r\n            swapOrder.map(item => {\r\n                api.swapTodoList(item.swappedId, item.beforeSwappedId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n        }\r\n\r\n        if (tasksOrder.length !== 0 || addedTasks.length > 1) {\r\n            if (deletedTasks.length !== 0 && tasksOrder.length !== 0) {\r\n                tasksOrder = tasksOrder.map(item => {\r\n                    const currentList = todoListsWithNewId.find(list => list.id === item.todoListId)\r\n                    if (currentList) {\r\n                        const newTasksOrder = item.newTasksOrder.filter(taskId => currentList.tasks.findIndex(task =>\r\n                            task.id === taskId) !== -1)\r\n                        return {...item, newTasksOrder}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            let addedTasksInLists: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            const currentListsStateOnServer = newTasksId.length > 1 ? await (async () => {\r\n                newTasksId.map(task => {\r\n                    const list = addedTasksInLists.length !== 0 ?\r\n                        addedTasksInLists.find(list => list.todoListId === task.todoListId) : undefined;\r\n                    if (list) {\r\n                        const index = addedTasksInLists.findIndex(list => list.todoListId === task.todoListId);\r\n                        addedTasksInLists[index] = {...list, tasks: [...list.tasks, task.newId]}\r\n                    } else addedTasksInLists.push({todoListId: task.todoListId, tasks: [task.newId]})\r\n                })\r\n                let listsToUpdate: Array<string> = [];\r\n                addedTasksInLists.map(item => {\r\n                    if (item.tasks.length > 1) listsToUpdate.push(item.todoListId)\r\n                })\r\n                if (listsToUpdate.length !== 0) {\r\n                    let listsOnServer: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n                    const getListOrder = listsToUpdate.map(async (item) => {\r\n                        return await api.restoreTasks(item).then(res => {\r\n                            const tasks = res.items.map(item => item.id);\r\n                            listsOnServer.push({todoListId: item, tasks})\r\n                        });\r\n                    });\r\n                    await Promise.all(getListOrder);\r\n                    return listsOnServer\r\n                } else return undefined\r\n            })() : undefined;\r\n\r\n            /*console.log(currentListsStateOnServer,\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.id),\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.title))*/\r\n\r\n            let requiredOrder: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            if (currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const isItemInOrder = tasksOrder.find(currItem =>\r\n                        currItem.todoListId === item.todoListId);\r\n                    if (isItemInOrder) return;\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n                tasksOrder.map(item => requiredOrder.push({todoListId: item.todoListId, tasks: item.newTasksOrder}))\r\n            } else if (!currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                requiredOrder = tasksOrder.map(item => ({todoListId: item.todoListId, tasks: item.newTasksOrder}));\r\n            } else if (currentListsStateOnServer && tasksOrder.length === 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n            }\r\n\r\n            const currentOrder = requiredOrder.map(item => {\r\n                const itemWithUpdatedState = currentListsStateOnServer ? currentListsStateOnServer\r\n                    .find(list => list.todoListId === item.todoListId) : undefined;\r\n                const curItem = todoListsWithNewId.find(list => list.id === item.todoListId)!;\r\n                if (itemWithUpdatedState) return itemWithUpdatedState;\r\n                return {todoListId: curItem.id, tasks: curItem.tasks.map(task => task.id)}\r\n            });\r\n\r\n            const swapOrder: Array<{ todoListId: string, swappedId: string, beforeSwappedId: string | null }> = [];\r\n            requiredOrder.forEach(newOrder => {\r\n                let currOrder = currentOrder.find(item => item.todoListId === newOrder.todoListId)!.tasks;\r\n                newOrder.tasks.forEach((newTaskPosId, index) => {\r\n                    if (newTaskPosId !== currOrder[index]) {\r\n                        if (index === 0) swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId, beforeSwappedId: null\r\n                        });\r\n                        else swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId,\r\n                            beforeSwappedId: currOrder[index - 1]\r\n                        });\r\n                        const oldIndex = currOrder.findIndex(taskId => taskId === newTaskPosId)\r\n                        currOrder = movePos(currOrder, oldIndex, index)\r\n                    }\r\n                })\r\n            });\r\n            const groupedSwapOrder: Array<{todoListId: string, swapOrder: Array<{swappedId: string, beforeSwappedId: string | null}>}> = [];\r\n            swapOrder.forEach(task => {\r\n                const currentList = groupedSwapOrder.find(item => item.todoListId === task.todoListId);\r\n                if (currentList) groupedSwapOrder.map(item => item.todoListId === currentList.todoListId ?\r\n                    item.swapOrder.push({swappedId: task.swappedId, beforeSwappedId: task.todoListId}) : item\r\n                );\r\n                groupedSwapOrder.push({\r\n                    todoListId: task.todoListId,\r\n                    swapOrder: [{swappedId: task.swappedId, beforeSwappedId: task.beforeSwappedId}]\r\n                })\r\n            });\r\n            const swapOrderPending = groupedSwapOrder.map(async (item) => {\r\n                const consistentSwapOrder = item.swapOrder\r\n                for (let order of consistentSwapOrder) {\r\n                    await api.swapTasks(item.todoListId, order.swappedId, order.beforeSwappedId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                }\r\n            });\r\n            await Promise.all(swapOrderPending)\r\n        }\r\n        dispatch(actions.setSwapState(false));\r\n\r\n\r\n        if (addedLists.length !== 0 || addedTasks.length !== 0) {\r\n            dispatch(getStateFromServer(false))\r\n        }\r\n    };\r\n\r\nexport default functionalReducer","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const TaskButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    width: 0rem;\r\n    height: 0rem;\r\n    transform: translateX(-70%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n    border-radius: 100%;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border: 1px solid #ca6a9a;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: rgba(202, 106, 154, 0.8);\r\n        color: white;\r\n    }\r\n    &:first-child:nth-last-child(2),\r\n        &:first-child:nth-last-child(2) ~ * { \r\n            &:nth-child(1) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                bottom: 0;\r\n            }\r\n        }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    deleteTask: () => void;\r\n    editTask: () => void\r\n}\r\n\r\nconst TaskButtons: React.FC<PropsType> = ({deleteTask, editTask}) => {\r\n\r\n    return (\r\n        <TaskButtonWrapper>\r\n            <Button onClick={editTask}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n            <Button onClick={deleteTask}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n        </TaskButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskButtons);\r\n\r\n","import React from \"react\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\n\r\nconst CheckboxWrapper = styled.div<{$editable: boolean}>`\r\n    width: 31px;\r\n    height:31px;\r\n    position: relative;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    opacity: ${props => props.$editable ? 0 : 1};\r\n    --background: #fff;\r\n    --border: #D1D6EE;\r\n    --border-hover: #BBC1E1;\r\n    --border-active: #1E2235;\r\n    --tick: #fff;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    z-index: 9;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    outline: none;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: box-shadow .3s;\r\n    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));\r\n    &:hover {\r\n        --s: 2px;\r\n        --b: var(--border-hover);\r\n    }\r\n    &:checked {\r\n        --b: var(--border-active);\r\n        --s: 2px;\r\n        transition-delay: .4s;\r\n        & + svg {\r\n            --a: 16.1 86.12;\r\n            --o: 102.22;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    z-index: 10;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    pointer-events: none;\r\n    fill: none;\r\n    stroke-width: 2px;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    stroke: var(--stroke, var(--border-active));\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    transform: scale(var(--scale, 1)) translateZ(0);\r\n    stroke-dasharray: var(--a, 86.12);\r\n    stroke-dashoffset: var(--o, 86.12);\r\n    transition: stroke-dasharray .6s, stroke-dashoffset .6s;\r\n`;\r\n\r\ntype PropsType = {\r\n    task: TaskType;\r\n    changeDoneStatus: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editable: boolean,\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskCheckbox: React.FC<PropsType> = ({task, changeDoneStatus, editable, palette}) => {\r\n\r\n    return (\r\n        <CheckboxWrapper $editable={editable}>\r\n            <Checkbox type=\"checkbox\" checked={task.status === 2} disabled={editable}\r\n                      onChange={(e) => changeDoneStatus(e)}/>\r\n            <Svg>\r\n                <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"/>\r\n            </Svg>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskCheckbox);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport TaskButtons, {TaskButtonWrapper} from \"./TaskButtons\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nconst TaskWrapper = styled(animated.div)<{ $editable: boolean}>`\r\n    position: relative;\r\n    padding: 10px 0;\r\n    text-align: left;\r\n    ${props => props.$editable &&\r\n    `&:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n           width: 4rem;\r\n           height: 4rem;\r\n     }`\r\n}\r\n`;\r\n\r\nconst TaskBackground = styled.div<{$palette: NeumorphColorsType, $editable: boolean, $editorState: boolean}>`\r\n    padding: 15px 0;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    display: flex;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    cursor: ${props => props.$editable ? \"grab\" : \"inherit\"};\r\n    z-index: 2;\r\n    transform: scale(${props => props.$editorState ? 1.3 : 1});\r\n    transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n    &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: -1;\r\n      box-shadow: ${props => props.$palette.littleShadows};\r\n      border: 3px solid transparent;\r\n      transition: border .3s linear;\r\n    };\r\n    ${props => props.$editable &&\r\n    `&:hover:before {\r\n         border: 3px solid ${props.$palette.background}\r\n    }`\r\n    }\r\n`;\r\n\r\nconst TaskText = styled.div`\r\n    padding: 10px;\r\n    outline: none;\r\n    display: inline-block;\r\n    min-width: 100px;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-break: after-white-space;\r\n    width: 100%;\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    task: TaskType,\r\n    todoListId: string,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTask: React.FC<PropsType> = React.memo(({task, todoListId, palette}) => {\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus, shallowEqual);\r\n\r\n    const [editorState, setEditorState] = useState<boolean>(false);\r\n    const editTask = () => {\r\n        setEditorState(true);\r\n        dispatch(actions.setFocusedStatus(true))\r\n    };\r\n\r\n    const textRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (editorState) textRef.current!.focus()\r\n    }, [editorState]);\r\n\r\n    const deleteTask = () => {\r\n        dispatch(actions.deleteTask(todoListId, task.id))\r\n    };\r\n\r\n    useLayoutEffect(() => {\r\n        textRef.current!.textContent = task.title;\r\n        if (task.title === '') editTask()\r\n    }, [task.title]);\r\n\r\n    const changeDoneStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newTask = {...task, status: e.currentTarget.checked ? 2 : 0};\r\n        dispatch(actions.changeTask(newTask))\r\n    };\r\n\r\n    const onBlurHandler = () => {\r\n        const taskTitle = textRef.current!.textContent;\r\n        console.log(validate(taskTitle))\r\n        if (validate(taskTitle)) {\r\n            let newTask = {...task, title: taskTitle!, editStatus: false};\r\n            dispatch(actions.changeTask(newTask));\r\n            setEditorState(false);\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else if (!validate(taskTitle) && task.title !== '') {\r\n            textRef.current!.textContent = task.title;\r\n            setEditorState(false);\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(actions.setFocusedStatus(false));\r\n            deleteTask()\r\n        }\r\n    };\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            textRef.current!.blur()\r\n        }\r\n    };\r\n\r\n    const priority = task.priority === 0 ? 'Low' : 1 ? 'Middle' : 2 ?\r\n        'High' : 3 ? 'Urgently' : 'Later';\r\n\r\n    return (\r\n        <TaskWrapper $editable={editable && !focusedStatus}>\r\n            <TaskButtons editTask={editTask} deleteTask={deleteTask}/>\r\n            <TaskBackground $editable={editable} $palette={palette} $editorState={editorState}>\r\n                <TaskCheckbox task={task} changeDoneStatus={changeDoneStatus} editable={editable} palette={palette}/>\r\n                <TaskText contentEditable={editorState} onKeyPress={e => onKeyPressHandler(e)}\r\n                          ref={textRef} onBlur={onBlurHandler}/>\r\n            </TaskBackground>\r\n        </TaskWrapper>\r\n\r\n    );\r\n})\r\n\r\nexport default TodoListTask;\r\n\r\n","\r\n\r\nexport const validate = (value: string | null): boolean => {\r\n    return true/*value !== '' && value !== null && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)*/\r\n    //maxlength 100\r\n};","import React, {RefObject, useEffect, useLayoutEffect, useMemo, useRef, useState} from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {animated, useSprings, useSpring} from \"react-spring\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {movePos} from \"../../hooks/movePos\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {clamp} from \"lodash-es\";\r\n\r\nconst TasksWrapper = styled.div<{ $height: number }>`\r\n  user-select: none;\r\n  position: relative;\r\n  height: ${props => props.$height}px;\r\n  transition: height 0.3s cubic-bezier(0.25, 0, 0, 1) 0.2s;\r\n`;\r\n\r\nconst TaskWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  overflow: visible;\r\n  pointer-events: auto;\r\n  text-align: center;\r\n  font-size: 14.5px;\r\n`;\r\n\r\ntype PropsType = {\r\n    todoListId: string;\r\n    tasks: TaskType[],\r\n    setHeight: (height: number) => void,\r\n    palette: NeumorphColorsType\r\n};\r\n\r\nconst TodoListTasks: React.FC<PropsType> = ({tasks, todoListId, setHeight, palette}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = (order: Array<number>, down?: boolean, originalIndex?: number, y?: number): any => (index: number) => {\r\n            if (down && index === originalIndex && y !== undefined) {\r\n                const calcY = y > bounds.current[1] ? bounds.current[1] + (y - bounds.current[1]) * 0.1 : y < bounds.current[0] ?\r\n                    bounds.current[0] + (y - bounds.current[0]) * 0.1 : y;\r\n                return {\r\n                    scale: 1.2,\r\n                    zIndex: 2,\r\n                    y: initialYofDragged.current! + calcY,\r\n                    opacity: 1,\r\n                    immediate: (prop: string): boolean => prop === 'zIndex' || prop === 'y',\r\n                }\r\n            } else return {\r\n                scale: 1,\r\n                y: initialY.current[order.indexOf(tasks.length-index-1)] || 0,\r\n                zIndex: 1,\r\n                opacity: 1,\r\n                immediate: false,\r\n            }\r\n        }\r\n    ;\r\n\r\n    const order = useRef<Array<number>>([]);\r\n    const initialYofDragged = useRef<number | null>(0);\r\n    const memoizedOrder = useRef<Array<number>>([]);\r\n    const memoizedTasksId = useRef<Array<string>>([]);\r\n    const initialY = useRef<Array<number>>([]);\r\n    const heights = useRef<Array<number>>([]);\r\n    const bounds = useRef<Array<number>>([]);\r\n    const elementsBorder = useRef<Array<{topBorder: number, center: number, bottomBorder: number}>>([]);\r\n    const elementsRef = useRef<Array<RefObject<HTMLDivElement>>>([]);\r\n    const [height, setCurrentHeight] = useState<number>(0)\r\n\r\n    const [springs, setSprings] = useSprings(tasks.length, settings(order.current), [tasks]);\r\n\r\n    const [forceRerender, rerender] = useState<number>(0);\r\n    useEffect(() => {\r\n        elementsRef.current = tasks.map(() => React.createRef());\r\n        rerender(forceRerender + 1);\r\n    }, [tasks]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (!editable && tasks.length !== 0) {\r\n            order.current = tasks.map((_, i) => i);\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n            calcPositions(heights.current);\r\n            setSprings(settings(order.current));\r\n        }\r\n        if (editable && tasks.length > memoizedTasksId.current.length) {\r\n            order.current = [0, ...order.current.map(item => item + 1)];\r\n            heights.current = [elementsRef.current[0].current!.offsetHeight, ...heights.current];\r\n            calcPositions(heights.current);\r\n            setSprings(settings(order.current));\r\n        }\r\n        if (editable && tasks.length < memoizedTasksId.current.length) {\r\n            const deletedTaskIndex = memoizedTasksId.current.findIndex(taskId => tasks.findIndex(item => item.id === taskId) === -1);\r\n            const deletedOrder = order.current.indexOf(deletedTaskIndex);\r\n            order.current = order.current.filter(index => index !== deletedTaskIndex)\r\n                .map(item => item > deletedTaskIndex ? item - 1 : item);\r\n            heights.current = heights.current.filter((_, index) => index !== deletedOrder);\r\n            calcPositions(heights.current);\r\n            setSprings(settings(order.current));\r\n        }\r\n        const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n        setCurrentHeight(heightsSum);\r\n        setHeight(heightsSum);\r\n        memoizedTasksId.current = tasks.map(item => item.id);\r\n    }, [forceRerender]);\r\n\r\n    const calcPositions = (heightsArray: Array<number>) => {\r\n        initialY.current = heightsArray.map((height, index) => {\r\n            return heightsArray.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += heightsArray[i - 1]\r\n                }\r\n                return total\r\n            }, 0)\r\n        });\r\n        elementsBorder.current = initialY.current.map((item, i) => ({\r\n            topBorder: item,\r\n            center: item + heightsArray[i]/2,\r\n            bottomBorder: item + heightsArray[i]\r\n        }));\r\n    }\r\n\r\n    const getNewIndex = (index: number, y: number) => {\r\n        if (y > 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (y > height + heights.current[index + 1] / 2) {\r\n                newIndex += 1;\r\n                height += heights.current[index + 1];\r\n            }\r\n            return newIndex > heights.current.length - 1 ? heights.current.length - 1 : newIndex;\r\n        }\r\n        if (y < 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (Math.abs(y) > height + heights.current[index - 1] / 2) {\r\n                newIndex -= 1;\r\n                height += heights.current[index - 1];\r\n            }\r\n            return newIndex < 0 ? 0 : newIndex;\r\n        }\r\n        return index\r\n    }\r\n\r\n    const gesture = useDrag(({args: [originalIndex, trueIndex], down, movement: [, y], event, first}) => {\r\n        event!.stopPropagation();\r\n        console.log(event, y)\r\n        const curIndex = order.current.indexOf(trueIndex);\r\n        if (first) {\r\n            initialYofDragged.current = initialY.current[curIndex];\r\n            bounds.current = [-initialYofDragged.current, initialY.current[tasks.length-1] - initialYofDragged.current];\r\n        }\r\n        if (!initialYofDragged.current) initialYofDragged.current = initialY.current[curIndex];\r\n        const curRow = getNewIndex(curIndex, y);//текущий новый индекс\r\n        const newOrder = movePos(order.current, curIndex, curRow);// новый порядок\r\n        const newHeights = movePos(heights.current, curIndex, curRow);//новый массив высот\r\n        calcPositions(newHeights);\r\n        setSprings(settings(newOrder, down, originalIndex, y));\r\n        if (!down) {\r\n            order.current = newOrder;\r\n            heights.current = newHeights;\r\n            initialYofDragged.current = null;\r\n            if (!isEqual(order.current, memoizedOrder.current)) {\r\n                const newOrder = order.current.map(item => tasks[item].id)\r\n                dispatch(actions.swapTasks(todoListId, newOrder))\r\n            }\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    return (\r\n        <TasksWrapper $height={height}>\r\n            {tasks.map((task, i) =>\r\n                <TaskWrapper {...editable && {...gesture(tasks.length-i-1, i)}} key={task.id} style={springs[tasks.length-i-1]}\r\n                             ref={elementsRef.current[i]}>\r\n                    <TodoListTask task={task} todoListId={todoListId} palette={palette}/>\r\n                </TaskWrapper>)}\r\n        </TasksWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTasks, isEqual);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef} from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\nimport {validate} from \"../../hooks/validate\";\r\n\r\nconst ListTitle = styled.div<{$palette: NeumorphColorsType, contentEditable: boolean}>`\r\n  background-image: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  position: relative;\r\n  font-size: 25px;\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  margin: 0 auto 10px auto;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  display: inline-block;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-break: after-white-space;\r\n  transform: scale(${props => props.contentEditable ? 1.3 : 1});\r\n  transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n  &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: ${props => props.$palette.innerShadows};\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    listTitle: string,\r\n    id: string,\r\n    switchTitleMode: () => void,\r\n    isTitleEditable: boolean,\r\n    palette: NeumorphColorsType,\r\n    deleteTodoList: () => void\r\n};\r\n\r\nconst TodoListTitle: React.FC<PropsType> = ({listTitle, id, isTitleEditable,\r\n                                                deleteTodoList, switchTitleMode, palette}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && isTitleEditable) {\r\n            ref.current.focus();\r\n            dispatch(actions.setFocusedStatus(true))\r\n        }\r\n    }, [isTitleEditable]);\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    useLayoutEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.textContent = listTitle;\r\n            if (listTitle === '') switchTitleMode()\r\n        }\r\n    }, [listTitle]);\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\" ) {\r\n            e.preventDefault();\r\n            ref.current!.blur()\r\n        }\r\n    };\r\n    const onBlurHandler = () => {\r\n        if (validate(ref.current!.textContent)) {\r\n            dispatch(actions.changeTodoListTitle(id, ref.current!.textContent!));\r\n            switchTitleMode();\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else if (!validate(ref.current!.textContent) && listTitle !== '') {\r\n            ref.current!.textContent = listTitle;\r\n            switchTitleMode();\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(actions.setFocusedStatus(false));\r\n            deleteTodoList()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ListTitle contentEditable={isTitleEditable} ref={ref} onKeyPress={e => onKeyPressHandler(e)}\r\n                   onBlur={onBlurHandler} $palette={palette}/>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTitle);\r\n\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 15px;\r\n    border-radius: 100%;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity .6s cubic-bezier(0.25, 0, 0, 1), width 0s linear .6s, height 0s linear .6s;\r\n`;\r\n\r\nexport const Button = styled.div<{ styles: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.styles.background};\r\n    color: ${props => props.styles.color};\r\n    box-shadow: ${props => props.styles.littleShadows};;\r\n    transform: translate(-50%, -50%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.styles.background};\r\n        color: ${props => props.styles.color};\r\n    }\r\n    &:first-child:nth-last-child(3),\r\n        &:first-child:nth-last-child(3) ~ * {\r\n            &:nth-child(1) {\r\n                left: 50px;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(3) {\r\n                left: 0;\r\n                top: 50px;\r\n            }\r\n        }\r\n`;\r\n\r\ntype PropsType = {\r\n    colors: NeumorphColorsType,\r\n    deleteTodoList: () => void,\r\n    addTask: () => void,\r\n    editList: () => void,\r\n};\r\n\r\nconst ContextButtons: React.FC<PropsType> = ({colors, deleteTodoList, addTask, editList}) => {\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Button styles={colors}\r\n                    onClick={addTask}>\r\n                <FontAwesomeIcon icon=\"plus\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={deleteTodoList}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={editList}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(ContextButtons);\r\n\r\n","import React, {useCallback, useRef, useState} from \"react\";\r\nimport TodoListTasks from '../tasks/TodoListTasks';\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useHover} from \"react-use-gesture\";\r\nimport ContextButtons, {ButtonWrapper} from \"./ContextButtons\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\n\r\nconst SingleListWrapper = styled.div`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 50%;\r\n  backface-visibility: hidden;\r\n  overflow: visible;\r\n  padding: 25px;\r\n  font-family: NunitoSans-Light;\r\n  &:hover {\r\n      z-index: 5;\r\n  }\r\n`;\r\n\r\nconst DetailsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 100%;\r\n  transform-origin: 50% 50%;\r\n  transform: rotateZ(-90deg) translateY(-50%);\r\n  transform-style: preserve-3d;\r\n  font-size: 25px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst SingleListBottomLayer = styled.div<{$palette: number, $editable: boolean, $closeLookState: boolean, $focusedStatus: boolean}>`\r\n  border-radius: 30px;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 100%;\r\n  padding: 25px;\r\n  background: ${props => neumorphColors[props.$palette].concaveBackground};\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  transition: transform .6s cubic-bezier(0.25, 0, 0, 1);\r\n  ${props => !props.$editable &&\r\n    `&:hover {\r\n        transform: translateZ(100px)\r\n  }`}\r\n  &:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      transition: border, opacity .3s linear;\r\n      box-shadow: ${props => neumorphColors[props.$palette].shadows};\r\n      opacity: ${props => props.$closeLookState ? 1 : 0};\r\n  };\r\n  &:hover:before {\r\n      border: 5px solid ${props => neumorphColors[props.$palette].background};\r\n      ${props => props.$editable && 'opacity: 1'}\r\n  };\r\n  &:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: 20px 20px 40px rgba(0, 0, 0, .4);\r\n      transition: opacity .3s linear;\r\n      opacity: ${props => !props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && '&:hover:after {opacity: 0}'}\r\n  ${props => props.$editable && !props.$focusedStatus &&\r\n    `&:hover ${ButtonWrapper},  ${ButtonWrapper}:focus-within {\r\n       width: 90px;\r\n       height: 90px;\r\n       opacity: 1;\r\n       transition: opacity .6s cubic-bezier(0.25, 0, 0, 1);\r\n    };`\r\n  }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    listTitle: string,\r\n    listTasks?: TaskType[],\r\n    paletteIndex: number,\r\n    setNewHeights: (height: number, id: string) => void,\r\n    deleteList: (id: string) => void,\r\n    closeLook: boolean\r\n};\r\n\r\nconst TodoList: React.FC<PropsType> = ({\r\n                                           id, listTitle, listTasks, paletteIndex,\r\n                                           setNewHeights, deleteList, closeLook\r\n                                       }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus, shallowEqual);\r\n\r\n    const currHeight = useRef<number>(0);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const setHeight = useCallback((height: number) => {\r\n        if (currHeight.current === 0 && ref.current) {\r\n            currHeight.current = ref.current.offsetHeight\r\n        }\r\n        if (currHeight.current !== height) {\r\n            setNewHeights(height+currHeight.current, id);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const [filterValue, setFilterValue] = useState<string>('All');\r\n\r\n    const changeFilter = (newFilterValue: string) => {\r\n        setFilterValue(newFilterValue)\r\n    };\r\n\r\n\r\n    const addTask = () => {\r\n        const taskId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newTask = {\r\n            title: '',\r\n            id: taskId,\r\n            todoListId: id,\r\n        }\r\n        dispatch(actions.addTask(newTask, id));\r\n    };\r\n\r\n    const deleteTodoList = useCallback(() => {\r\n        deleteList(id)\r\n        dispatch(actions.deleteTodoList(id))\r\n    }, []);\r\n\r\n    const tasks = listTasks ? listTasks.filter(t => {\r\n        if (filterValue === \"All\") {\r\n            return true;\r\n        }\r\n        if (filterValue === \"Active\") {\r\n            return t.status === 0;\r\n        }\r\n        if (filterValue === \"Completed\") {\r\n            return t.status === 2;\r\n        }\r\n    }) : [];\r\n\r\n    //hover Effect\r\n\r\n    const bind = useHover(({hovering}) => {\r\n        if (hovering) {\r\n            dispatch(actions.setPalette(neumorphColors[paletteIndex]));\r\n        }\r\n        if (!hovering) {\r\n            dispatch(actions.setPalette(defaultPalette));\r\n        }\r\n    });\r\n\r\n    //close look animations\r\n\r\n    const [isTitleEditable, setTitleEditMode] = useState<boolean>(false);\r\n    const switchTitleMode = useCallback(() => {\r\n        setTitleEditMode(!isTitleEditable)\r\n    }, [isTitleEditable]);\r\n\r\n    /*console.log(`${listTitle} render`)*/\r\n    return (\r\n        <SingleListWrapper {...!closeLook && {...bind()}} ref={ref}>\r\n            <SingleListBottomLayer $palette={paletteIndex} $editable={editable}\r\n                                   $closeLookState={closeLook} $focusedStatus={focusedStatus}>\r\n                <ContextButtons colors={neumorphColors[paletteIndex]} deleteTodoList={deleteTodoList}\r\n                                addTask={addTask} editList={switchTitleMode}/>\r\n                <TodoListTitle listTitle={listTitle} id={id} isTitleEditable={isTitleEditable} deleteTodoList={deleteTodoList}\r\n                               switchTitleMode={switchTitleMode} palette={neumorphColors[paletteIndex]}/>\r\n                <TodoListTasks todoListId={id} tasks={tasks} setHeight={setHeight} palette={neumorphColors[paletteIndex]}/>\r\n                {/* <TodoListFooter filterValue={filterValue} changeFilter={changeFilter}/>*/}\r\n                {/*<DetailsWrapper>\r\n                    more details...\r\n                </DetailsWrapper>*/}\r\n            </SingleListBottomLayer>\r\n        </SingleListWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoList, isEqual);\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated} from \"react-spring\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CloseButton = styled(animated.div)<{ $palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    box-shadow: ${props => props.$palette.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background: ${props => props.$palette.background};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n`;\r\n\r\nconst ClosingButton: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    return(\r\n        <CloseButton $palette={currentPalette}>\r\n            <FontAwesomeIcon icon=\"times\"/>\r\n        </CloseButton>\r\n    )\r\n};\r\n\r\nexport default ClosingButton","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {animated, useSprings, SpringStartFn, useSpring} from \"react-spring\";\r\nimport {swap} from \"../../hooks/swap\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport styled from \"styled-components/macro\";\r\nimport TodoList from \"./TodoList\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport ClosingButton from \"./CloseButton\";\r\n\r\n\r\nconst TodoListContainer = styled(animated.div)<{ $width: number }>` \r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  width: ${props => props.$width}px;\r\n`;\r\n\r\nconst CloseButtonAnimatedWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  border-radius: 100%;\r\n`;\r\n\r\ntype PropsType = {\r\n    setWrapperAnimation: SpringStartFn<{ x: string, rotateX: number, rotateZ: number, y: number, height: number }>,\r\n    width: number,\r\n    scrollByListDrugging: (direction: string) => void,\r\n    setCloseLookState: (height: number) => void,\r\n    returnFromCloseLookState: () => void,\r\n    switchScrollBar: (visibility: boolean) => void\r\n}\r\n\r\ntype GridItemsType = {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    id: string,\r\n    rightX: number,\r\n    botY: number,\r\n    horizontalCenter: number,\r\n    verticalCenter: number,\r\n    index: number,\r\n}\r\n\r\nconst MappedLists: React.FC<PropsType> = ({setWrapperAnimation, width, scrollByListDrugging,\r\n                                              setCloseLookState, returnFromCloseLookState, switchScrollBar}) => {\r\n//resize logic\r\n\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const todoLists = useSelector((store: AppStateType) => store.todoList.todoLists, isEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const columns = useMemo(() => {\r\n        return width >= 1700 ? 4 : width >= 1100 ? 3 : width >= 700 ? 2 : 1\r\n    }, [width]);\r\n    const currWidth = useMemo(() => width / columns, [width]);\r\n    useEffect(() => {\r\n        recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        });\r\n    }, [width, columns, currWidth]);\r\n\r\n\r\n// child height calculation logic\r\n    const temporaryValue = useRef<Array<{ height: number, id: string }>>([]);\r\n    const setNewHeights = useCallback((height: number, id: string) => {\r\n        const findHeight = temporaryValue.current.findIndex(item => item.id === id);\r\n        const newHeightsArray = findHeight === -1 ? [...temporaryValue.current, {height, id}]\r\n            : temporaryValue.current.map((item, i) => {\r\n                if (i === findHeight) return {height, id};\r\n                return item\r\n            });\r\n        temporaryValue.current = newHeightsArray\r\n        /*console.log(gridItems.current)*/\r\n        if (newHeightsArray.length === todoLists.length) {\r\n            /*console.log(gridItems.current, width, columns)*/\r\n            recalculateMeasures();\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y}\r\n            })\r\n        }\r\n    }, [todoLists, width, columns, currWidth,/*, newListsId*/])\r\n\r\n    const deleteList = useCallback((id: string) => {\r\n        temporaryValue.current = temporaryValue.current.filter(item => item.id !== id)\r\n    }, []);\r\n\r\n    const height = useRef<number>(0);\r\n    const gridItems = useRef<Array<GridItemsType>>([]);\r\n\r\n    const [springs, setSprings] = useSprings(todoLists.length, i => {\r\n        if (gridItems.current.length === 0) return {x: 0, y: 0, zIndex: 3, opacity: 1, display: 'block'};\r\n        const currentSettings = gridItems.current.find((list) => list.index === i);\r\n        return {\r\n            x: currentSettings ? currentSettings.x : 0,\r\n            y: currentSettings ? currentSettings.y : 0,\r\n            opacity: 1,\r\n            zIndex: 3,\r\n            display: 'block'\r\n        }\r\n    }, [todoLists])\r\n\r\n\r\n//swap animation logic\r\n    useEffect(() => {\r\n        if (!editable && gridItems.current.length === 0) {\r\n            const newHeights = new Array(columns).fill(0);\r\n            gridItems.current = todoLists.map(\r\n                (item, i) => {\r\n                    const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n                    const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n                    const column = i % columns;\r\n                    const x = currWidth * column;\r\n                    const y = (newHeights[column] += height) - height\r\n                    const rightX = x + currWidth;\r\n                    const botY = y + height;\r\n                    const horizontalCenter = x + currWidth / 2;\r\n                    const verticalCenter = y + height / 2;\r\n                    const index = i;\r\n                    return {x, y, height, id: item.id, botY, rightX, horizontalCenter, verticalCenter, index}\r\n                });\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(actions.setHeight(height.current));\r\n            setWrapperAnimation({height: height.current})\r\n        }\r\n        if (editable && gridItems.current.length < todoLists.length) {\r\n            gridItems.current = [{\r\n                x: 0, y: 0, height: 0, id: todoLists[0].id, botY: 0,\r\n                rightX: 0, horizontalCenter: 0, verticalCenter: 0, index: 0\r\n            }, ...gridItems.current].map((item, i) => {\r\n                if (i === 0) return item;\r\n                return {...item, index: item.index + 1}\r\n            })\r\n            recalculateMeasures()\r\n        }\r\n        if (editable && gridItems.current.length > todoLists.length) {\r\n            const deletedListIndex = gridItems.current.findIndex(item =>\r\n                todoLists.findIndex(list => list.id === item.id) === -1);\r\n            const deletedList = gridItems.current[deletedListIndex];\r\n            gridItems.current = gridItems.current.map((item) => {\r\n                const index = item.index > deletedList.index ? item.index - 1 : item.index;\r\n                return {...item, index}\r\n            }).filter((item, i) => i !== deletedListIndex);\r\n            recalculateMeasures()\r\n        }\r\n        if (gridItems.current.length === todoLists.length) recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n        console.log(gridItems.current);\r\n\r\n    }, [todoLists]);\r\n\r\n    const recalculateMeasures = () => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = gridItems.current.map((item, i) => {\r\n            const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n            const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += height) - height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter, height}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            setWrapperAnimation({height: height.current});\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }\r\n\r\n    const reorder = (oldIndex: number, newIndex: number) => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = swap(gridItems.current, oldIndex, newIndex).map((item, i) => {\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += item.height) - item.height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + item.height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + item.height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            setWrapperAnimation({height: height.current});\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }\r\n\r\n    const calculatePositions = (x: number, y: number) => {\r\n        const xPos = currItem.current.horizontalCenter + x;\r\n        const yPos = currItem.current.verticalCenter + y;\r\n        let i = gridItems.current.findIndex(item => {\r\n            if (item.x < xPos && item.rightX > xPos && item.y < yPos && item.botY > yPos) return true\r\n        });\r\n        return i < todoLists.length && i >= 0 ? i : null;\r\n    };\r\n\r\n    const setActualSprings = (x: number, y: number, springsIndex: number) => {\r\n        setSprings(i => {\r\n            if (i === springsIndex) {\r\n                return {\r\n                    x: currItem.current.x + x,\r\n                    y: currItem.current.y + y,\r\n                    zIndex: 4,\r\n                    immediate: (n: string): boolean => n === 'zIndex'\r\n                }\r\n            }\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    };\r\n\r\n    const currItem = useRef<GridItemsType>({\r\n        botY: 0,\r\n        height: 0,\r\n        horizontalCenter: 0,\r\n        id: \"\",\r\n        index: 0,\r\n        rightX: 0,\r\n        verticalCenter: 0,\r\n        x: 0,\r\n        y: 0\r\n    });\r\n    const bounds = useRef<{ left: number, right: number, top: number, bottom: number, pageTop: number, pageBottom: number }>({\r\n        left: 0, right: 0, top: 0, bottom: 0, pageTop: 0, pageBottom: 0\r\n    });\r\n    const eventCoords = useRef<{ offsetX: number, offsetY: number, clientX: number, clientY: number } | null>(null);\r\n    const virtualY = useRef<number>(0)\r\n\r\n    const getBounds = () => {\r\n        const left = -currItem.current.x - 25 + eventCoords.current!.offsetX;\r\n        const right = width - currItem.current.rightX + 25 + (width / columns - eventCoords.current!.offsetX);\r\n        const top = -currItem.current.y - 25 - eventCoords.current!.offsetY - 25;\r\n        const bottom = height.current - currItem.current.y - 25 - (currItem.current.height - (eventCoords.current!.offsetY + 25));\r\n        const pageTop = -eventCoords.current!.clientY - 25;\r\n        const pageBottom = window.innerHeight - eventCoords.current!.clientY - (currItem.current.height - 75 - eventCoords.current!.offsetY);\r\n        bounds.current = {left, right, top, bottom, pageTop, pageBottom}\r\n    }\r\n\r\n    const gesture = useDrag(({\r\n                                 args: [index, springsIndex], down, movement: [x, y],\r\n                                 active, first, event\r\n                             }) => {\r\n        event?.stopPropagation();\r\n        const draggedList = gridItems.current.findIndex(item => item.index === index);\r\n        if (first) {\r\n            currItem.current = gridItems.current[draggedList];\r\n            //@ts-ignore\r\n            eventCoords.current = {offsetX: event.offsetX, offsetY: event.offsetY, clientX: event.clientX, clientY: event.clientY};\r\n            getBounds();\r\n            virtualY.current = y;\r\n            console.log(bounds.current)\r\n        }\r\n        if (active) {\r\n            if (y > bounds.current.pageBottom) {\r\n                (async () => {\r\n                    while (virtualY.current < bounds.current.bottom) {\r\n                        const promise = new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                    scrollByListDrugging('bottom');\r\n                                    virtualY.current = virtualY.current + 5;\r\n                                    const newIndex = calculatePositions(x, virtualY.current);\r\n                                    if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                    setActualSprings(x, virtualY.current, springsIndex)\r\n                                    resolve()\r\n                                }\r\n                                , 5)\r\n                        });\r\n                        await promise\r\n                    }\r\n                })();\r\n            } else if (y < bounds.current.pageTop) {\r\n                (async () => {\r\n                    while (virtualY.current > bounds.current.top) {\r\n                        const promise = new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                                    scrollByListDrugging('top');\r\n                                    virtualY.current = virtualY.current - 5;\r\n                                    const newIndex = calculatePositions(x, virtualY.current);\r\n                                    if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                    setActualSprings(x, virtualY.current, springsIndex);\r\n                                    resolve()\r\n                                }\r\n                                , 5)\r\n                        });\r\n                        await promise\r\n                    }\r\n                })()\r\n            } else {\r\n                virtualY.current = y;\r\n                const newIndex = calculatePositions(x, virtualY.current);\r\n                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                setActualSprings(x, virtualY.current, springsIndex)\r\n            }\r\n        }\r\n        if (!down) {\r\n            eventCoords.current = null;\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y, zIndex: 3}\r\n            });\r\n            const newOrder = gridItems.current.map(item => item.id)\r\n            dispatch(actions.swapTodoLists(newOrder))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const [indexOfLookedList, setIndexOfLookedList] = useState<number | null>(null);\r\n    const closeLook = async (index: number) => {\r\n        if (editable || indexOfLookedList !== null) return;\r\n        const currItem = gridItems.current.find(item => item.index === index)!;\r\n        switchScrollBar(false);\r\n        dispatch(actions.setCloseLookState(true));\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-index) return {\r\n                to: async animate => {\r\n                    await animate({opacity: 0});\r\n                    await animate({display: 'none'})\r\n                }\r\n            };\r\n            return {to: false}\r\n        });\r\n        setWrapperAnimation({\r\n            height: window.innerHeight,\r\n            x: window.innerWidth <= 800 ? '5vw' : '15vw',\r\n            rotateX: 0,\r\n            rotateZ: 0,\r\n            y: 0,\r\n        });\r\n        setCloseLookState(currItem.height);\r\n        dispatch(actions.setPalette(neumorphColors[(todoLists.length-1-index) % neumorphColors.length]));\r\n        setIndexOfLookedList(index);\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-index) return {to: false};\r\n            return {\r\n                y: window.innerHeight / 2 - currItem.height / 2,\r\n                x: width / 2 - (width / columns) / 2\r\n            }\r\n        });\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({\r\n                    y: window.innerHeight / 2 - currItem.height / 2 - 60,\r\n                    x: width / 2 + (width / columns) / 2 + 20,\r\n                    display: 'block',\r\n                    immediate: true\r\n                });\r\n                await animate({opacity: 1, immediate: false})\r\n            }\r\n        })\r\n    };\r\n\r\n    const returnFromCloseLook = async () => {\r\n        switchScrollBar(false)\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({opacity: 0});\r\n                await animate({display: 'none'})\r\n            }\r\n        });\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-indexOfLookedList!) return {to: false};\r\n            const currItem = gridItems.current.find(item => item.index === indexOfLookedList)!\r\n            return {x: currItem.x, y: currItem.y}\r\n        });\r\n        dispatch(actions.setCloseLookState(false));\r\n        returnFromCloseLookState();\r\n        await setWrapperAnimation({\r\n            x: window.innerWidth <= 800 ? '-5vw' : '-15vw',\r\n            rotateX: 45,\r\n            rotateZ: 45,\r\n            y: 275,\r\n            height: height.current,\r\n            immediate: (prop) => prop === 'height'\r\n        });\r\n        dispatch(actions.setPalette(defaultPalette));\r\n        setIndexOfLookedList(null);\r\n        setSprings(i => {\r\n            if (i !== todoLists.length-1-indexOfLookedList!) return {opacity: 1, display: 'block'};\r\n            return {to: false}\r\n        });\r\n    };\r\n\r\n    const [closeButtonAnimation, setCloseButtonAnimation] = useSpring(() => ({\r\n        x: 0,\r\n        y: 0,\r\n        opacity: 0,\r\n        display: 'none'\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <CloseButtonAnimatedWrapper onClick={returnFromCloseLook} style={closeButtonAnimation}>\r\n                <ClosingButton/>\r\n            </CloseButtonAnimatedWrapper>\r\n            {todoLists.length !== 0 && todoLists.map((list, i) =>\r\n                <TodoListContainer\r\n                    style={springs[todoLists.length - i - 1]} {...editable && {...gesture(i, todoLists.length-i-1)}}\r\n                    onClick={() => closeLook(i)}\r\n                    $width={currWidth} key={list.id}>\r\n                    <TodoList id={list.id} paletteIndex={(todoLists.length-1-i) % neumorphColors.length}\r\n                              deleteList={deleteList} setNewHeights={setNewHeights} closeLook={i === indexOfLookedList}\r\n                              listTitle={list.title} listTasks={list.tasks}/>\r\n                </TodoListContainer>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MappedLists, isEqual)","export const swap = (arr: Array<any>, index1: number, index2: number) => arr.map((val, idx) => {\n    if (idx === index1) return arr[index2];\n    if (idx === index2) return arr[index1];\n    return val;\n});\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {initialization} from \"../../redux/functionalReducer\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from \"react-use-gesture\";\r\nimport MappedLists from \"./MappedLists\";\r\nimport {NeumorphColorsType, interfacePalette} from \"../neumorphColors\";\r\nimport {isMobile} from 'react-device-detect'\r\n\r\nconst AllLists = styled(animated.div)<{$editable: boolean, $closeLook: boolean}>`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  width: 70vw;\r\n  top: ${props => props.$editable && (window.innerHeight*0.22 <= 200 ? 200 : window.innerHeight*0.22) || 0}px;\r\n  @media screen and (max-width: 800px) {\r\n    transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n    top: ${props => props.$editable || props.$closeLook ? `${window.innerHeight*0.22 <= 200 ? 200 : window.innerHeight*0.22}px` : '-50vh'};\r\n    width: 90vw\r\n  }\r\n`;\r\n\r\nconst ScrollableWrapper = styled(animated.div)<{top: number}>`\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n  left: 50%;\r\n  top: ${props => props.top}px;\r\n  transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n  max-width: 2000px;\r\n`;\r\n\r\nconst ScrollBarWrapper = styled(animated.div)<{ $palette: NeumorphColorsType, $visible: boolean, $editable: boolean}>`\r\n  position: absolute;\r\n  width: 30px;\r\n  border-radius: 10px;\r\n  height: ${props => props.$editable ? (window.innerHeight*0.22 <= 200 ?\r\n    window.innerHeight-200 : window.innerHeight-window.innerHeight*0.22) : window.innerHeight}px;\r\n  top: ${props => props.$editable && (window.innerHeight*0.22 <= 200 ? 200 : window.innerHeight*0.22) || 0}px;\r\n  right: 0;\r\n  overflow: hidden;\r\n  transition: .6s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.progressBarColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ScrollBarThing = styled(animated.div)<{ $palette: NeumorphColorsType, $height: number, $drugged: boolean }>`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: ${props => props.$height}%;\r\n  border-radius: 10px;\r\n  transition: background-image 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$drugged ? interfacePalette.background : props.$palette.background};\r\n  &:before {\r\n      transition: opacity 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      border-radius: 10px;\r\n      background-color: ${props => props.$palette.default ? interfacePalette.background : 'rgba(0, 0, 0, 0.3)'};\r\n      opacity: 0;\r\n  }\r\n  &:hover:before {\r\n      opacity: 1;\r\n   }\r\n`;\r\n\r\n\r\nconst ScrollWrapper: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const height = useSelector((store: AppStateType) => store.todoList.height, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization());\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => setWidth(measuredRef.current!.offsetWidth), 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, []);\r\n\r\n    const [{border, scrollBarHeight}, setBorders] = useState({border: 0, scrollBarHeight: 0});\r\n    const [drugged, setDrugged] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [closeLook, setCloseLook] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        if (height < window.innerHeight) setVisible(false)\r\n        else setVisible(true);\r\n        const border = editable ? (height - window.innerHeight < 0 ? 0 : height - window.innerHeight + 275)\r\n            : (height - window.innerHeight < 0 ? 0.5 * height : height - window.innerHeight / 2);\r\n        const scrollBarHeight = !height ? 0 : (window.innerHeight - 275) / height * 100;\r\n        setBorders({border, scrollBarHeight})\r\n    }, [height, editable]);\r\n\r\n    const measuredRef = useRef<HTMLDivElement>(null);\r\n    const [width, setWidth] = useState<number>(0);\r\n\r\n    useLayoutEffect(() => {\r\n        setWidth(measuredRef.current!.offsetWidth)\r\n    }, []);\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        x: window.innerWidth <= 800 ? '-5vw' : '-15vw',\r\n        rotateX: 45,\r\n        rotateZ: 45,\r\n        y: 275,\r\n        height: 0,\r\n        config: {tension: 100, friction: 60, clamp: true},\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setWrapperAnimation({\r\n            x: editable ? (window.innerWidth <= 800 ? '5vw' : '15vw') : (window.innerWidth <= 800 ? '-5vw' : '-15vw'),\r\n            rotateX: editable ? 0 : 45,\r\n            rotateZ: editable ? 0 : 45,\r\n            y: editable ? 0 : 275,\r\n        })\r\n    }, [editable]);\r\n\r\n    //scroll logic\r\n    const scrolledY = useRef<number>(0);\r\n    const scrolledPercent = useRef<number>(0);\r\n    const memoizedData = useRef<Array<number>>([]);\r\n    const [scrollingAnimation, setScroll] = useSpring(() => ({\r\n        y: 0,\r\n        top: `0%`,\r\n        immediate: false\r\n    }));\r\n\r\n    const visibilityOfScrollBar = useSpring({\r\n        from: {opacity: 0, right: -50, display: 'none'},\r\n        to: async animate => {\r\n            await animate(visible ? {display: 'block'} : {opacity: 0, right: -50});\r\n            await animate(visible ? {opacity: 1, right: 0} : {display: 'none'})\r\n        }\r\n    });\r\n\r\n    useWheel(({delta: [, y]}) => {\r\n        if (!visible) return;\r\n        scrolledY.current = scrolledY.current + y < border && scrolledY.current + y > 0 ? scrolledY.current + y\r\n            : scrolledY.current + y <= 0 ? 0 : border;\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window});\r\n    useDrag(({offset: [, y], active, event}) => {\r\n        if (!isMobile || !visible) return;\r\n        event?.preventDefault();\r\n        if (active) {\r\n            const posY = -y;\r\n            scrolledY.current = posY < border && posY > 0 ? posY : posY <= 0 ? 0 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, {domTarget: window, filterTaps: true, eventOptions: {passive: false}});\r\n\r\n    //scroller\r\n    const bindDraggedScrollBar = useDrag(({delta: [, y], event, first, down}) => {\r\n        event?.stopPropagation();\r\n        if (first) setDrugged(true);\r\n        const absY = y / window.innerHeight * 100;\r\n        scrolledPercent.current = scrolledPercent.current + absY > 0 && scrolledPercent.current + absY < 100 - scrollBarHeight ?\r\n            scrolledPercent.current + absY : scrolledPercent.current + absY <= 0 ? 0 : 100 - scrollBarHeight;\r\n        scrolledY.current = border * scrolledPercent.current / (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`,\r\n            immediate: (prop) => prop === 'top'\r\n        });\r\n        if (!down) setDrugged(false)\r\n    });\r\n\r\n    const scrollByListDrugging = useCallback((direction: string) => {\r\n        if (direction === 'bottom' && scrolledY.current < border) {\r\n            scrolledY.current = scrolledY.current + 5 < border ? scrolledY.current + 5 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n        if (direction === 'top' && scrolledY.current > 0) {\r\n            scrolledY.current = scrolledY.current - 5 > 0 ? scrolledY.current - 5 : 0;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, [border, scrollBarHeight])\r\n\r\n    const setCloseLookState = useCallback((elementHeight: number) => {\r\n        const newBorder = elementHeight > window.innerHeight - (isMobile ? 100 : 250) ?\r\n            elementHeight - (window.innerHeight - (isMobile ? 100 : 250)) : 0;\r\n        if (newBorder > 0) {\r\n            memoizedData.current = [scrolledY.current, scrolledPercent.current, border, scrollBarHeight];\r\n            const newScrollBarHeight = (window.innerHeight - (isMobile ? 100 : 250)) / elementHeight * 100;\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight})\r\n            scrolledY.current = 0;\r\n            scrolledPercent.current = 0;\r\n            setScroll({\r\n                y: 0,\r\n                top: `${0}%`\r\n            });\r\n            setVisible(true);\r\n        }\r\n        setCloseLook(true);\r\n    }, [border, scrollBarHeight])\r\n\r\n    const returnFromCloseLookState = useCallback(() => {\r\n        if (memoizedData.current.length !== 0) {\r\n            scrolledY.current = memoizedData.current[0];\r\n            scrolledPercent.current = memoizedData.current[1];\r\n            setBorders({border: memoizedData.current[2], scrollBarHeight: memoizedData.current[3]})\r\n            setScroll({\r\n                y: -memoizedData.current[0],\r\n                top: `${memoizedData.current[1]}%`\r\n            });\r\n        }\r\n        setVisible(true);\r\n        setCloseLook(false)\r\n    }, [])\r\n\r\n    const switchScrollBar = useCallback((visibility: boolean) => setVisible(visibility), []);\r\n\r\n    return (\r\n        <>\r\n            <AllLists style={wrapperAnimation} $editable={editable} $closeLook={closeLook}>\r\n                <ScrollableWrapper style={{y: scrollingAnimation.y,  translateX: '-50%'}} ref={measuredRef}\r\n                top={closeLook && visible && isMobile ? 50 : closeLook && visible && !isMobile ? 125 : 25}>\r\n                    <MappedLists setWrapperAnimation={setWrapperAnimation} width={width}\r\n                                 scrollByListDrugging={scrollByListDrugging} setCloseLookState={setCloseLookState}\r\n                                 returnFromCloseLookState={returnFromCloseLookState} switchScrollBar={switchScrollBar}/>\r\n                </ScrollableWrapper>\r\n            </AllLists>\r\n            <ScrollBarWrapper $palette={currentPalette} $visible={visible} style={visibilityOfScrollBar} $editable={editable}>\r\n                <ScrollBarThing $palette={currentPalette} $drugged={drugged}\r\n                                style={{top: scrollingAnimation.top}} {...!isMobile && {...bindDraggedScrollBar()}}\r\n                                $height={scrollBarHeight}/>\r\n            </ScrollBarWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollWrapper;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {neumorphColors} from \"./neumorphColors\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst Background = styled(animated.div)` \r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AnimatedBackground:React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    const [animateBackground, setBackground] = useSpring(() => ({\r\n        background: currentPalette.background\r\n    }));\r\n    useEffect(() => {\r\n        setBackground({background: currentPalette.background})\r\n    }, [currentPalette])\r\n\r\n    return <Background style={animateBackground}/>\r\n}\r\n\r\nexport default AnimatedBackground;\r\n\r\n","import React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {actions, initialization, submitAllChanges} from \"../redux/functionalReducer\";\r\nimport {animated, useSpring, useTransition} from \"react-spring\";\r\nimport {interfacePalette, NeumorphColorsType} from \"./neumorphColors\";\r\n\r\nconst RotatedBackground = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n   position: absolute;\r\n   z-index: 998;\r\n   background-color: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n   width: 300%;\r\n   min-height: 200px;\r\n   transform-origin: 50% 0;\r\n   left: -150%;\r\n   transition: background-color 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n   box-shadow: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n   &:before {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      background-color: ${props => props.$palette.default ? interfacePalette.background : 'rgba(0, 0, 0, 0.3)'};\r\n   }\r\n`;\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  font-family: NunitoSans-ExtraLight, sans-serif;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n  min-width: 150px;\r\n  min-height: 150px;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  position: absolute;\r\n  width: 16vw;\r\n  height: 16vw;\r\n  max-width: 210px;\r\n  min-width: 130px;\r\n  max-height: 210px;\r\n  min-height: 130px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst EditButton = styled.div<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 15vw;\r\n  height: 15vw;\r\n  max-width: 210px;\r\n  min-width: 130px;\r\n  max-height: 210px;\r\n  min-height: 130px;\r\n  border-radius: 50%;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.shadows : props.$palette.shadows} ;\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n`;\r\n\r\nconst ProgressBackground = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  background-color: red;\r\n  position: absolute;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Progress = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  background-color: black;\r\n`;\r\n\r\nconst InnerBackground = styled.div<{ $palette: NeumorphColorsType, $altBackground: boolean }>`\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  position: absolute;\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 50%;\r\n  /*transition: 0.3s cubic-bezier(0.25, 0, 0, 1);*/\r\n  ${props => !props.$altBackground &&\r\n    `&:hover {\r\n        background: ${props.$palette.background};\r\n        color: ${props.$palette.color};\r\n  }`}\r\n`;\r\n\r\n//calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));\r\nconst InnerEditButtonText = styled(animated.div)`\r\n  z-index: 12;\r\n  text-align: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  font-size: calc(15px + (50 - 15) * ((100vw - 100px) / (1200 - 100)));\r\n`;\r\n\r\nconst SmallerButton = styled.div<{ $palette: NeumorphColorsType, $editable: boolean }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 2;\r\n  width: 7vw;\r\n  height: 7vw;\r\n  max-width: 105px;\r\n  min-width: 70px;\r\n  max-height: 105px;\r\n  min-height: 70px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: ${props => props.$editable ? '-20%' : '50%'};\r\n  transition: left 0.4s cubic-bezier(0.25, 0, 0, 1) 0.3s, background, color 0.4s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst MediumButton = styled(animated.div)<{ $palette: NeumorphColorsType, $editable: boolean }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: 10vw;\r\n  height: 10vw;\r\n  max-width: 160px;\r\n  min-width: 100px;\r\n  max-height: 160px;\r\n  min-height: 100px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: ${props => props.$editable ? '130%' : '50%'};\r\n  transition: left 0.4s cubic-bezier(0.25, 0, 0, 1) 0.3s, background, color 0.4s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst InnerSmallerButtonText = styled.div`\r\n  text-align: center;\r\n  font-size: calc(10px + (20 - 10) * ((100vw - 50px) / (1200 - 50)));\r\n`;\r\n\r\nconst MainInterface = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n    const pendingState = useSelector((state: AppStateType) => state.todoList.pendingState, shallowEqual);\r\n    const initialLoading = useSelector((state: AppStateType) => state.todoList.initialLoadingState, shallowEqual);\r\n    const swapState = useSelector((state: AppStateType) => state.todoList.swapState, shallowEqual);\r\n    const allTasks = useSelector((state: AppStateType) => state.todoList.allTasks, shallowEqual);\r\n    const completedTasks = useSelector((state: AppStateType) => state.todoList.completedTasks, shallowEqual);\r\n    const fetching = useSelector((state: AppStateType) => state.todoList.fetchingState, shallowEqual);\r\n    const closeLook = useSelector((state: AppStateType) => state.todoList.closeLookState, shallowEqual);\r\n\r\n    const switchEditMode = () => {\r\n        if (!editable) dispatch(actions.enableEditMode());\r\n        if (editable) dispatch(submitAllChanges());\r\n    };\r\n\r\n    const [height, setHeight] = useState<number>(window.innerHeight)\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => setHeight(window.innerHeight), 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, []);\r\n\r\n    const addTodoList = () => {\r\n        const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (r = Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newList = {\r\n            id,\r\n            title: '',\r\n            tasks: []\r\n        }\r\n        dispatch(actions.addTodoList(newList));\r\n    };\r\n\r\n    const rejectAllChanges = () => {\r\n        dispatch(actions.rejectAllChanges())\r\n    };\r\n\r\n    //animation logic\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        height: '100%',\r\n        width: '100%',\r\n        backgroundHeight: '150%',\r\n        rotateZ: -35\r\n    }));\r\n\r\n    const [progressBarrAnimation, setProgressBar] = useSpring(() => ({\r\n        clipPath1: `polygon( 50% 0%, 100% 0%, 100% 200%, 50% 200%)`,\r\n        clipPath2: `polygon( 0% 0%, 50% 0%, 50% 200%, 0% 200%)`,\r\n        opacity: 1\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const progress = allTasks === 0 ? 0 : completedTasks / allTasks;\r\n        const progress1 = 200 - (200 - progress * 200);\r\n        const progress2 = 200 - progress * 200;\r\n        setProgressBar(() => {\r\n            if (progress === 1) return {\r\n                to: async animate => {\r\n                    await animate({\r\n                        clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n                        clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`\r\n                    });\r\n                    await animate({opacity: 0})\r\n                }\r\n            }\r\n            return {\r\n                clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n                clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`,\r\n                opacity: 1,\r\n                immediate: (props) => props === 'opacity'\r\n            }\r\n        })\r\n    }, [allTasks, completedTasks]);\r\n\r\n    useEffect(() => {\r\n        if (!initialLoading && !editable) {\r\n            setSpring({\r\n                height: '20%',\r\n                width: '20%',\r\n                backgroundHeight: '25%',\r\n                rotateZ: -35,\r\n                config: {friction: 50}\r\n            })\r\n        } else if (editable) {\r\n            setSpring({\r\n                backgroundHeight: '22%',\r\n                height: '20%',\r\n                width: '100%',\r\n                rotateZ: 0,\r\n            })\r\n        } else if (closeLook) {\r\n            setSpring({\r\n                height: '20%',\r\n                width: '20%',\r\n                rotateZ: 0,\r\n            })\r\n        }\r\n    }, [editable, pendingState, initialLoading, swapState, fetching, closeLook]);\r\n\r\n    const actionMessage = useMemo(() =>\r\n            initialLoading ? 'Loading' : editable ? 'Submit' : pendingState ? 'Sending data'\r\n                : 'Edit'\r\n        , [editable, pendingState, initialLoading, swapState, fetching]);\r\n\r\n    const textTransition = useTransition(actionMessage, {\r\n        from: {opacity: 1, y: '-100%'},\r\n        enter: {opacity: 1, y: '0%'},\r\n        leave: {opacity: 0, y: '100%'},\r\n\r\n    })\r\n\r\n    /*console.log('interface render')*/\r\n\r\n    return (\r\n        <>\r\n            <RotatedBackground $palette={currentPalette} style={{\r\n                height: spring.backgroundHeight,\r\n                rotateZ: spring.rotateZ /*translateX: '-50%'*/\r\n            }}/>\r\n            <Wrapper style={{width: spring.width, height: spring.height}}>\r\n                <ButtonsWrapper>\r\n                    <EditButton onClick={switchEditMode} $palette={currentPalette}>\r\n                        <ProgressBackground style={{opacity: progressBarrAnimation.opacity}}>\r\n                            <Progress style={{clipPath: progressBarrAnimation.clipPath1}}/>\r\n                            <Progress style={{clipPath: progressBarrAnimation.clipPath2}}/>\r\n                        </ProgressBackground>\r\n                        <InnerBackground $palette={currentPalette}\r\n                                         $altBackground={pendingState || initialLoading || swapState || fetching}>\r\n                            {textTransition((style) =>\r\n                                <InnerEditButtonText style={{...style, translateY: '-50%'}}>\r\n                                    {actionMessage}\r\n                                </InnerEditButtonText>)}\r\n                        </InnerBackground>\r\n                    </EditButton>\r\n                    <SmallerButton onClick={addTodoList} $palette={currentPalette} $editable={editable}>\r\n                        <InnerSmallerButtonText>\r\n                            Add list\r\n                        </InnerSmallerButtonText>\r\n                    </SmallerButton>\r\n                    <MediumButton onClick={rejectAllChanges} $palette={currentPalette} $editable={editable}>\r\n                        <InnerSmallerButtonText>\r\n                            remove changes\r\n                        </InnerSmallerButtonText>\r\n                    </MediumButton>\r\n                </ButtonsWrapper>\r\n            </Wrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MainInterface","import React from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollWrapper from \"./todolists/ScrollWrapper\";\r\nimport AnimatedBackground from \"./AnimatedBackground\";\r\nimport MainInterface from \"./MainInterface\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n      box-sizing: border-box;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      touch-action: none;\r\n    };\r\n  body {\r\n    background-color: white;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    outline: none;\r\n    &::-webkit-scrollbar { \r\n      display: none;\r\n    };\r\n  };\r\n  html {\r\n    -ms-overflow-style: none; \r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <AnimatedBackground/>\r\n            <Wrapper>\r\n                <MainInterface/>\r\n                <ScrollWrapper/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport functionalReducer from \"./functionalReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: functionalReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport './App.css';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n/// <reference types=\"react-dom/experimental\"\r\n/*ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));*/\r\n\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n// @ts-ignore\r\nReactDOM.unstable_createRoot(root).render( <Provider store={store}>\r\n    <App/>\r\n</Provider>);\r\n\r\n"],"sourceRoot":""}