{"version":3,"sources":["Components/MainInterface/AnimatedBackground.tsx","Components/neumorphColors.ts","Components/MainInterface/RotatedBackground.tsx","Components/MainInterface/InterfaceWrapper.tsx","Components/MainInterface/EditButton.tsx","Components/MainInterface/OtherButtons.tsx","redux/api.ts","hooks/movePos.ts","redux/interfaceReducer.ts","redux/stateReducer.ts","Components/MainInterface/MainInterfaceContainer.tsx","Components/AppAnimatedWrappers/ScrollableElements/ScrollBar.tsx","Components/AppAnimatedWrappers/ScrollableElements/ScrollableWrapper.tsx","Components/Tasks/TaskButtons.tsx","hooks/validate.ts","Components/Tasks/TaskCheckbox.tsx","Components/Tasks/TodoListTask.tsx","Components/Tasks/TasksContainer.tsx","Components/SingleToDoList/TodoListTitle.tsx","Components/SingleToDoList/ContextButtons.tsx","Components/SingleToDoList/TodoList.tsx","Components/AppAnimatedWrappers/DruggedLists/CloseButton.tsx","Components/AppAnimatedWrappers/DruggedLists/AllListsContainer.tsx","hooks/swap.ts","Components/AppAnimatedWrappers/ScrollableElements/ScrollContainer.tsx","Components/App.tsx","redux/store.ts","index.tsx"],"names":["library","add","far","fas","Background","styled","animated","div","withConfig","displayName","componentId","AnimatedBackground","currentPalette","useSelector","store","interface","currentPaletteIndex","shallowEqual","_useSpring","useSpring","background","_useSpring2","Object","slicedToArray","animateBackground","setBackground","useEffect","react_default","a","createElement","style","neumorphColors","concaveBackground","shadows","innerShadows","littleShadows","innerLittleShadows","progressBarColor","progressBarHoverColor","color","defaultPalette","default","props","$palette","InnerShadow","React","memo","_ref","palette","height","rotateZ","x","RotatedBackground_Background","isEqual","WholeWrapper","ButtonsWrapper","$height","InterfaceWrapper","width","children","interfaceHeight","EditButtonWrapper","ProgressBackground","InnerBackground","$cantBeHovered","InnerEditButtonText","ProgressCounter","switchEditMode","cantBeHovered","actionMessage","progressBarAnimation","textTransition","useTransition","from","opacity","y","enter","leave","onClick","value","to","toFixed","objectSpread2","translateY","RightButton","$editable","LeftButton","AdditionalButton","InnerSmallerButtonText","editable","switchScrollableState","addTodoList","rejectAllChanges","Fragment","isMobile","instance","axios","create","baseURL","withCredentials","headers","API-KEY","axiosRetry","retries","loginInstance","api","get","then","res","data","post","email","password","rememberMe","title","todoListId","concat","taskId","newTask","put","delete","newTitle","swappedTask","beforeSwappedTask","putAfterItemId","swappedList","beforeSwappedList","movePos","array","moveIndex","toIndex","item","length","diff","toConsumableArray","slice","initialState","focusedStatus","initialLoadingState","pendingState","swapState","fetchingState","allTasks","completedTasks","closeLookState","scrollableState","interfaceActions","status","type","tasks","restore","state","interfaceReducer","arguments","undefined","action","todoLists","deepCopy","listsOrder","tasksOrder","newListsId","newTasksId","stateActions","newTodoList","task","todoListTitle","newTasksOrder","newListsOrder","newTodoLists","getStateFromServer","initial","dispatch","lists","listsWithTasks","getTasks","regenerator_default","async","_context3","prev","next","awrap","sent","map","_context2","id","index","findIndex","list","items","abrupt","stop","Promise","all","setTimeout","stateReducer","filter","newSwappedTasks","i","cloneDeep","MainInterfaceContainer","useDispatch","todoList","initialLoading","fetching","closeLook","_useState","useState","_useState2","buttonsWrapperHeight","setButtonsHeight","isMounted","timeoutId","getHeight","getButtonHeight","window","innerHeight","Math","sqrt","pow","innerWidth","buttonHeight","resizeListener","clearTimeout","newHeight","newButtonHeight","addEventListener","removeEventListener","useCallback","replace","c","r","random","toString","getState","oldTodoLists","todoListsWithNewId","addedLists","deletedLists","editedLists","addedTasks","editedTasks","deletedTasks","createAndChangeIdOfTasksInOrderList","listPromises","currentOrder","swapOrder","addedTasksInLists","currentListsStateOnServer","requiredOrder","_currentOrder","_swapOrder","groupedSwapOrder","swapOrderPending","_context10","oldList","newList","forEach","find","push","oldTask","resultCode","tasksPromises","_context5","_context4","newId","oldId","tasksWithNewId","_context6","newListId","t0","thisListPosId","swappedId","beforeSwappedId","oldIndex","listId","currentList","listsToUpdate","listsOnServer","getListOrder","_context8","_context7","t1","currItem","orderFromCurrentState","itemWithUpdatedState","curItem","newOrder","currOrder","newTaskPosId","consistentSwapOrder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_order","_context9","Symbol","iterator","done","order","return","finish","backgroundHeight","spring","setSpring","_useSpring3","_useSpring4","setProgressBar","isNaN","animate","_context","delay","prop","config","friction","useMemo","MainInterface_RotatedBackground","MainInterface_InterfaceWrapper","MainInterface_EditButton","MainInterface_OtherButtons","ScrollBarWrapper","$interfaceHeight","ScrollBarThing","$drugged","bindDraggedScrollBar","scrollBarHeight","visible","drugged","top","visibilityOfScrollBar","$visible","assign","AllLists","$closeLook","ScrollWrapper","$top","ScrollableWrapper","wrapperAnimation","measuredRef","translateX","ref","TaskButtonWrapper","Button","deleteTask","editTask","onEditClickHandler","useDrag","_ref2","tap","event","stopPropagation","onDeleteClickHandler","_ref3","react_fontawesome_index_es","icon","validate","test","CheckboxWrapper","Checkbox","input","Svg","svg","changeDoneStatus","checked","disabled","onChange","e","d","TaskWrapper","$editorState","TaskBackground","TaskText","contentEditable","editorState","setEditorState","textRef","useRef","current","focus","useLayoutEffect","textContent","currentTarget","onBlurHandler","taskTitle","onKeyDownHandler","keyCode","preventDefault","blur","captureClick","Tasks_TaskButtons","Tasks_TaskCheckbox","onKeyDown","onBlur","TasksWrapper","setHeight","setHoveredStatus","settings","down","originalIndex","calcY","bounds","scale","zIndex","initialYofDragged","immediate","initialY","indexOf","memoizedOrder","memoizedTasksId","heights","elementsBorder","elementsRef","setCurrentHeight","_useSprings","useSprings","_useSprings2","springs","setSprings","_useState3","_useState4","forceRerender","rerender","createRef","calcPositions","heightsArray","reduce","total","topBorder","center","bottomBorder","_","offsetHeight","deletedTaskIndex","deletedOrder","heightsSum","sum","console","log","getNewIndex","newIndex","abs","gesture","_ref2$args","args","trueIndex","movement","curIndex","curRow","newHeights","filterTaps","hovering","useHover","TasksContainer_TaskWrapper","key","Tasks_TodoListTask","ListTitle","listTitle","isTitleEditable","deleteTodoList","switchTitleMode","onKeyPressHandler","ButtonWrapper","styles","colors","addTask","editList","ContextButtons_Button","SingleListWrapper","$closeLookState","ListOuterLayer","ListShadow","$focusedStatus","$isTasksHovered","ListInnerLayer","listTasks","paletteIndex","setNewHeights","deleteList","isTasksHovered","setTasksHoveredStatus","currHeight","filterValue","t","bind","_useState5","_useState6","setTitleEditMode","SingleToDoList_ContextButtons","SingleToDoList_TodoListTitle","Tasks_TasksContainer","CloseButtonAnimatedWrapper","CloseButton","closeButtonAnimation","returnFromCloseLook","TodoListContainer","$width","setWrapperAnimation","scrollByListDrugging","setCloseLookState","returnFromCloseLookState","switchScrollBar","gridItems","display","currentSettings","columns","currWidth","recalculateMeasures","Array","fill","heightInMeasuredArray","temporaryValue","column","rightX","botY","horizontalCenter","verticalCenter","max","apply","findHeight","newHeightsArray","deletedListIndex","deletedList","reorder","arr","index1","index2","val","idx","calculatePositions","xPos","yPos","halfHeight","setActualSprings","springsIndex","tension","clamp","n","left","right","bottom","pageTop","pageBottom","eventCoords","virtualY","addedY","getBounds","offsetX","offsetY","clientY","_ref2$movement","active","first","draggedList","clientX","awaitScroll","promise","resolve","setCloseButtonAnimation","indexOfLookedList","setIndexOfLookedList","rotateX","DruggedLists_CloseButton","SingleToDoList_TodoList","ScrollContainer","offsetWidth","border","_useState2$","setBorders","setDrugged","setVisible","scrolledY","scrolledPercent","addedScrollConst","memoizedData","scrollingAnimation","setScroll","newScrollBarHeight","newBorder","useWheel","delta","domTarget","swipeY","swipe","scrolledHeight","posY","eventOptions","passive","absY","direction","elementHeight","visibility","ScrollableElements_ScrollableWrapper","DruggedLists_AllListsContainer","ScrollableElements_ScrollBar","GlobalStyles","createGlobalStyle","_templateObject","Wrapper","App","reloadFunction","document","location","reload","MainInterface_AnimatedBackground","MainInterface_MainInterfaceContainer","ScrollableElements_ScrollContainer","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","root","getElementById","ReactDOM","unstable_createRoot","render","es","Components_App"],"mappings":"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","file":"static/js/main.de62dafe.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst Background = styled(animated.div)` \r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AnimatedBackground:React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.interface.currentPaletteIndex, shallowEqual);\r\n\r\n    const [animateBackground, setBackground] = useSpring(() => ({\r\n        background: currentPalette.background\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setBackground({background: currentPalette.background})\r\n    }, [currentPalette, setBackground])\r\n\r\n    return <Background style={animateBackground}/>\r\n}\r\n\r\nexport default AnimatedBackground;\r\n\r\n","\r\nexport const neumorphColors: Array<NeumorphColorsType> = [\r\n    {\r\n        background: '#F9DCC4',\r\n        concaveBackground: 'linear-gradient(145deg, #e0c6b0, #ffebd2)',\r\n        shadows: '14px 14px 35px #c2ac99, -14px -14px 35px #ffffef',\r\n        innerShadows: 'inset 14px 14px 35px #c2ac99, inset -14px -14px 35px #ffffef',\r\n        littleShadows: '5px 5px 10px #c2ac99, -5px -5px 10px #ffffef',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c2ac99, inset -5px -5px 10px #ffffef',\r\n        progressBarColor: '#ffffef',\r\n        progressBarHoverColor: '#c2ac99',\r\n        color: '#141718'\r\n    },\r\n    {\r\n        background: '#F8EDEB',\r\n        concaveBackground: 'linear-gradient(145deg, #dfd5d4, #fffefb)',\r\n        shadows: '14px 14px 35px #c1b9b7, -14px -14px 35px #ffffff',\r\n        innerShadows: 'inset 14px 14px 35px #c1b9b7, inset -14px -14px 35px #ffffff',\r\n        littleShadows: '5px 5px 10px #c1b9b7, -5px -5px 10px #ffffff',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c1b9b7, inset -5px -5px 10px #ffffff',\r\n        progressBarColor: '#ffffff',\r\n        progressBarHoverColor: '#c1b9b7',\r\n        color: '#141718'\r\n    },\r\n    {\r\n        background: '#FCD5CE',\r\n        concaveBackground: 'linear-gradient(145deg, #e3c0b9, #ffe4dc)',\r\n        shadows: '14px 14px 35px #c5a6a1, -14px -14px 35px #fffffb',\r\n        innerShadows: 'inset 14px 14px 35px #c5a6a1, inset -14px -14px 35px #fffffb',\r\n        littleShadows: '5px 5px 10px #c5a6a1, -5px -5px 10px #fffffb',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c5a6a1, inset -5px -5px 10px #fffffb',\r\n        progressBarColor: '#fffffb',\r\n        progressBarHoverColor: '#c5a6a1',\r\n        color: '#141718'\r\n    },\r\n    {\r\n        background: '#FFB5A7',\r\n        concaveBackground: 'linear-gradient(145deg, #e6a396, #ffc2b3)',\r\n        shadows: '14px 14px 35px #c78d82, -14px -14px 35px #ffddcc',\r\n        innerShadows: 'inset 14px 14px 35px #c78d82, inset -14px -14px 35px #ffddcc',\r\n        littleShadows: '5px 5px 10px #c78d82, -5px -5px 10px #ffddcc',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c78d82, inset -5px -5px 10px #ffddcc',\r\n        progressBarColor: '#ffddcc',\r\n        progressBarHoverColor: '#c78d82',\r\n        color: '#141718'\r\n    }\r\n];\r\n\r\n/*export const defaultPalette: NeumorphColorsType = {\r\n    background: '#FDA85D',\r\n    concaveBackground: 'linear-gradient(145deg, #e49754, #ffb464)',\r\n    shadows: '14px 14px 35px #c58349, -14px -14px 35px #ffcd71',\r\n    innerShadows: 'inset 14px 14px 35px #c58349, inset -14px -14px 35px #ffcd71',\r\n    littleShadows: '5px 5px 10px #c58349, -5px -5px 10px #ffcd71',\r\n    color: '#141718',\r\n    innerLittleShadows: 'inset 5px 5px 10px #c58349, inset -5px -5px 10px #ffcd71',\r\n    progressBarColor: '#ffcd71',\r\n    progressBarHoverColor: '#c58349',\r\n    default: true\r\n};*/\r\n\r\nexport const defaultPalette: NeumorphColorsType = {\r\n    background: '#EAE8DE',\r\n    concaveBackground: ' linear-gradient(145deg, #d3d1c8, #faf8ee)',\r\n    shadows: '14px 14px 35px #b9b7af, -14px -14px 35px #ffffff',\r\n    innerShadows: 'inset 14px 14px 35px #b9b7af, inset -14px -14px 35px #ffffff',\r\n    littleShadows: '5px 5px 10px #b9b7af, -5px -5px 10px #ffffff',\r\n    color: '#141718',\r\n    innerLittleShadows: 'inset 5px 5px 10px #b9b7af, inset -5px -5px 10px #ffffff',\r\n    progressBarColor: '#ffffff',\r\n    progressBarHoverColor: '#b9b7af',\r\n    default: true\r\n};\r\n\r\nexport type NeumorphColorsType = {\r\n    background: string,\r\n    concaveBackground: string,\r\n    shadows: string,\r\n    innerShadows: string,\r\n    littleShadows: string,\r\n    innerLittleShadows: string,\r\n    progressBarColor: string,\r\n    progressBarHoverColor: string,\r\n    color: string,\r\n    default?: boolean\r\n};","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst Background = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n   position: absolute;\r\n   z-index: 998;\r\n   background-color: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n   width: 300%;\r\n   transform-origin: 50% 0;\r\n   left: -150%;\r\n   transition: background-color 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n   box-shadow: ${props => props.$palette.default ? defaultPalette.shadows : props.$palette.shadows};\r\n`;\r\n\r\nconst InnerShadow = styled.div<{ $palette: NeumorphColorsType }>`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  width: 100%;\r\n  height: calc(100% - 10px);\r\n  box-shadow: ${props => props.$palette.default ? defaultPalette.innerShadows : props.$palette.innerShadows};\r\n`;\r\n\r\ntype PropsType = {\r\n    palette: NeumorphColorsType,\r\n    height:  SpringValue<number>,\r\n    rotateZ:  SpringValue<number>,\r\n    x: SpringValue<string>\r\n}\r\n\r\nconst RotatedBackground: React.FC<PropsType> = ({palette, height, rotateZ, x}) => {\r\n\r\n    return(\r\n        <Background $palette={palette} style={{height, rotateZ, x}}>\r\n            <InnerShadow $palette={palette}/>\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default React.memo(RotatedBackground, isEqual)","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\n\r\nconst WholeWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  font-family: NunitoSans-ExtraLight, sans-serif;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div<{$height: number}>`\r\n  position: absolute;\r\n  width: ${props => props.$height * 0.8}px;\r\n  height: ${props => props.$height * 0.8}px;\r\n  border-radius:30px;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\ntype PropsType = {\r\n    width: SpringValue<number>,\r\n    height: SpringValue<number>,\r\n    interfaceHeight: number,\r\n    x: SpringValue<string>\r\n}\r\n\r\nconst InterfaceWrapper: React.FC<PropsType> = ({width, height, children,\r\n                                               interfaceHeight, x}) => {\r\n\r\n    return(\r\n        <WholeWrapper style={{width, height, x}}>\r\n            <ButtonsWrapper $height={interfaceHeight}>\r\n                {children}\r\n            </ButtonsWrapper>\r\n        </WholeWrapper>\r\n    )\r\n}\r\n\r\nexport default InterfaceWrapper","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport {animated, SpringValue, useTransition} from \"react-spring\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst EditButtonWrapper = styled.div<{ $palette: NeumorphColorsType, $height: number }>`\r\n  position: relative;\r\n  z-index: 3;\r\n  width: ${props => props.$height * 0.8}px;\r\n  height: ${props => props.$height * 0.8}px;\r\n  border-radius: 30px;\r\n  box-shadow: ${props => props.$palette.default ? defaultPalette.shadows : props.$palette.shadows} ;\r\n  background: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n`;\r\n\r\nconst ProgressBackground = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  border-radius: 30px;\r\n  top: 0;\r\n  background-color: red;\r\n`;\r\n\r\nconst InnerBackground = styled.div<{ $palette: NeumorphColorsType, $cantBeHovered: boolean }>`\r\n  cursor: ${props => props.$cantBeHovered ? 'inherit' : 'pointer'};\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  position: absolute;\r\n  background-color: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.default ? defaultPalette.color : props.$palette.color};\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 30px;\r\n  &:before {\r\n    border-radius: 25px;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateY(-50%) translateX(-50%);\r\n    z-index: 1;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    box-shadow: ${props => props.$palette.innerShadows};\r\n    opacity: 0;\r\n    transition: opacity .3s linear;\r\n  }\r\n  ${props => !props.$cantBeHovered && `&:hover:before {opacity: 1}`}\r\n`;\r\n\r\n//calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));\r\nconst InnerEditButtonText = styled(animated.div)`\r\n  z-index: 12;\r\n  text-align: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  font-size: calc(20px + (35 - 20) * ((100vw - 300px) / (2000 - 300)));\r\n`;\r\n\r\nconst ProgressCounter = styled(animated.div)`\r\n  font-size: calc(12px + (25 - 12) * ((100vw - 300px) / (2000 - 300)));\r\n  text-align: center;\r\n  position: absolute;\r\n  bottom: 10%;\r\n  border-radius: 30px;\r\n`;\r\n\r\ntype PropsType = {\r\n    switchEditMode: () => void,\r\n    palette: NeumorphColorsType,\r\n    cantBeHovered: boolean,\r\n    actionMessage: string,\r\n    progressBarAnimation: { value: SpringValue<number>, height: SpringValue<string>, opacity: SpringValue<number> },\r\n    interfaceHeight: number\r\n}\r\n\r\nconst EditButton: React.FC<PropsType> = ({\r\n                                             switchEditMode, palette, cantBeHovered, actionMessage,\r\n                                             progressBarAnimation, interfaceHeight\r\n                                         }) => {\r\n\r\n    const textTransition = useTransition(actionMessage, {\r\n        from: {opacity: 1, y: '-100%'},\r\n        enter: {opacity: 1, y: '0%'},\r\n        leave: {opacity: 0, y: '100%'},\r\n    })\r\n\r\n    return (\r\n        <EditButtonWrapper onClick={switchEditMode} $palette={palette} $height={interfaceHeight}>\r\n            <InnerBackground $palette={palette}\r\n                             $cantBeHovered={cantBeHovered}>\r\n                <ProgressBackground style={{\r\n                    height: progressBarAnimation.height,\r\n                    opacity: progressBarAnimation.opacity\r\n                }}/>\r\n                <ProgressCounter style={{opacity: progressBarAnimation.opacity}}>\r\n                    {progressBarAnimation.value.to(value => value.toFixed(0) + ' %')}\r\n                </ProgressCounter>\r\n                {textTransition((style) =>\r\n                    <InnerEditButtonText style={{...style, translateY: '-50%'}}>\r\n                        {actionMessage}\r\n                    </InnerEditButtonText>)}\r\n            </InnerBackground>\r\n        </EditButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(EditButton, isEqual)","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nconst RightButton = styled.div<{ $palette: NeumorphColorsType, $editable: boolean, $height: number }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: ${props => props.$height * 0.5}px;\r\n  height: ${props => props.$height * 0.5}px;\r\n  border-radius: 30px;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? defaultPalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: ${props => props.$editable ? '150%' : '50%'};\r\n  transition: left 0.4s cubic-bezier(0.25, 0, 0, 1) 0.3s, background, color 0.4s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? defaultPalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? defaultPalette.color : props.$palette.color};\r\n  };\r\n  &:before {\r\n    border-radius: 25px;\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateY(-50%) translateX(-50%);\r\n    z-index: 1;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    box-shadow: ${props => props.$palette.innerLittleShadows};\r\n    opacity: 0;\r\n    transition: opacity .3s linear;\r\n  }\r\n  &:hover:before {opacity: 1}\r\n`;\r\n\r\nconst LeftButton = styled(RightButton)`\r\n  left: ${props => props.$editable ? '-50%' : '50%'};\r\n`;\r\n\r\nconst AdditionalButton = styled(RightButton)`\r\n  left: ${props => props.$editable ? '-150%' : '50%'};\r\n`;\r\n\r\nconst InnerSmallerButtonText = styled.div`\r\n  text-align: center;\r\n  font-size: calc(15px + (25 - 15) * ((100vw - 300px) / (2000 - 300)));\r\n`;\r\n\r\ntype PropsType = {\r\n    palette: NeumorphColorsType,\r\n    editable: boolean,\r\n    addTodoList: () => void,\r\n    rejectAllChanges: () => void,\r\n    interfaceHeight: number,\r\n    switchScrollableState: () => void\r\n}\r\n\r\nconst OtherButtons: React.FC<PropsType> = ({palette, editable, switchScrollableState,\r\n                                               interfaceHeight, addTodoList, rejectAllChanges}) => {\r\n\r\n    return (\r\n        <>\r\n            <LeftButton onClick={addTodoList} $palette={palette} $editable={editable} $height={interfaceHeight}>\r\n                <InnerSmallerButtonText>\r\n                    Add list\r\n                </InnerSmallerButtonText>\r\n            </LeftButton>\r\n            <RightButton onClick={rejectAllChanges} $palette={palette} $editable={editable} $height={interfaceHeight}>\r\n                <InnerSmallerButtonText>\r\n                    remove changes\r\n                </InnerSmallerButtonText>\r\n            </RightButton>\r\n            {isMobile &&\r\n                <AdditionalButton onClick={switchScrollableState} $palette={palette} $editable={editable} $height={interfaceHeight}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(OtherButtons, isEqual)","import axios from \"axios\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport axiosRetry from \"axios-retry\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\naxiosRetry(instance, { retries: 4 });\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/auth\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\naxiosRetry(loginInstance, { retries: 4 });\r\n\r\ntype CommonResponseType<T> = {\r\n    resultCode: number;\r\n    messages: string[];\r\n    data: T\r\n};\r\ntype RestoreTasksResponseType = {\r\n    items: TaskType[];\r\n    totalCount: number;\r\n    error?: string\r\n};\r\ntype GetMeType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n};\r\n\r\nexport const api = {\r\n    getAuthState: () => {\r\n        return loginInstance.get<CommonResponseType<GetMeType>>('/me').then(res => res.data)\r\n    },\r\n    logIn: () => {\r\n        const requestObject = {email: \"npikolist@gmail.com\", password: \"512347\", rememberMe: false};\r\n        return loginInstance.post<CommonResponseType<{ userId: string }>>('/login', requestObject)\r\n            .then(res => res.data)\r\n    },\r\n    restoreState: () => {\r\n        return instance.get<Array<TodoListType>>('').then(res => res.data)\r\n    },\r\n    addTodoList: (title: string) => {\r\n        return instance.post<CommonResponseType<{ item: TodoListType }>>(\"\", {title}).then(res => res.data)\r\n    },\r\n    restoreTasks: (todoListId: string) => {\r\n        return instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`).then(res => res.data)\r\n    },\r\n    addTask: (title: string, todoListId: string) => {\r\n        return instance.post<CommonResponseType<{ item: TaskType }>>(`/${todoListId}/tasks`, {title})\r\n            .then(res => res.data)\r\n    },\r\n    changeTask: (todoListId: string, taskId: string, newTask: TaskType) => {\r\n        return instance.put<CommonResponseType<{ item: TaskType }>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n            .then(res => res.data)\r\n    },\r\n    deleteTodoList: (todoListId: string) => {\r\n        return instance.delete<CommonResponseType<{}>>(`/${todoListId}`).then(res => res.data)\r\n    },\r\n    deleteTask: (todoListId: string, taskId: string) => {\r\n        return instance.delete<CommonResponseType<{ item: TaskType }>>(`/${todoListId}/tasks/${taskId}`)\r\n            .then(res => res.data)\r\n    },\r\n    changeTodoListTitle: (todoListId: string, newTitle: string) => {\r\n        return instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n            .then(res => res.data)\r\n    },\r\n    swapTasks: (todoListId: string, swappedTask: string, beforeSwappedTask: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`, {putAfterItemId: beforeSwappedTask})\r\n            .then(res => res.data)\r\n    },\r\n    swapTodoList: (swappedList: string, beforeSwappedList: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`, {putAfterItemId: beforeSwappedList})\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","export const movePos  = (array: Array<any>, moveIndex: number, toIndex: number) => {\r\n    /* #move - Moves an array item from one position in an array to another.\r\n\r\n       Note: This is a pure function so a new array will be returned, instead\r\n       of altering the array argument.\r\n\r\n      Arguments:\r\n      1. array     (String) : Array in which to move an item.         (required)\r\n      2. moveIndex (Object) : The index of the item to move.          (required)\r\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\r\n    */\r\n    let item = array[moveIndex];\r\n    let length = array.length;\r\n    let diff = moveIndex - toIndex;\r\n\r\n    if (diff > 0) {\r\n        // move left\r\n        return [\r\n            ...array.slice(0, toIndex),\r\n            item,\r\n            ...array.slice(toIndex, moveIndex),\r\n            ...array.slice(moveIndex + 1, length)\r\n        ];\r\n    } else if (diff < 0) {\r\n        // move right\r\n        return [\r\n            ...array.slice(0, moveIndex),\r\n            ...array.slice(moveIndex + 1, toIndex + 1),\r\n            item,\r\n            ...array.slice(toIndex + 1, length)\r\n        ];\r\n    }\r\n    return array;\r\n}","import {InferActionTypes} from \"./store\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../Components/neumorphColors\";\r\n\r\ntype InitialStateType = {\r\n    focusedStatus: boolean,\r\n    currentPaletteIndex: NeumorphColorsType,\r\n    initialLoadingState: boolean,\r\n    pendingState: boolean,\r\n    swapState: boolean,\r\n    fetchingState: boolean,\r\n    height: number,\r\n    width: number,\r\n    interfaceHeight: number,\r\n    allTasks: number,\r\n    completedTasks: number,\r\n    closeLookState: boolean,\r\n    scrollableState: boolean\r\n};\r\n\r\nconst initialState = {\r\n    focusedStatus: false,\r\n    currentPaletteIndex: defaultPalette,\r\n    initialLoadingState: true,\r\n    pendingState: false,\r\n    swapState: false,\r\n    fetchingState: false,\r\n    height: 0,\r\n    width: 0,\r\n    interfaceHeight: 0,\r\n    allTasks: 0,\r\n    completedTasks: 0,\r\n    closeLookState: false,\r\n    scrollableState: true\r\n};\r\n\r\nconst interfaceReducer = (state: InitialStateType = initialState, action: InterfaceActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"interfaceReducer/SET_FOCUSED_STATUS\":\r\n            return {\r\n                ...state,\r\n                focusedStatus: action.status\r\n            };\r\n        case \"interfaceReducer/SET_CURRENT_PALETTE_INDEX\":\r\n            return {\r\n                ...state,\r\n                currentPaletteIndex: action.palette\r\n            }\r\n        case \"interfaceReducer/COMPLETE_INITIAL_LOADING_STATE\":\r\n            return {\r\n                ...state,\r\n                initialLoadingState: false\r\n            }\r\n        case \"interfaceReducer/SET_PENDING_STATE\":\r\n            return {\r\n                ...state,\r\n                pendingState: action.pendingState\r\n            }\r\n        case \"interfaceReducer/SET_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case \"interfaceReducer/SET_WIDTH\":\r\n            return {\r\n                ...state,\r\n                width: action.width\r\n            }\r\n        case \"interfaceReducer/SET_INTERFACE_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                interfaceHeight: action.height\r\n            }\r\n        case \"interfaceReducer/SET_ALL_TASKS\":\r\n            return {\r\n                ...state,\r\n                allTasks: action.tasks\r\n            }\r\n        case \"interfaceReducer/SET_COMPLETED_TASK\":\r\n            return {\r\n                ...state,\r\n                completedTasks: action.restore ? 0 : state.completedTasks+1\r\n            }\r\n        case \"interfaceReducer/SET_SWAP_STATE\":\r\n            return {\r\n                ...state,\r\n                swapState: action.state\r\n            }\r\n        case \"interfaceReducer/SET_CLOSE_LOOK_STATE\":\r\n            return {\r\n                ...state,\r\n                closeLookState: action.state\r\n            }\r\n        case \"interfaceReducer/SET_SCROLLABLE_STATE\":\r\n            return {\r\n                ...state,\r\n                scrollableState: action.state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const interfaceActions = {\r\n    setFocusedStatus: (status: boolean) => ({type: 'interfaceReducer/SET_FOCUSED_STATUS', status} as const),\r\n    setPalette: (palette: NeumorphColorsType) => ({type: 'interfaceReducer/SET_CURRENT_PALETTE_INDEX', palette} as const),\r\n    completeInitialLoadingState: () => ({type: 'interfaceReducer/COMPLETE_INITIAL_LOADING_STATE'} as const),\r\n    setPendingState: (pendingState: boolean) => ({type: 'interfaceReducer/SET_PENDING_STATE', pendingState} as const),\r\n    setHeight: (height: number) => ({type: 'interfaceReducer/SET_HEIGHT', height} as const),\r\n    setWidth: (width: number) => ({type: 'interfaceReducer/SET_WIDTH', width} as const),\r\n    setInterfaceHeight: (height: number) => ({type: 'interfaceReducer/SET_INTERFACE_HEIGHT', height} as const),\r\n    setAllTasks: (tasks: number) => ({type: 'interfaceReducer/SET_ALL_TASKS', tasks} as const),\r\n    setCompletedTask: (restore: boolean) => ({type: 'interfaceReducer/SET_COMPLETED_TASK', restore} as const),\r\n    setSwapState: (state: boolean) => ({type: 'interfaceReducer/SET_SWAP_STATE', state} as const),\r\n    setFetchingState: (state: boolean) => ({type: 'interfaceReducer/SET_FETCHING_STATE', state} as const),\r\n    setCloseLookState: (state: boolean) => ({type: 'interfaceReducer/SET_CLOSE_LOOK_STATE', state} as const),\r\n    setScrollableState: (state: boolean) => ({type: 'interfaceReducer/SET_SCROLLABLE_STATE', state} as const),\r\n}\r\n\r\ntype InterfaceActionsTypes = InferActionTypes<typeof interfaceActions>;\r\n\r\nexport default interfaceReducer","import {api} from \"./api\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport cloneDeep from \"lodash-es/cloneDeep\";\r\nimport {movePos} from \"../hooks/movePos\";\r\nimport {interfaceActions} from \"./interfaceReducer\";\r\n\r\ntype InitialStateType = {\r\n    todoLists: Array<TodoListType>,\r\n    deepCopy: Array<TodoListType>,\r\n    editable: boolean,\r\n    listsOrder: Array<string>,\r\n    tasksOrder: Array<{ todoListId: string, newTasksOrder: Array<string> }>,\r\n    newListsId: Array<{ oldId: string, newId: string }>,\r\n    newTasksId: Array<{ oldId: string, newId: string, todoListId: string }>,\r\n};\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    deepCopy: [],\r\n    editable: false,\r\n    listsOrder: [],\r\n    tasksOrder: [],\r\n    newListsId: [],\r\n    newTasksId: [],\r\n};\r\n\r\nconst stateReducer = (state: InitialStateType = initialState, action: StateActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'stateReducer/SET_TODO_LISTS':\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        case 'stateReducer/SET_TASKS':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: action.tasks}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/ADD_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [action.newTodoList, ...state.todoLists],\r\n            };\r\n        case 'stateReducer/ADD_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: [action.newTask, ...list.tasks]}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list, tasks: list.tasks.map(task => {\r\n                                if (task.id === action.task.id) {\r\n                                    return {...action.task}\r\n                                } else return task;\r\n                            })\r\n                        }\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/DELETE_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(list => list.id !== action.todoListId),\r\n            };\r\n        case 'stateReducer/DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: list.tasks.filter(task => task.id !== action.taskId)}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'stateReducer/CHANGE_TODO_LIST_TITLE':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, title: action.todoListTitle}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case \"stateReducer/SWAP_TODO_LISTS\":\r\n            return {\r\n                ...state,\r\n                listsOrder: action.newListsOrder\r\n            }\r\n        case \"stateReducer/SWAP_TASKS\":\r\n            const index = state.tasksOrder.findIndex(item => item.todoListId === action.todoListId);\r\n            const newSwappedTasks = index !== -1 ? state.tasksOrder.map((item, i) => {\r\n                if (i === index) return {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}\r\n                return item\r\n            }) : [...state.tasksOrder, {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}]\r\n            return {\r\n                ...state,\r\n                tasksOrder: newSwappedTasks\r\n            }\r\n        case \"stateReducer/ENABLE_EDIT_MODE\": //глянуть\r\n            return {\r\n                ...state,\r\n                editable: true,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n                deepCopy: cloneDeep(state.todoLists)\r\n            };\r\n        case \"stateReducer/DISABLE_EDIT_MODE\":\r\n            return {\r\n                ...state,\r\n                editable: false\r\n            }\r\n        case \"stateReducer/SET_NEW_ID\":\r\n            return {\r\n                ...state,\r\n                todoLists: action.newTodoLists\r\n            };\r\n        case \"stateReducer/REJECT_ALL_CHANGES\":\r\n            return {\r\n                ...state,\r\n                todoLists: state.deepCopy,\r\n                editable: false,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const stateActions = {\r\n    addTodoList: (newTodoList: TodoListType) => ({type: 'stateReducer/ADD_TODO_LIST', newTodoList} as const),\r\n    addTask: (newTask: TaskType, todoListId: string) => ({type: 'stateReducer/ADD_TASK', newTask, todoListId} as const),\r\n    changeTask: (task: TaskType) => ({type: 'stateReducer/CHANGE_TASK', task} as const),\r\n    deleteTodoList: (todoListId: string) => ({type: 'stateReducer/DELETE_TODO_LIST', todoListId} as const),\r\n    deleteTask: (todoListId: string, taskId: string) => ({type: 'stateReducer/DELETE_TASK', taskId, todoListId} as const),\r\n    restoreTodoList: (todoLists: TodoListType[]) => ({type: 'stateReducer/SET_TODO_LISTS', todoLists} as const),\r\n    restoreTasks: (tasks: TaskType[], todoListId: string) => ({\r\n        type: 'stateReducer/SET_TASKS',\r\n        tasks,\r\n        todoListId\r\n    } as const),\r\n    changeTodoListTitle: (todoListId: string, todoListTitle: string) => ({\r\n        type: 'stateReducer/CHANGE_TODO_LIST_TITLE',\r\n        todoListId,\r\n        todoListTitle\r\n    } as const),\r\n    enableEditMode: () => ({type: 'stateReducer/ENABLE_EDIT_MODE'} as const),\r\n    disableEditMode: () => ({type: 'stateReducer/DISABLE_EDIT_MODE'} as const),\r\n    swapTasks: (todoListId: string, newTasksOrder: Array<string>) => ({\r\n        type: 'stateReducer/SWAP_TASKS', todoListId, newTasksOrder\r\n    } as const),\r\n    swapTodoLists: (newListsOrder: Array<string>) => ({type: 'stateReducer/SWAP_TODO_LISTS', newListsOrder} as const),\r\n    setTodoLists: (newTodoLists: Array<TodoListType>) => ({type: 'stateReducer/SET_NEW_ID', newTodoLists} as const),\r\n    rejectAllChanges: () => ({type: 'stateReducer/REJECT_ALL_CHANGES'} as const),\r\n}\r\n\r\ntype StateActionsType = InferActionTypes<typeof stateActions>;\r\ntype DispatchedActionsTypes = InferActionTypes<typeof stateActions & typeof interfaceActions>;\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, DispatchedActionsTypes>;\r\ntype ThunkActionType = ThunkDispatch<AppStateType, unknown, DispatchedActionsTypes>;\r\n\r\nexport const loadTodoListsTC = (): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreState().then(data => {\r\n        dispatch(stateActions.restoreTodoList(data))\r\n    })\r\n};\r\nexport const addTodoListTC = (title: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.addTodoList(title).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.addTodoList(data.data.item))\r\n    })\r\n};\r\nexport const changeTaskTC = (todoListId: string, taskId: string, newTask: TaskType): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTask(todoListId, taskId, newTask).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.changeTask(data.data.item))\r\n    })\r\n};\r\nexport const deleteTaskTC = (todoListId: string, taskId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTask(todoListId, taskId).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.deleteTask(todoListId, taskId))\r\n    })\r\n};\r\nexport const changeTodoListTitleTC = (todoListId: string, todoListTitle: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTodoListTitle(todoListId, todoListTitle).then(data => {\r\n        if (data.resultCode === 0) dispatch(stateActions.changeTodoListTitle(todoListId, todoListTitle))\r\n    })\r\n};\r\n\r\n\r\n\r\nexport const initialization = (): ThunkType => async (dispatch: ThunkActionType) => {\r\n    const authState = await api.getAuthState();\r\n    if (!authState.data.id) {\r\n        await api.logIn()\r\n    }\r\n    dispatch(getStateFromServer(true));\r\n};\r\n\r\nconst getStateFromServer = (initial: boolean): ThunkType => async (dispatch: ThunkActionType) => {\r\n    if (!initial) dispatch(interfaceActions.setFetchingState(true));\r\n    const lists = await api.restoreState();\r\n    let listsWithTasks = lists;\r\n    if (lists.length !== 0) {\r\n        dispatch(interfaceActions.setAllTasks(lists.length));\r\n        dispatch(interfaceActions.setCompletedTask(true))\r\n        const getTasks = lists.map(async (item) => {\r\n            return await api.restoreTasks(item.id).then(data => {\r\n                const index = listsWithTasks.findIndex(list => item.id === list.id);\r\n                listsWithTasks[index] = {...item, tasks: data.items};\r\n                dispatch(interfaceActions.setCompletedTask(false))\r\n            })\r\n        });\r\n        await Promise.all(getTasks)\r\n    }\r\n    dispatch(stateActions.setTodoLists(listsWithTasks));\r\n    if (initial) setTimeout(() => dispatch(interfaceActions.completeInitialLoadingState()), 600);\r\n};\r\n\r\nexport const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n\r\n        dispatch(stateActions.disableEditMode());\r\n        dispatch(interfaceActions.setPendingState(true))\r\n        /*dispatch(actions.setPendingState(true))*/\r\n\r\n        const oldTodoLists = getState().todoList.deepCopy;\r\n        const newTodoLists = getState().todoList.todoLists;\r\n        let listsOrder = getState().todoList.listsOrder;\r\n        let tasksOrder = getState().todoList.tasksOrder;\r\n\r\n        const newListsId: Array<{ oldId: string, newId: string }> = [];\r\n        const newTasksId: Array<{ oldId: string, newId: string, todoListId: string }> = [];\r\n        let todoListsWithNewId: Array<TodoListType> = [];\r\n\r\n        //added items\r\n        const addedLists = newTodoLists.filter(list => oldTodoLists.findIndex(oldList => oldList.id === list.id) === -1);\r\n        const deletedLists = oldTodoLists.filter(list => newTodoLists.findIndex(newList => newList.id === list.id) === -1);\r\n        const editedLists: Array<TodoListType> = []\r\n        newTodoLists.forEach(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList && list.title !== oldList.title) {\r\n                editedLists.push(list)\r\n            }\r\n        })\r\n\r\n        let addedTasks: Array<TaskType> = [];\r\n        const editedTasks: Array<TaskType> = [];\r\n        newTodoLists.forEach(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList) {\r\n                list.tasks.forEach(task => {\r\n                    const oldTask = oldList.tasks.find(oldTask => oldTask.id === task.id)\r\n                    if (!oldTask) {\r\n                        addedTasks.push(task);\r\n                        return\r\n                    }\r\n                    if (oldTask && oldTask.title !== task.title) {\r\n                        editedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n            if (!oldList && list.tasks.length !== 0) {\r\n                list.tasks.forEach(task => addedTasks.push(task))\r\n            }\r\n        })\r\n        const deletedTasks: Array<TaskType> = [];\r\n        oldTodoLists.forEach(list => {\r\n            const newList = newTodoLists.find(newList => newList.id === list.id);\r\n            if (newList) {\r\n                list.tasks.forEach(task => {\r\n                    const newTask = newList.tasks.find(newTask => newTask.id === task.id)\r\n                    if (!newTask) {\r\n                        deletedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        //progress bar logic\r\n        let allTasks = 0;\r\n        if (deletedLists.length !== 0) allTasks = allTasks + deletedLists.length;\r\n        if (deletedTasks.length !== 0) allTasks = allTasks + deletedTasks.length;\r\n        if (addedLists.length !== 0) allTasks = allTasks + addedLists.length;\r\n        if (addedTasks.length !== 0) allTasks = allTasks + addedTasks.length;\r\n        if (editedLists.length !== 0) allTasks = allTasks + editedLists.length;\r\n        if (editedTasks.length !== 0) allTasks = allTasks + editedTasks.length;\r\n        dispatch(interfaceActions.setAllTasks(allTasks));\r\n\r\n        //queries\r\n        dispatch(interfaceActions.setCompletedTask(true))\r\n        if (deletedLists.length !== 0) {\r\n            deletedLists.forEach(list => {\r\n                api.deleteTodoList(list.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.forEach(task => {\r\n                api.deleteTask(task.todoListId, task.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedLists.length !== 0) {\r\n            editedLists.forEach(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedTasks.length !== 0) {\r\n            editedTasks.forEach(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n\r\n        const createAndChangeIdOfTasksInOrderList = async () => {\r\n            if (addedTasks.length !== 0) {\r\n                const tasksPromises = addedTasks.map(async (task) => {\r\n                    return await api.addTask(task.title, task.todoListId).then(data => {\r\n                        if (data.resultCode === 0) newTasksId.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            todoListId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode === 0) dispatch(interfaceActions.setCompletedTask(false))\r\n                    });\r\n                })\r\n                await Promise.all(tasksPromises);\r\n                if (tasksOrder.length !== 0) {\r\n                    tasksOrder = tasksOrder.map(item => {\r\n                        const newList = newListsId.find(list => list.oldId === item.todoListId)\r\n                        const tasksWithNewId = item.newTasksOrder.map(taskId => {\r\n                            const newTask = newTasksId.find(newTask => newTask.oldId === taskId);\r\n                            if (newTask) return newTask.newId;\r\n                            return taskId\r\n                        })\r\n                        return {todoListId: newList ? newList.newId : item.todoListId, newTasksOrder: tasksWithNewId}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addedLists.length !== 0) {\r\n            const listPromises = addedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        newListsId.push({newId: data.data.item.id, oldId: list.id});\r\n                        dispatch(interfaceActions.setCompletedTask(false))\r\n                    }\r\n                })\r\n\r\n            })\r\n            await Promise.all(listPromises);\r\n            if (addedTasks.length !== 0) {\r\n                addedTasks = addedTasks.map(task => {\r\n                    const newListId = newListsId.find(list => list.oldId === task.todoListId);\r\n                    if (newListId) return {...task, todoListId: newListId.newId}\r\n                    return task\r\n                })\r\n            }\r\n            if (listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.map(item => {\r\n                    const newList = newListsId.find(list => list.oldId === item)\r\n                    if (newList) return newList.newId;\r\n                    return item\r\n                })\r\n            }\r\n            await createAndChangeIdOfTasksInOrderList()\r\n        } else await createAndChangeIdOfTasksInOrderList();\r\n\r\n        //swap progress\r\n        dispatch(interfaceActions.setPendingState(false));\r\n        dispatch(interfaceActions.setSwapState(true))\r\n\r\n        //changing id\r\n        if (newListsId.length !== 0) {\r\n            todoListsWithNewId = newTodoLists.map(list => {\r\n                const newList = newListsId.find(item => item.oldId === list.id)\r\n                if (newList) return {...list, id: newList.newId};\r\n                return list\r\n            })\r\n        } else todoListsWithNewId = newTodoLists;\r\n        if (newTasksId.length !== 0) {\r\n            todoListsWithNewId = todoListsWithNewId.map(list => {\r\n                const tasks = list.tasks.map(task => {\r\n                    const newTask = newTasksId.find(item => item.oldId === task.id)\r\n                    if (newTask) return {...task, id: newTask.newId}\r\n                    return task\r\n                })\r\n                return {...list, tasks}\r\n            })\r\n        }\r\n\r\n        //swap items\r\n        if (listsOrder.length !== 0 || addedLists.length > 1) {\r\n            if (deletedLists.length !== 0 && listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.filter(list => todoListsWithNewId.findIndex(item => item.id === list) !== -1)\r\n            }\r\n            let currentOrder = addedLists.length > 1 ? await api.restoreState().then(data => data.map(item => item.id))\r\n                : todoListsWithNewId.map(list => list.id);\r\n            const swapOrder: Array<{ swappedId: string, beforeSwappedId: string | null }> = [];\r\n            const order = listsOrder.length !== 0 ? listsOrder : todoListsWithNewId.map(list => list.id);\r\n            order.forEach((thisListPosId, index) => {\r\n                if (thisListPosId !== currentOrder[index]) {\r\n                    if (index === 0) swapOrder.push({swappedId: thisListPosId, beforeSwappedId: null})\r\n                    else swapOrder.push({swappedId: thisListPosId, beforeSwappedId: listsOrder[index - 1]});\r\n                    const oldIndex = currentOrder.findIndex(listId => listId === thisListPosId)\r\n                    currentOrder = movePos(currentOrder, oldIndex, index)\r\n                }\r\n            });\r\n            swapOrder.forEach(item => {\r\n                api.swapTodoList(item.swappedId, item.beforeSwappedId)/*.then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });*/\r\n            })\r\n        }\r\n\r\n        if (tasksOrder.length !== 0 || addedTasks.length > 1) {\r\n            if (deletedTasks.length !== 0 && tasksOrder.length !== 0) {\r\n                tasksOrder = tasksOrder.map(item => {\r\n                    const currentList = todoListsWithNewId.find(list => list.id === item.todoListId)\r\n                    if (currentList) {\r\n                        const newTasksOrder = item.newTasksOrder.filter(taskId => currentList.tasks.findIndex(task =>\r\n                            task.id === taskId) !== -1)\r\n                        return {...item, newTasksOrder}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            let addedTasksInLists: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            const currentListsStateOnServer = newTasksId.length > 1 ? await (async () => {\r\n                newTasksId.forEach(task => {\r\n                    const list = addedTasksInLists.length !== 0 ?\r\n                        addedTasksInLists.find(list => list.todoListId === task.todoListId) : undefined;\r\n                    if (list) {\r\n                        const index = addedTasksInLists.findIndex(list => list.todoListId === task.todoListId);\r\n                        addedTasksInLists[index] = {...list, tasks: [...list.tasks, task.newId]}\r\n                    } else addedTasksInLists.push({todoListId: task.todoListId, tasks: [task.newId]})\r\n                })\r\n                let listsToUpdate: Array<string> = [];\r\n                addedTasksInLists.forEach(item => {\r\n                    if (item.tasks.length > 1) listsToUpdate.push(item.todoListId)\r\n                })\r\n                if (listsToUpdate.length !== 0) {\r\n                    let listsOnServer: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n                    const getListOrder = listsToUpdate.map(async (item) => {\r\n                        return await api.restoreTasks(item).then(res => {\r\n                            const tasks = res.items.map(item => item.id);\r\n                            listsOnServer.push({todoListId: item, tasks})\r\n                        });\r\n                    });\r\n                    await Promise.all(getListOrder);\r\n                    return listsOnServer\r\n                } else return undefined\r\n            })() : undefined;\r\n\r\n            /*console.log(currentListsStateOnServer,\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .Tasks.map(item => item.id),\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .Tasks.map(item => item.title))*/\r\n\r\n            let requiredOrder: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            if (currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                currentListsStateOnServer.forEach(item => {\r\n                    const isItemInOrder = tasksOrder.find(currItem =>\r\n                        currItem.todoListId === item.todoListId);\r\n                    if (isItemInOrder) return;\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n                tasksOrder.forEach(item => requiredOrder.push({todoListId: item.todoListId, tasks: item.newTasksOrder}))\r\n            } else if (!currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                requiredOrder = tasksOrder.map(item => ({todoListId: item.todoListId, tasks: item.newTasksOrder}));\r\n            } else if (currentListsStateOnServer && tasksOrder.length === 0) {\r\n                currentListsStateOnServer.forEach(item => {\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n            }\r\n\r\n            const currentOrder = requiredOrder.map(item => {\r\n                const itemWithUpdatedState = currentListsStateOnServer ? currentListsStateOnServer\r\n                    .find(list => list.todoListId === item.todoListId) : undefined;\r\n                const curItem = todoListsWithNewId.find(list => list.id === item.todoListId)!;\r\n                if (itemWithUpdatedState) return itemWithUpdatedState;\r\n                return {todoListId: curItem.id, tasks: curItem.tasks.map(task => task.id)}\r\n            });\r\n\r\n            const swapOrder: Array<{ todoListId: string, swappedId: string, beforeSwappedId: string | null }> = [];\r\n            requiredOrder.forEach(newOrder => {\r\n                let currOrder = currentOrder.find(item => item.todoListId === newOrder.todoListId)!.tasks;\r\n                newOrder.tasks.forEach((newTaskPosId, index) => {\r\n                    if (newTaskPosId !== currOrder[index]) {\r\n                        if (index === 0) swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId, beforeSwappedId: null\r\n                        });\r\n                        else swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId,\r\n                            beforeSwappedId: currOrder[index - 1]\r\n                        });\r\n                        const oldIndex = currOrder.findIndex(taskId => taskId === newTaskPosId)\r\n                        currOrder = movePos(currOrder, oldIndex, index)\r\n                    }\r\n                })\r\n            });\r\n            const groupedSwapOrder: Array<{todoListId: string, swapOrder: Array<{swappedId: string, beforeSwappedId: string | null}>}> = [];\r\n            swapOrder.forEach(task => {\r\n                const currentList = groupedSwapOrder.find(item => item.todoListId === task.todoListId);\r\n                if (currentList) groupedSwapOrder.map(item => item.todoListId === currentList.todoListId ?\r\n                    item.swapOrder.push({swappedId: task.swappedId, beforeSwappedId: task.todoListId}) : item\r\n                );\r\n                groupedSwapOrder.push({\r\n                    todoListId: task.todoListId,\r\n                    swapOrder: [{swappedId: task.swappedId, beforeSwappedId: task.beforeSwappedId}]\r\n                })\r\n            });\r\n            const swapOrderPending = groupedSwapOrder.map(async (item) => {\r\n                const consistentSwapOrder = item.swapOrder\r\n                for (let order of consistentSwapOrder) {\r\n                    await api.swapTasks(item.todoListId, order.swappedId, order.beforeSwappedId)/*.then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })*/\r\n                }\r\n            });\r\n            await Promise.all(swapOrderPending)\r\n        }\r\n        dispatch(interfaceActions.setSwapState(false));\r\n\r\n\r\n        if (addedLists.length !== 0 || addedTasks.length !== 0) {\r\n            dispatch(getStateFromServer(false))\r\n        }\r\n    };\r\n\r\nexport default stateReducer","import React, {useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useSpring} from \"react-spring\";\r\nimport RotatedBackground from \"./RotatedBackground\";\r\nimport InterfaceWrapper from \"./InterfaceWrapper\";\r\nimport EditButton from \"./EditButton\";\r\nimport OtherButtons from \"./OtherButtons\";\r\nimport {stateActions, submitAllChanges} from \"../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\n\r\n\r\nconst MainInterfaceContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const currentPalette = useSelector((state: AppStateType) => state.interface.currentPaletteIndex, shallowEqual);\r\n    const pendingState = useSelector((state: AppStateType) => state.interface.pendingState, shallowEqual);\r\n    const initialLoading = useSelector((state: AppStateType) => state.interface.initialLoadingState, shallowEqual);\r\n    const swapState = useSelector((state: AppStateType) => state.interface.swapState, shallowEqual);\r\n    const allTasks = useSelector((state: AppStateType) => state.interface.allTasks, shallowEqual);\r\n    const completedTasks = useSelector((state: AppStateType) => state.interface.completedTasks, shallowEqual);\r\n    const fetching = useSelector((state: AppStateType) => state.interface.fetchingState, shallowEqual);\r\n    const closeLook = useSelector((state: AppStateType) => state.interface.closeLookState, shallowEqual);\r\n    const interfaceHeight = useSelector((state: AppStateType) => state.interface.interfaceHeight, shallowEqual);\r\n    const width = useSelector((state: AppStateType) => state.interface.width, shallowEqual);\r\n    const scrollableState = useSelector((state: AppStateType) => state.interface.scrollableState, shallowEqual);\r\n\r\n    const [buttonsWrapperHeight, setButtonsHeight] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const getHeight = (getButtonHeight: boolean) => {\r\n            if (!getButtonHeight) return editable ? (window.innerHeight * 0.17 > 230 ? 230 :\r\n                window.innerHeight * 0.17 < 150 ? 150 : window.innerHeight * 0.17) :\r\n                (Math.sqrt((window.innerHeight * 0.23) ** 2 + (window.innerWidth * 0.23) ** 2) > 300 ? 300 :\r\n                    Math.sqrt((window.innerHeight * 0.23) ** 2 + (window.innerWidth * 0.23) ** 2));\r\n            return window.innerHeight * 0.17 > 230 ? 230 :\r\n                window.innerHeight * 0.17 < 150 ? 150 : window.innerHeight * 0.17\r\n        }\r\n        if (isMounted) {\r\n            const height = getHeight(false);\r\n            dispatch(interfaceActions.setInterfaceHeight(height));\r\n            const buttonHeight = getHeight(true);\r\n            setButtonsHeight(buttonHeight);\r\n        }\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => {\r\n                    const newHeight = getHeight(false);\r\n                    dispatch(interfaceActions.setInterfaceHeight(newHeight));\r\n                    const newButtonHeight = getHeight(true);\r\n                    setButtonsHeight(newButtonHeight);\r\n                }, 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, [editable, dispatch]);\r\n\r\n    const addTodoList = useCallback(() => {\r\n        const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        const newList = {\r\n            id,\r\n            title: '',\r\n            tasks: []\r\n        }\r\n        dispatch(stateActions.addTodoList(newList));\r\n    }, [dispatch]);\r\n\r\n    const rejectAllChanges = useCallback(() => {\r\n        dispatch(stateActions.rejectAllChanges())\r\n    }, [dispatch]);\r\n\r\n    const switchScrollableState = useCallback(() => {\r\n        dispatch(interfaceActions.setScrollableState(!scrollableState))\r\n    }, [scrollableState, dispatch]);\r\n\r\n    const switchEditMode = useCallback(() => {\r\n        if (!editable) dispatch(stateActions.enableEditMode());\r\n        if (editable) dispatch(submitAllChanges());\r\n    }, [editable, dispatch]);\r\n\r\n    //animation logic\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n        backgroundHeight: Math.sqrt(window.innerHeight ** 2 + window.innerWidth ** 2),\r\n        rotateZ: -35,\r\n        x: '0vw',\r\n    }));\r\n\r\n    const [progressBarAnimation, setProgressBar] = useSpring(() => ({\r\n        value: 0,\r\n        height: '0%',\r\n        opacity: 1\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (editable) setSpring({width: window.innerWidth})\r\n    }, [width, setSpring, editable]);\r\n\r\n    useEffect(() => {\r\n        setProgressBar(() => {\r\n            if (completedTasks / allTasks !== 1) return {\r\n                value: isNaN(completedTasks / allTasks * 100) ? 0 : completedTasks / allTasks * 100,\r\n                height: `${completedTasks / allTasks * 100}%`,\r\n            };\r\n            else return {\r\n                to: async animate => {\r\n                    await animate({\r\n                        value: isNaN(completedTasks / allTasks * 100) ? 0 : completedTasks / allTasks * 100,\r\n                        height: `${completedTasks / allTasks * 100}%`});\r\n                    await animate({opacity: 0})\r\n                }\r\n            }\r\n        })\r\n    }, [allTasks, completedTasks, setProgressBar]);\r\n\r\n    useEffect(() => {\r\n        if (!initialLoading && !editable && !closeLook) {\r\n            setSpring({\r\n                height: interfaceHeight,\r\n                width: buttonsWrapperHeight,\r\n                backgroundHeight: interfaceHeight,\r\n                rotateZ: -35,\r\n                x: '0vw',\r\n                delay: (prop) => prop === 'rotateZ' ? 300 : 0,\r\n                config: {friction: 50}\r\n            })\r\n        } else if (editable) {\r\n            setSpring({\r\n                backgroundHeight: interfaceHeight,\r\n                height: interfaceHeight,\r\n                width: window.innerWidth,\r\n                rotateZ: 0,\r\n                delay: (prop) => prop === 'width' ? 300 : 0\r\n            })\r\n        } else if (closeLook) {\r\n            setSpring({\r\n                x: '-100vw'\r\n            })\r\n        }\r\n    }, [editable, pendingState, initialLoading, swapState, fetching, closeLook, interfaceHeight, setSpring, buttonsWrapperHeight]);\r\n\r\n    const actionMessage = useMemo(() =>\r\n            initialLoading ? 'Loading' : editable ? 'Submit' : pendingState ? 'Sending data'\r\n                : 'Edit'\r\n        , [editable, pendingState, initialLoading]);\r\n\r\n    return (\r\n        <>\r\n            <RotatedBackground palette={currentPalette} height={spring.backgroundHeight} rotateZ={spring.rotateZ} x={spring.x}/>\r\n            <InterfaceWrapper height={spring.height} width={spring.width} interfaceHeight={buttonsWrapperHeight} x={spring.x}>\r\n                <EditButton actionMessage={actionMessage} interfaceHeight={buttonsWrapperHeight}\r\n                            cantBeHovered={pendingState || initialLoading || swapState || fetching}\r\n                            switchEditMode={switchEditMode} palette={currentPalette}\r\n                            progressBarAnimation={progressBarAnimation}/>\r\n                <OtherButtons palette={currentPalette} editable={editable} addTodoList={addTodoList} switchScrollableState={switchScrollableState}\r\n                              rejectAllChanges={rejectAllChanges} interfaceHeight={buttonsWrapperHeight}/>\r\n            </InterfaceWrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MainInterfaceContainer","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {defaultPalette, NeumorphColorsType} from \"../../neumorphColors\";\r\nimport {isMobile} from \"react-device-detect\";\r\nimport {ReactEventHandlers} from \"react-use-gesture/dist/types\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst ScrollBarWrapper = styled(animated.div)<{ $palette: NeumorphColorsType, $visible: boolean, $editable: boolean, $interfaceHeight: number }>`\r\n  position: absolute;\r\n  width: 30px;\r\n  border-radius: 10px;\r\n  height: ${props => props.$editable ? window.innerHeight - props.$interfaceHeight : window.innerHeight}px;\r\n  top: ${props => props.$editable ? props.$interfaceHeight : 0}px;\r\n  right: 0;\r\n  overflow: hidden;\r\n  transition: .6s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.progressBarColor};\r\n`;\r\n\r\nconst ScrollBarThing = styled(animated.div)<{ $palette: NeumorphColorsType, $height: number, $drugged: boolean }>`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: ${props => props.$height}%;\r\n  border-radius: 10px;\r\n  transition: background 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$drugged ? defaultPalette.background : props.$palette.background};\r\n  cursor: grab;\r\n  &:active {\r\n      cursor: grabbing;\r\n      background-color: ${props => props.$palette.progressBarHoverColor}\r\n  }\r\n  &:hover {\r\n      background-color: ${props => props.$palette.progressBarHoverColor}\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    palette: NeumorphColorsType,\r\n    visible: boolean,\r\n    visibilityOfScrollBar: { opacity: SpringValue<number>, right: SpringValue<number>, display: SpringValue<string> },\r\n    editable: boolean,\r\n    interfaceHeight: number,\r\n    drugged: boolean,\r\n    top: SpringValue<string>,\r\n    bindDraggedScrollBar: (...args: any[]) => ReactEventHandlers,\r\n    scrollBarHeight: number\r\n}\r\n\r\nconst ScrollBar: React.FC<PropsType> = ({\r\n                                            palette, interfaceHeight, editable, bindDraggedScrollBar, scrollBarHeight,\r\n                                            visible, drugged, top, visibilityOfScrollBar\r\n                                        }) => {\r\n\r\n    return (\r\n        <ScrollBarWrapper $palette={palette} $visible={visible} style={visibilityOfScrollBar}\r\n                          $editable={editable} $interfaceHeight={interfaceHeight}>\r\n            <ScrollBarThing $palette={palette} $drugged={drugged}\r\n                            style={{top}} {...!isMobile && {...bindDraggedScrollBar()}}\r\n                            $height={scrollBarHeight}/>\r\n        </ScrollBarWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ScrollBar, isEqual)","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nconst AllLists = styled(animated.div)<{ $editable: boolean, $closeLook: boolean, $interfaceHeight: number }>`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  width: 70vw;\r\n  top: ${props => props.$editable && !props.$closeLook ? props.$interfaceHeight : 0}px;\r\n  height: calc(100vh - 280px);\r\n  transform-origin: 50% 100%;\r\n  @media screen and (max-width: 1210px) {\r\n    transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n    top: ${props => props.$editable ? `${props.$interfaceHeight}px` : props.$closeLook ?\r\n    '0px' : '-38vh'};\r\n    width: 90vw\r\n  }\r\n`;\r\n\r\nconst ScrollWrapper = styled(animated.div)<{ $top: number }>`\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n  z-index: 1;\r\n  left: 50%;\r\n  top: ${props => props.$top}px;\r\n  transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n  max-width: 2000px;\r\n`;\r\n\r\ntype PropsType = {\r\n    wrapperAnimation: { x: SpringValue<string>, rotateX: SpringValue<number>, rotateZ: SpringValue<number>, y: SpringValue<number> },\r\n    editable: boolean,\r\n    closeLook: boolean,\r\n    interfaceHeight: number,\r\n    y: SpringValue<number>,\r\n    height: SpringValue<number>,\r\n    measuredRef: React.RefObject<HTMLDivElement>,\r\n    visible: boolean,\r\n}\r\n\r\nconst ScrollableWrapper: React.FC<PropsType> = ({\r\n                                                    children, wrapperAnimation,\r\n                                                    editable, closeLook, height, interfaceHeight,\r\n                                                    y, visible, measuredRef\r\n                                                }) => {\r\n\r\n    return (\r\n        <AllLists style={wrapperAnimation} $editable={editable} $closeLook={closeLook}\r\n                  $interfaceHeight={interfaceHeight}>\r\n            <ScrollWrapper style={{y, height, translateX: '-50%'}} ref={measuredRef}\r\n                           $top={closeLook && visible && isMobile ? 50 : closeLook && visible && !isMobile ? 125 : 25}>\r\n                {children}\r\n            </ScrollWrapper>\r\n        </AllLists>\r\n    )\r\n}\r\n\r\nexport default ScrollableWrapper","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {useDrag} from \"react-use-gesture\";\r\n\r\nexport const TaskButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    transform: translateX(-70%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Button = styled.div<{$palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    left: 10px;\r\n    font-size: 15px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.$palette.background};\r\n    box-shadow: ${props => props.$palette.littleShadows};\r\n    color: ${props => props.$palette.color};\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.$palette.color};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n    &:first-child:nth-last-child(2),\r\n        &:first-child:nth-last-child(2) ~ * { \r\n            &:nth-child(1) {\r\n                top: 5px;\r\n            }\r\n            &:nth-child(2) {\r\n                bottom: 5px;\r\n            }\r\n        }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    deleteTask: () => void;\r\n    editTask: () => void;\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskButtons: React.FC<PropsType> = ({deleteTask, editTask, palette}) => {\r\n\r\n    const onEditClickHandler = useDrag(({tap, event}) => {\r\n        event?.stopPropagation()\r\n        if (tap) editTask()\r\n    });\r\n\r\n    const onDeleteClickHandler = useDrag(({tap, event}) => {\r\n        event?.stopPropagation()\r\n        if (tap) deleteTask()\r\n    })\r\n\r\n    return (\r\n        <TaskButtonWrapper>\r\n            <Button {...onEditClickHandler()} $palette={palette}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n            <Button {...onDeleteClickHandler()} $palette={palette}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n        </TaskButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskButtons);\r\n\r\n","\r\n\r\nexport const validate = (value: string | null): boolean => {\r\n    return value !== null && !/^\\s*$/.test(value) && value.length < 100\r\n};","import React from \"react\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst CheckboxWrapper = styled.div<{$editable: boolean}>`\r\n    width: 31px;\r\n    height:31px;\r\n    position: relative;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    opacity: ${props => props.$editable ? 0 : 1};\r\n    --background: #fff;\r\n    --border: #D1D6EE;\r\n    --border-hover: #BBC1E1;\r\n    --border-active: #1E2235;\r\n    --tick: #fff;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    z-index: 9;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    outline: none;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: box-shadow .3s;\r\n    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));\r\n    &:hover {\r\n        --s: 2px;\r\n        --b: var(--border-hover);\r\n    }\r\n    &:checked {\r\n        --b: var(--border-active);\r\n        --s: 2px;\r\n        transition-delay: .4s;\r\n        & + svg {\r\n            --a: 16.1 86.12;\r\n            --o: 102.22;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    z-index: 10;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    pointer-events: none;\r\n    fill: none;\r\n    stroke-width: 2px;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    stroke: var(--stroke, var(--border-active));\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    transform: scale(var(--scale, 1)) translateZ(0);\r\n    stroke-dasharray: var(--a, 86.12);\r\n    stroke-dashoffset: var(--o, 86.12);\r\n    transition: stroke-dasharray .6s, stroke-dashoffset .6s;\r\n`;\r\n\r\ntype PropsType = {\r\n    task: TaskType;\r\n    changeDoneStatus: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editable: boolean,\r\n}\r\n\r\nconst TaskCheckbox: React.FC<PropsType> = ({task, changeDoneStatus, editable}) => {\r\n\r\n    return (\r\n        <CheckboxWrapper $editable={editable}>\r\n            <Checkbox type=\"checkbox\" checked={task.status === 2} disabled={editable}\r\n                      onChange={(e) => changeDoneStatus(e)}/>\r\n            <Svg>\r\n                <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"/>\r\n            </Svg>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskCheckbox);\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport TaskButtons, {TaskButtonWrapper} from \"./TaskButtons\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {useDrag} from \"react-use-gesture\";\r\n\r\nconst TaskWrapper = styled.div<{ $editable: boolean, $editorState: boolean}>`\r\n    position: relative;\r\n    text-align: left;\r\n    z-index: ${props => props.$editorState ? 2 : 1};\r\n    cursor: ${props => props.$editable ? \"grab\" : \"inherit\"};\r\n    ${props => props.$editable &&\r\n    `&:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n       width: 4rem;\r\n       height: calc(100% + 10px);\r\n       left: -10px;\r\n       top: -5px\r\n     }`}\r\n`;\r\n\r\nconst TaskBackground = styled.div<{$palette: NeumorphColorsType, $editable: boolean, $editorState: boolean}>`\r\n    padding: 15px 0;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    display: flex;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    z-index: 2;\r\n    transform: scale(${props => props.$editorState ? 1.3 : 1});\r\n    transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n    &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: -1;\r\n      box-shadow: ${props => props.$palette.littleShadows};\r\n    };\r\n    &:after {\r\n      border-radius: 7px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translateY(-50%) translateX(-50%);\r\n      z-index: 1;\r\n      width: calc(100% - 10px);\r\n      height: calc(100% - 10px);\r\n      box-shadow: ${props => props.$palette.innerLittleShadows};\r\n      opacity: 0;\r\n      transition: opacity .3s linear;\r\n    };\r\n    ${props => props.$editable && `\r\n        &:hover:after {opacity: 1};\r\n        &:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n           width: 4rem;\r\n           height: 5rem;\r\n           left: -10px\r\n        }\r\n        &:active {\r\n           cursor: grabbing;\r\n           &:before {box-shadow: 10px 10px 20px rgba(0, 0, 0, .4)};\r\n           &:after {opacity: 1}\r\n        }`}\r\n    ${props => props.$editorState && `\r\n    &:after {opacity: 1}\r\n    &:before {box-shadow: 10px 10px 20px rgba(0, 0, 0, .4)}`}\r\n`;\r\n\r\nconst TaskText = styled.div<{ contentEditable: boolean}>`\r\n  position: relative;\r\n    padding: 10px;\r\n    outline: none;\r\n    display: inline-block;\r\n    min-width: 100px;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-break: after-white-space;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    z-index: 3;\r\n    cursor: ${props => props.contentEditable ? 'text' : 'inherit'}\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    task: TaskType,\r\n    todoListId: string,\r\n    palette: NeumorphColorsType,\r\n};\r\n\r\nconst TodoListTask: React.FC<PropsType> = ({task, todoListId, palette}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.interface.focusedStatus, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [editorState, setEditorState] = useState<boolean>(false);\r\n    const editTask = useCallback(() => {\r\n        setEditorState(true);\r\n        dispatch(interfaceActions.setPalette(palette));\r\n        dispatch(interfaceActions.setFocusedStatus(true))\r\n    }, [palette, dispatch]);\r\n\r\n    const textRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (editorState) textRef.current!.focus()\r\n    }, [editorState]);\r\n\r\n    const deleteTask = useCallback(() => {\r\n        dispatch(stateActions.deleteTask(todoListId, task.id))\r\n    }, [todoListId, task.id, dispatch]);\r\n\r\n    useLayoutEffect(() => {\r\n        textRef.current!.textContent = task.title;\r\n        if (task.title === '') editTask()\r\n    }, [task, editTask]);\r\n\r\n    const changeDoneStatus = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newTask = {...task, status: e.currentTarget.checked ? 2 : 0};\r\n        dispatch(stateActions.changeTask(newTask))\r\n    }, [task, dispatch]);\r\n\r\n    const onBlurHandler = useCallback(() => {\r\n        const taskTitle = textRef.current!.textContent;\r\n        if (validate(taskTitle)) {\r\n            let newTask = {...task, title: taskTitle!};\r\n            dispatch(stateActions.changeTask(newTask));\r\n            setEditorState(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else if (!validate(taskTitle) && task.title !== '') {\r\n            textRef.current!.textContent = task.title;\r\n            setEditorState(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n            deleteTask()\r\n        }\r\n    }, [task, deleteTask, dispatch]);\r\n\r\n    const onKeyDownHandler = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.keyCode === 13 || e.keyCode === 27) {\r\n            e.preventDefault();\r\n            textRef.current!.blur()\r\n        }\r\n    }, []);\r\n\r\n    const captureClick = useDrag(({event}) => {\r\n        event?.stopPropagation();\r\n    });\r\n\r\n    /*const priority = task.priority === 0 ? 'Low' : 1 ? 'Middle' : 2 ?\r\n        'High' : 3 ? 'Urgently' : 'Later';*/\r\n\r\n    return (\r\n        <TaskWrapper $editable={editable && !focusedStatus} $editorState={editorState}>\r\n            <TaskButtons editTask={editTask} deleteTask={deleteTask} palette={palette}/>\r\n            <TaskBackground $editable={editable} $palette={palette} $editorState={editorState}>\r\n                <TaskCheckbox task={task} changeDoneStatus={changeDoneStatus} editable={editable}/>\r\n                <TaskText contentEditable={editorState} onKeyDown={e => onKeyDownHandler(e)}\r\n                          ref={textRef} onBlur={onBlurHandler} {...editorState && {...captureClick()}}/>\r\n            </TaskBackground>\r\n        </TaskWrapper>\r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTask, isEqual);\r\n\r\n","import React, {RefObject, useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {animated, useSprings} from \"react-spring\";\r\nimport {useDrag, useHover} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {movePos} from \"../../hooks/movePos\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\n\r\nexport const TasksWrapper = styled.div<{ $height: number }>`\r\n  user-select: none;\r\n  position: relative;\r\n  height: ${props => props.$height}px;\r\n  transition: height 0.3s cubic-bezier(0.25, 0, 0, 1) 0.2s;\r\n`;\r\n\r\nconst TaskWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  overflow: visible;\r\n  padding: 10px 0;\r\n  pointer-events: auto;\r\n  text-align: center;\r\n  font-size: 14.5px;\r\n`;\r\n\r\ntype PropsType = {\r\n    todoListId: string;\r\n    tasks: TaskType[],\r\n    setHeight: (height: number) => void,\r\n    palette: NeumorphColorsType,\r\n    setHoveredStatus: (status: boolean) => void\r\n};\r\n\r\nconst TasksContainer: React.FC<PropsType> = ({tasks, todoListId, setHeight, palette, setHoveredStatus}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const width = useSelector((store: AppStateType) => store.interface.width, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = useCallback((order: Array<number>, down?: boolean, originalIndex?: number, y?: number): any => (index: number) => {\r\n            if (down && index === originalIndex && y !== undefined) {\r\n                const calcY = y > bounds.current[1] ? bounds.current[1] + (y - bounds.current[1]) * 0.1 : y < bounds.current[0] ?\r\n                    bounds.current[0] + (y - bounds.current[0]) * 0.1 : y;\r\n                return {\r\n                    scale: 1.2,\r\n                    zIndex: 2,\r\n                    y: initialYofDragged.current! + calcY,\r\n                    opacity: 1,\r\n                    immediate: (prop: string): boolean => prop === 'zIndex' || prop === 'y',\r\n                }\r\n            } else {\r\n                return {\r\n                    scale: 1,\r\n                    y: initialY.current.length < tasks.length ? initialY.current[order.indexOf(tasks.length-index-2)] || 0\r\n                        : initialY.current[order.indexOf(tasks.length-index-1)] || 0,\r\n                    zIndex: 'inherit',\r\n                    opacity: 1,\r\n                    immediate: false,\r\n                }\r\n            }\r\n        }, [tasks]);\r\n\r\n    const order = useRef<Array<number>>([]);\r\n    const initialYofDragged = useRef<number | null>(null);\r\n    const memoizedOrder = useRef<Array<number>>([]);\r\n    const memoizedTasksId = useRef<Array<string>>([]);\r\n    const initialY = useRef<Array<number>>([]);\r\n    const heights = useRef<Array<number>>([]);\r\n    const bounds = useRef<Array<number>>([]);\r\n    const elementsBorder = useRef<Array<{topBorder: number, center: number, bottomBorder: number}>>([]);\r\n    const elementsRef = useRef<Array<RefObject<HTMLDivElement>>>([]);\r\n    const [height, setCurrentHeight] = useState<number>(0)\r\n\r\n    const [springs, setSprings] = useSprings(tasks.length, settings(order.current), [tasks]);\r\n\r\n    const [forceRerender, rerender] = useState<number>(0);\r\n    useEffect(() => {\r\n        elementsRef.current = tasks.map(() => React.createRef());\r\n\r\n        let i = 1\r\n        rerender(i)\r\n        i++;\r\n    }, [tasks]);\r\n\r\n    const calcPositions = useCallback((heightsArray: Array<number>) => {\r\n        initialY.current = heightsArray.map((height, index) => {\r\n            return heightsArray.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += heightsArray[i - 1]\r\n                }\r\n                return total\r\n            }, 0)\r\n        });\r\n        elementsBorder.current = initialY.current.map((item, i) => ({\r\n            topBorder: item,\r\n            center: item + heightsArray[i]/2,\r\n            bottomBorder: item + heightsArray[i]\r\n        }));\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        if (!editable && tasks.length !== 0) {\r\n            order.current = tasks.map((_, i) => i);\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        }\r\n        if (editable && tasks.length > memoizedTasksId.current.length) {\r\n            order.current = [0, ...order.current.map(item => item + 1)];\r\n            heights.current = [elementsRef.current[0].current!.offsetHeight, ...heights.current];\r\n        }\r\n        if (editable && tasks.length < memoizedTasksId.current.length) {\r\n            const deletedTaskIndex = memoizedTasksId.current.findIndex(taskId => tasks.findIndex(item => item.id === taskId) === -1);\r\n            const deletedOrder = order.current.indexOf(deletedTaskIndex);\r\n            order.current = order.current.filter(index => index !== deletedTaskIndex)\r\n                .map(item => item > deletedTaskIndex ? item - 1 : item);\r\n            heights.current = heights.current.filter((_, index) => index !== deletedOrder);\r\n        }\r\n        if (tasks.length === memoizedTasksId.current.length) {\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        }\r\n        calcPositions(heights.current);\r\n        setSprings(settings(order.current));\r\n        const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n        setCurrentHeight(heightsSum);\r\n        setHeight(heightsSum);\r\n        memoizedTasksId.current = tasks.map(item => item.id);\r\n        console.log('....here....')\r\n    }, [forceRerender, width, calcPositions, setHeight, setSprings, setCurrentHeight, editable, tasks, settings]);\r\n\r\n    const getNewIndex = useCallback((index: number, y: number) => {\r\n        if (y > 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (y > height + heights.current[index + 1] / 2) {\r\n                newIndex += 1;\r\n                height += heights.current[index + 1];\r\n            }\r\n            return newIndex > heights.current.length - 1 ? heights.current.length - 1 : newIndex;\r\n        }\r\n        if (y < 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (Math.abs(y) > height + heights.current[index - 1] / 2) {\r\n                newIndex -= 1;\r\n                height += heights.current[index - 1];\r\n            }\r\n            return newIndex < 0 ? 0 : newIndex;\r\n        }\r\n        return index\r\n    }, [])\r\n\r\n    const gesture = useDrag(({args: [originalIndex, trueIndex], down, movement: [, y], event}) => {\r\n        event?.stopPropagation();\r\n        const curIndex = order.current.indexOf(trueIndex);\r\n        if (initialYofDragged.current === null) {\r\n            initialYofDragged.current = initialY.current[curIndex];\r\n            bounds.current = [-initialYofDragged.current, initialY.current[tasks.length-1] - initialYofDragged.current];\r\n            dispatch(interfaceActions.setFocusedStatus(true))\r\n        }\r\n        if (!initialYofDragged.current) initialYofDragged.current = initialY.current[curIndex];\r\n        const curRow = getNewIndex(curIndex, y);//текущий новый индекс\r\n        const newOrder = movePos(order.current, curIndex, curRow);// новый порядок\r\n        const newHeights = movePos(heights.current, curIndex, curRow);//новый массив высот\r\n        calcPositions(newHeights);\r\n        setSprings(settings(newOrder, down, originalIndex, y));\r\n        if (!down) {\r\n            order.current = newOrder;\r\n            heights.current = newHeights;\r\n            initialYofDragged.current = null;\r\n            if (!isEqual(order.current, memoizedOrder.current)) {\r\n                const newOrder = order.current.map(item => tasks[item].id)\r\n                dispatch(stateActions.swapTasks(todoListId, newOrder))\r\n            }\r\n            dispatch(interfaceActions.setFocusedStatus(false))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const hovering = useHover(({hovering}) => {\r\n        if (hovering) setHoveredStatus(true);\r\n        if (!hovering) setHoveredStatus(false)\r\n    });\r\n\r\n    return (\r\n        <TasksWrapper $height={height} {...editable && {...hovering()}}>\r\n            {tasks.map((task, i) =>\r\n                <TaskWrapper {...editable && {...gesture(tasks.length-i-1, i)}} key={task.id} style={springs[tasks.length-i-1]}\r\n                             ref={elementsRef.current[i]}>\r\n                    <TodoListTask task={task} todoListId={todoListId} palette={palette}/>\r\n                </TaskWrapper>)}\r\n        </TasksWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TasksContainer, isEqual);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef} from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\nimport {useDrag} from \"react-use-gesture\";\r\n\r\nconst ListTitle = styled.div<{$palette: NeumorphColorsType, contentEditable: boolean}>`\r\n  background-color: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  position: relative;\r\n  font-size: 25px;\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  margin: 0 auto 10px auto;\r\n  width: 100%;\r\n  cursor: ${props => props.contentEditable ? 'text' : 'inherit'};\r\n  border-radius: 10px;\r\n  outline: none;\r\n  display: inline-block;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-break: after-white-space;\r\n  transform: scale(${props => props.contentEditable ? 1.3 : 1});\r\n  transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n  &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: ${props => props.$palette.innerShadows};\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    listTitle: string,\r\n    id: string,\r\n    switchTitleMode: (state: boolean) => void,\r\n    isTitleEditable: boolean,\r\n    palette: NeumorphColorsType,\r\n    deleteTodoList: () => void\r\n};\r\n\r\nconst TodoListTitle: React.FC<PropsType> = ({listTitle, id, isTitleEditable,\r\n                                                deleteTodoList, switchTitleMode, palette}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && isTitleEditable) {\r\n            ref.current.focus();\r\n            dispatch(interfaceActions.setFocusedStatus(true))\r\n        }\r\n    }, [isTitleEditable, dispatch]);\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    useLayoutEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.textContent = listTitle;\r\n            if (listTitle === '') switchTitleMode(true)\r\n        }\r\n    }, [listTitle, switchTitleMode]);\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.keyCode === 13 || e.keyCode === 27 ) {\r\n            e.preventDefault();\r\n            ref.current!.blur()\r\n        }\r\n    };\r\n    const onBlurHandler = () => {\r\n        if (validate(ref.current!.textContent)) {\r\n            dispatch(stateActions.changeTodoListTitle(id, ref.current!.textContent!));\r\n            switchTitleMode(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else if (!validate(ref.current!.textContent) && listTitle !== '') {\r\n            ref.current!.textContent = listTitle;\r\n            switchTitleMode(false);\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(interfaceActions.setFocusedStatus(false));\r\n            deleteTodoList()\r\n        }\r\n    };\r\n\r\n    const captureClick = useDrag(({event}) => {\r\n        event?.stopPropagation();\r\n    })\r\n\r\n    return (\r\n        <ListTitle contentEditable={isTitleEditable} ref={ref} onKeyDown={e => onKeyPressHandler(e)}\r\n                   onBlur={onBlurHandler} $palette={palette} {...isTitleEditable && {...captureClick()}}/>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTitle);\r\n\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 7px;\r\n    left: 7px;\r\n    border-radius: 100%;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity .6s cubic-bezier(0.25, 0, 0, 1), width 0s linear .6s, height 0s linear .6s;\r\n`;\r\n\r\nexport const Button = styled.div<{ styles: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.styles.background};\r\n    color: ${props => props.styles.color};\r\n    box-shadow: ${props => props.styles.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.styles.color};\r\n        color: ${props => props.styles.background};\r\n    }\r\n    &:first-child:nth-last-child(3),\r\n        &:first-child:nth-last-child(3) ~ * {\r\n            &:nth-child(1) {\r\n                left: 50px;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(3) {\r\n                left: 0;\r\n                top: 50px;\r\n            }\r\n        }\r\n`;\r\n\r\ntype PropsType = {\r\n    colors: NeumorphColorsType,\r\n    deleteTodoList: () => void,\r\n    addTask: () => void,\r\n    editList: (state: boolean) => void,\r\n};\r\n\r\nconst ContextButtons: React.FC<PropsType> = ({colors, deleteTodoList, addTask, editList}) => {\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Button styles={colors}\r\n                    onClick={addTask}>\r\n                <FontAwesomeIcon icon=\"plus\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={deleteTodoList}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={() => editList(true)}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(ContextButtons);\r\n\r\n","import React, {useCallback, useRef, useState} from \"react\";\r\nimport TodoListTasks from '../Tasks/TasksContainer';\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useHover} from \"react-use-gesture\";\r\nimport ContextButtons, {ButtonWrapper} from \"./ContextButtons\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport {stateActions} from \"../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../redux/interfaceReducer\";\r\n\r\nconst SingleListWrapper = styled.div<{ $editable: boolean, $closeLookState: boolean }>`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 50%;\r\n  backface-visibility: hidden;\r\n  overflow: visible;\r\n  padding: 35px;\r\n  cursor: ${props => props.$editable || props.$closeLookState ? 'inherit' : 'pointer'};\r\n  font-family: NunitoSans-Light;\r\n  &:hover {\r\n      z-index: 5;\r\n  }\r\n  ${props => !props.$editable && !props.$closeLookState &&\r\n    `&:hover ${ListOuterLayer}{\r\n        transform: translateZ(100px)\r\n     }\r\n     &:hover ${ListShadow}{\r\n        box-shadow: 0 0 35px 20px rgba(0, 0, 0, 0.8);\r\n        opacity: 0.5\r\n     }`}\r\n`;\r\n\r\nconst ListOuterLayer = styled.div<{$palette: number, $editable: boolean, $closeLookState: boolean, $isTasksHovered: boolean, $focusedStatus: boolean}>`\r\n  cursor: ${props => props.$editable ? 'grab' : 'inherit'};\r\n  border-radius: 30px;\r\n  padding: 35px;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 100%;\r\n  background: ${props => neumorphColors[props.$palette].concaveBackground};\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  transition: transform .6s cubic-bezier(0.25, 0, 0, 1);\r\n  &:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      transition: opacity .3s linear;\r\n      box-shadow: ${props => neumorphColors[props.$palette].shadows};\r\n      opacity: ${props => props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && !props.$focusedStatus && !props.$isTasksHovered &&\r\n    `&:hover ${ButtonWrapper},  ${ButtonWrapper}:hover {\r\n           width: 120px;\r\n           height: 120px;\r\n           opacity: 1;\r\n           transition: opacity .6s cubic-bezier(0.25, 0, 0, 1);\r\n       }\r\n       &:hover ${ListInnerLayer} {\r\n           opacity: 1\r\n       }`};\r\n  &:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: 14px 14px 35px rgba(0, 0, 0, .4);\r\n      transition: opacity .3s linear;\r\n      opacity: ${props => !props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && `\r\n    &:hover:after {opacity: 0};\r\n    &:hover:before {opacity: 1};\r\n    &:active {\r\n        cursor: grabbing;\r\n        &:after {opacity: 1};\r\n        &:before {opacity: 0};\r\n        ${ListInnerLayer} {opacity: 1}\r\n    }`}\r\n`;\r\n\r\nconst ListInnerLayer = styled.div<{ $palette: number }>`\r\n  position: absolute;\r\n  border-radius: 20px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  height: calc(100% - 20px);\r\n  width: calc(100% - 20px);\r\n  padding: 25px;\r\n  box-shadow: ${props => neumorphColors[props.$palette].innerShadows};\r\n  opacity: 0;\r\n  transition: opacity .3s linear;\r\n`;\r\n\r\nconst ListShadow = styled.div<{ $editable: boolean, $closeLookState: boolean }>`\r\n  display: ${props => props.$editable || props.$closeLookState ? 'none' : 'block'};\r\n  position: absolute;\r\n  z-index: -2;\r\n  width: calc(100% - 80px);\r\n  height: calc(100% - 80px);\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  border-radius: 30px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.8);\r\n  opacity: 0.7;\r\n  transition-property: box-shadow, opacity;\r\n  transition-duration: .6s;\r\n  transition-timing-function: cubic-bezier(0.25, 0, 0, 1);\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    listTitle: string,\r\n    listTasks?: TaskType[],\r\n    paletteIndex: number,\r\n    setNewHeights: (height: number, id: string) => void,\r\n    deleteList: (id: string) => void,\r\n    closeLook: boolean\r\n};\r\n\r\nconst TodoList: React.FC<PropsType> = ({\r\n                                           id, listTitle, listTasks, paletteIndex,\r\n                                           setNewHeights, deleteList, closeLook\r\n                                       }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.interface.focusedStatus, shallowEqual);\r\n\r\n    const [isTasksHovered, setTasksHoveredStatus] = useState<boolean>(false);\r\n    const setHoveredStatus = useCallback((status: boolean) => {\r\n        setTasksHoveredStatus(status)\r\n    }, []);\r\n\r\n    const currHeight = useRef<number>(0);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const setHeight = useCallback((height: number) => {\r\n        if (currHeight.current === 0 && ref.current) {\r\n            currHeight.current = ref.current.offsetHeight\r\n        }\r\n        if (currHeight.current !== height) {\r\n            setNewHeights(height + currHeight.current, id);\r\n        }\r\n    }, [id, setNewHeights]);\r\n\r\n    const addTask = useCallback(() => {\r\n        const taskId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        const newTask = {\r\n            title: '',\r\n            id: taskId,\r\n            todoListId: id,\r\n        }\r\n        dispatch(stateActions.addTask(newTask, id));\r\n    }, [id, dispatch]);\r\n\r\n    const deleteTodoList = useCallback(() => {\r\n        deleteList(id)\r\n        dispatch(stateActions.deleteTodoList(id))\r\n    }, [id, dispatch, deleteList]);\r\n\r\n    const [filterValue] = useState<string>('All');\r\n   /* const changeFilter = (newFilterValue: string) => {\r\n        setFilterValue(newFilterValue)\r\n    };*/\r\n    const tasks = listTasks ? listTasks.filter(t => {\r\n        if (filterValue === \"Active\") {\r\n            return t.status === 0;\r\n        }\r\n        if (filterValue === \"Completed\") {\r\n            return t.status === 2;\r\n        }\r\n        return true;\r\n    }) : [];\r\n\r\n    //hover Effect\r\n\r\n    const bind = useHover(({hovering}) => {\r\n        if (focusedStatus || closeLook) return\r\n        if (hovering) {\r\n            dispatch(interfaceActions.setPalette(neumorphColors[paletteIndex]));\r\n        }\r\n        if (!hovering) {\r\n            dispatch(interfaceActions.setPalette(defaultPalette));\r\n        }\r\n    });\r\n    //close look animations\r\n\r\n    const [isTitleEditable, setTitleEditMode] = useState<boolean>(false);\r\n    const switchTitleMode = useCallback((state: boolean) => {\r\n        setTitleEditMode(state)\r\n    }, []);\r\n\r\n    /*console.log(`${listTitle} render`)*/\r\n    return (\r\n        <SingleListWrapper {...!closeLook && {...bind()}} ref={ref} $editable={editable} $closeLookState={closeLook}>\r\n            <ListShadow $editable={editable} $closeLookState={closeLook}/>\r\n            <ListOuterLayer $palette={paletteIndex} $editable={editable} $isTasksHovered={isTasksHovered}\r\n                            $closeLookState={closeLook} $focusedStatus={focusedStatus}>\r\n                <ListInnerLayer $palette={paletteIndex}/>\r\n                <ContextButtons colors={neumorphColors[paletteIndex]} deleteTodoList={deleteTodoList}\r\n                                addTask={addTask} editList={switchTitleMode}/>\r\n                <TodoListTitle listTitle={listTitle} id={id} isTitleEditable={isTitleEditable}\r\n                               deleteTodoList={deleteTodoList}\r\n                               switchTitleMode={switchTitleMode} palette={neumorphColors[paletteIndex]}/>\r\n                <TodoListTasks todoListId={id} tasks={tasks} setHeight={setHeight}\r\n                               palette={neumorphColors[paletteIndex]}\r\n                               setHoveredStatus={setHoveredStatus}/>\r\n                {/* <TodoListFooter filterValue={filterValue} changeFilter={changeFilter}/>*/}\r\n            </ListOuterLayer>\r\n        </SingleListWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoList, isEqual);\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, SpringValue} from \"react-spring\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {NeumorphColorsType} from \"../../neumorphColors\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\nconst CloseButtonAnimatedWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  border-radius: 100%;\r\n`;\r\n\r\nconst CloseButton = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    width: ${isMobile ? 60 : 40}px;\r\n    height: ${isMobile ? 60 : 40}px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    box-shadow: ${props => props.$palette.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background: ${props => props.$palette.color};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n`;\r\n\r\ntype PropsType ={\r\n    closeButtonAnimation: {x: SpringValue<number>, y: SpringValue<number>, opacity: SpringValue<number>, display: SpringValue<string>},\r\n    returnFromCloseLook: () => Promise<void>\r\n}\r\n\r\nconst ClosingButton: React.FC<PropsType> = ({closeButtonAnimation, returnFromCloseLook}) => {\r\n\r\n    const currentPalette = useSelector((state: AppStateType) => state.interface.currentPaletteIndex, shallowEqual);\r\n\r\n    return (\r\n        <CloseButtonAnimatedWrapper onClick={returnFromCloseLook} style={closeButtonAnimation}>\r\n            <CloseButton $palette={currentPalette}>\r\n                <FontAwesomeIcon icon=\"times\"/>\r\n            </CloseButton>\r\n        </CloseButtonAnimatedWrapper>\r\n    )\r\n};\r\n\r\nexport default React.memo(ClosingButton, isEqual)","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {animated, useSprings, SpringStartFn, useSpring} from \"react-spring\";\r\nimport {swap} from \"../../../hooks/swap\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport TodoList from \"../../SingleToDoList/TodoList\";\r\nimport {defaultPalette, neumorphColors} from \"../../neumorphColors\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport ClosingButton from \"./CloseButton\";\r\nimport {interfaceActions} from \"../../../redux/interfaceReducer\";\r\nimport {stateActions} from \"../../../redux/stateReducer\";\r\nimport {isMobile} from \"react-device-detect\";\r\n\r\n\r\nconst TodoListContainer = styled(animated.div)<{ $width: number }>` \r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  width: ${props => props.$width}px;\r\n`;\r\n\r\ntype PropsType = {\r\n    setWrapperAnimation: SpringStartFn<{ x: string, rotateX: number, rotateZ: number, y: number }>,\r\n    scrollByListDrugging: (direction: string) => void,\r\n    setCloseLookState: (height: number) => void,\r\n    returnFromCloseLookState: () => void,\r\n    switchScrollBar: (visibility: boolean) => void,\r\n}\r\n\r\ntype GridItemsType = {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    id: string,\r\n    rightX: number,\r\n    botY: number,\r\n    horizontalCenter: number,\r\n    verticalCenter: number,\r\n    index: number\r\n}\r\n\r\nconst AllListsContainer: React.FC<PropsType> = ({\r\n                                              setWrapperAnimation, scrollByListDrugging,\r\n                                              setCloseLookState, returnFromCloseLookState, switchScrollBar\r\n                                          }) => {\r\n    //resize logic\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const todoLists = useSelector((store: AppStateType) => store.todoList.todoLists, isEqual);\r\n    const width = useSelector((store: AppStateType) => store.interface.width, shallowEqual);\r\n    const interfaceHeight = useSelector((store: AppStateType) => store.interface.interfaceHeight, shallowEqual);\r\n    const scrollableState = useSelector((state: AppStateType) => state.interface.scrollableState, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.interface.focusedStatus, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //state-like mutable container\r\n    const gridItems = useRef<Array<GridItemsType>>([]);\r\n\r\n    const [springs, setSprings] = useSprings(todoLists.length, i => {\r\n        if (gridItems.current.length === 0) return {\r\n            x: 0, y: 0, zIndex: 3, opacity: 1, display: 'block'\r\n        };\r\n        const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i);\r\n        return {\r\n            x: currentSettings ? currentSettings.x : 0,\r\n            y: currentSettings ? currentSettings.y : 0,\r\n            opacity: 1,\r\n            zIndex: 3,\r\n            display: 'block',\r\n        }\r\n    }, [todoLists])\r\n\r\n// child height calculation logic\r\n    const columns = useMemo(() => {\r\n        return width >= 1700 ? 4 : width >= 1100 ? 3 : width >= 700 ? 2 : 1\r\n    }, [width]);\r\n    const currWidth = useMemo(() => width / columns, [width, columns]);\r\n\r\n    const recalculateMeasures = useCallback(() => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = gridItems.current.map((item, i) => {\r\n            const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n            const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += height) - height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter, height}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(interfaceActions.setHeight(height.current));\r\n        }\r\n    }, [currWidth, columns, dispatch]);\r\n\r\n\r\n    const temporaryValue = useRef<Array<{ height: number, id: string }>>([]);\r\n    const setNewHeights = useCallback((height: number, id: string) => {\r\n        const findHeight = temporaryValue.current.findIndex(item => item.id === id);\r\n        const newHeightsArray = findHeight === -1 ? [...temporaryValue.current, {height, id}]\r\n            : temporaryValue.current.map((item, i) => {\r\n                if (i === findHeight) return {height, id};\r\n                return item\r\n            });\r\n        temporaryValue.current = newHeightsArray\r\n        if (newHeightsArray.length === todoLists.length) {\r\n            recalculateMeasures();\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y}\r\n            })\r\n        }\r\n    }, [todoLists, setSprings, recalculateMeasures])\r\n\r\n    const deleteList = useCallback((id: string) => {\r\n        temporaryValue.current = temporaryValue.current.filter(item => item.id !== id)\r\n    }, []);\r\n\r\n    const height = useRef<number>(0);\r\n\r\n//swap animation logic\r\n    useEffect(() => {\r\n        if (!editable && gridItems.current.length === 0) {\r\n            const newHeights = new Array(columns).fill(0);\r\n            gridItems.current = todoLists.map(\r\n                (item, i) => {\r\n                    const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n                    const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n                    const column = i % columns;\r\n                    const x = currWidth * column;\r\n                    const y = (newHeights[column] += height) - height\r\n                    const rightX = x + currWidth;\r\n                    const botY = y + height;\r\n                    const horizontalCenter = x + currWidth / 2;\r\n                    const verticalCenter = y + height / 2;\r\n                    const index = i;\r\n                    return {x, y, height, id: item.id, botY, rightX, horizontalCenter, verticalCenter, index}\r\n                });\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(interfaceActions.setHeight(height.current));\r\n        }\r\n        if (editable && gridItems.current.length < todoLists.length) {\r\n            gridItems.current = [{\r\n                x: 0, y: 0, height: 0, id: todoLists[0].id, botY: 0,\r\n                rightX: 0, horizontalCenter: 0, verticalCenter: 0, index: 0\r\n            }, ...gridItems.current].map((item, i) => {\r\n                if (i === 0) return item;\r\n                return {...item, index: item.index + 1}\r\n            })\r\n            recalculateMeasures()\r\n        }\r\n        if (editable && gridItems.current.length > todoLists.length) {\r\n            const deletedListIndex = gridItems.current.findIndex(item =>\r\n                todoLists.findIndex(list => list.id === item.id) === -1);\r\n            const deletedList = gridItems.current[deletedListIndex];\r\n            gridItems.current = gridItems.current.map((item) => {\r\n                const index = item.index > deletedList.index ? item.index - 1 : item.index;\r\n                return {...item, index}\r\n            }).filter((item, i) => i !== deletedListIndex);\r\n            recalculateMeasures()\r\n        }\r\n        if (gridItems.current.length === todoLists.length) recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n        console.log('big effect')\r\n    }, [todoLists, columns, currWidth, dispatch, editable, recalculateMeasures, setSprings]);\r\n\r\n    useEffect(() => {\r\n        recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        });\r\n    }, [width, columns, currWidth, recalculateMeasures, todoLists.length, setSprings]);\r\n\r\n    const reorder = useCallback((oldIndex: number, newIndex: number) => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = swap(gridItems.current, oldIndex, newIndex).map((item, i) => {\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += item.height) - item.height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + item.height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + item.height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(interfaceActions.setHeight(height.current));\r\n        }\r\n    }, [currWidth, columns, dispatch]);\r\n\r\n    const calculatePositions = useCallback((x: number, y: number) => {\r\n        const xPos = currItem.current.horizontalCenter + x;\r\n        const yPos = currItem.current.verticalCenter + y;\r\n        const halfHeight = currItem.current.height / 2;\r\n        let i = gridItems.current.findIndex(item => {\r\n            return (item.x < xPos && item.rightX > xPos && item.verticalCenter + halfHeight > yPos && item.verticalCenter - halfHeight < yPos)\r\n        });\r\n        return i < todoLists.length && i >= 0 ? i : null;\r\n    }, [todoLists]);\r\n\r\n    const setActualSprings = useCallback((x: number, y: number, springsIndex: number) => {\r\n        setSprings(i => {\r\n            if (i === springsIndex) {\r\n                return {\r\n                    x: currItem.current.x + x,\r\n                    y: currItem.current.y + y,\r\n                    zIndex: 4,\r\n                    config: {tension: 200, clamp: true},\r\n                    immediate: (n: string): boolean => n === 'zIndex'\r\n                }\r\n            }\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    }, [todoLists, setSprings]);\r\n\r\n    const currItem = useRef<GridItemsType>(null as unknown as GridItemsType);\r\n    const bounds = useRef<{ left: number, right: number, top: number, bottom: number, pageTop: number, pageBottom: number }>({\r\n        left: 0, right: 0, top: 0, bottom: 0, pageTop: 0, pageBottom: 0\r\n    });\r\n    const eventCoords = useRef<{ offsetX: number, offsetY: number, clientX: number, clientY: number } | null>(null);\r\n    const virtualY = useRef<number>(0);\r\n    const addedY = useRef<number>(0);\r\n    const timeoutId = useRef<number | null>(null);\r\n\r\n    const getBounds = useCallback(() => {\r\n        const left = -currItem.current!.x - 35 + eventCoords.current!.offsetX;\r\n        const right = width - currItem.current!.rightX + 35 + (width / columns - eventCoords.current!.offsetX);\r\n        const top = -currItem.current!.y + 35 - eventCoords.current!.offsetY + 35 + 25;\r\n        const bottom = height.current - currItem.current!.y - 35 - (eventCoords.current!.offsetY + 35);\r\n        const pageTop = -eventCoords.current!.clientY + interfaceHeight + 35 + 25;\r\n        const pageBottom = window.innerHeight - window.innerHeight * 0.1 + pageTop - interfaceHeight - 25;\r\n        bounds.current = {left, right, top, bottom, pageTop, pageBottom}\r\n    }, [width, columns, interfaceHeight]);\r\n\r\n    const gesture = useDrag(({\r\n                                 args: [index, springsIndex], down, movement: [x, y],\r\n                                 active, first, event\r\n                             }) => {\r\n        if (scrollableState && isMobile) return;\r\n        event?.stopPropagation();\r\n        const draggedList = gridItems.current.findIndex(item => item.index === index);\r\n        if (!focusedStatus) {\r\n            dispatch(interfaceActions.setFocusedStatus(true))\r\n        }\r\n        if (first) {\r\n            currItem.current = gridItems.current[draggedList];\r\n            //@ts-ignore\r\n            eventCoords.current = {offsetX: event.offsetX, offsetY: event.offsetY, clientX: event.clientX, clientY: event.clientY};\r\n            getBounds();\r\n            virtualY.current = y;\r\n            addedY.current = 0;\r\n        }\r\n        if (timeoutId.current !== null) {\r\n            clearTimeout(timeoutId.current);\r\n            timeoutId.current = null\r\n        }\r\n        if (active) {\r\n            if (y > bounds.current.pageBottom && virtualY.current < bounds.current.bottom) {\r\n                const awaitScroll = async () => {\r\n                    const promise = new Promise((resolve) => {\r\n                        timeoutId.current = window.setTimeout(() => {\r\n                                scrollByListDrugging('bottom');\r\n                                virtualY.current = virtualY.current + 5;\r\n                                addedY.current = addedY.current + 5;\r\n                                const newIndex = calculatePositions(x, virtualY.current);\r\n                                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                setActualSprings(x, virtualY.current, springsIndex)\r\n                                resolve()\r\n                            }\r\n                            , 10)\r\n                    });\r\n                    await promise.then(() => {\r\n                        if (virtualY.current < bounds.current.bottom) awaitScroll()\r\n                    })\r\n                }\r\n                (async () => await awaitScroll())()\r\n            } else if (y < bounds.current.pageTop && virtualY.current > bounds.current.top) {\r\n                const awaitScroll = async () => {\r\n                    const promise = new Promise((resolve) => {\r\n                        timeoutId.current = window.setTimeout(() => {\r\n                                scrollByListDrugging('top');\r\n                                virtualY.current = virtualY.current - 5;\r\n                                addedY.current = addedY.current - 5;\r\n                                const newIndex = calculatePositions(x, virtualY.current);\r\n                                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                setActualSprings(x, virtualY.current, springsIndex)\r\n                                resolve()\r\n                            }\r\n                            , 10)\r\n                    });\r\n                    await promise.then(() => {\r\n                        if (virtualY.current > bounds.current.top) awaitScroll()\r\n                    })\r\n                }\r\n                (async () => await awaitScroll())()\r\n            } else {\r\n                virtualY.current = y + addedY.current;\r\n                const newIndex = calculatePositions(x, virtualY.current);\r\n                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                setActualSprings(x, virtualY.current, springsIndex)\r\n            }\r\n        }\r\n        if (!down) {\r\n            eventCoords.current = null;\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y, zIndex: 3}\r\n            });\r\n            const newOrder = gridItems.current.map(item => item.id)\r\n            dispatch(stateActions.swapTodoLists(newOrder));\r\n            dispatch(interfaceActions.setFocusedStatus(false))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    //close look logic\r\n    const [closeButtonAnimation, setCloseButtonAnimation] = useSpring(() => ({\r\n        x: 0,\r\n        y: 0,\r\n        opacity: 0,\r\n        display: 'none'\r\n    }));\r\n\r\n    const [indexOfLookedList, setIndexOfLookedList] = useState<number | null>(null);\r\n    const closeLook = useCallback(async (index: number) => {\r\n        if (editable || indexOfLookedList !== null) return;\r\n        const currItem = gridItems.current.find(item => item.index === index)!;\r\n        switchScrollBar(false);\r\n        dispatch(interfaceActions.setCloseLookState(true));\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length - 1 - index) return {\r\n                to: async animate => {\r\n                    await animate({opacity: 0});\r\n                    await animate({display: 'none'})\r\n                }\r\n            };\r\n            return {to: false}\r\n        });\r\n        dispatch(interfaceActions.setHeight(currItem.height));\r\n        setCloseLookState(currItem.height);\r\n        dispatch(interfaceActions.setPalette(neumorphColors[(todoLists.length - 1 - index) % neumorphColors.length]));\r\n        setIndexOfLookedList(index);\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length - 1 - index) return {to: false};\r\n            return {\r\n                y: window.innerHeight / 2 - currItem.height / 2,\r\n                x: width / 2 - (width / columns) / 2\r\n            }\r\n        });\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({\r\n                    y: window.innerHeight / 2 - currItem.height / 2 - 25,\r\n                    x: width / 2 + (width / columns) / 2 - (isMobile ? 30 : 10),\r\n                    display: 'block',\r\n                    immediate: true\r\n                });\r\n                await animate({opacity: 1, immediate: false})\r\n            }\r\n        })\r\n    }, [todoLists, setCloseLookState, indexOfLookedList, setCloseButtonAnimation, dispatch, columns, editable, setSprings,\r\n    width, switchScrollBar]);\r\n\r\n    const returnFromCloseLook = useCallback(async () => {\r\n        switchScrollBar(false)\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({opacity: 0});\r\n                await animate({display: 'none'})\r\n            }\r\n        });\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length - 1 - indexOfLookedList!) return {to: false};\r\n            const currItem = gridItems.current.find(item => item.index === indexOfLookedList)!\r\n            return {x: currItem.x, y: currItem.y}\r\n        });\r\n        dispatch(interfaceActions.setCloseLookState(false));\r\n        returnFromCloseLookState();\r\n        dispatch(interfaceActions.setHeight(height.current));\r\n        await setWrapperAnimation({\r\n            rotateX: 45,\r\n            rotateZ: 45,\r\n            y: 275,\r\n        });\r\n        dispatch(interfaceActions.setPalette(defaultPalette));\r\n        setIndexOfLookedList(null);\r\n        setSprings(i => {\r\n            if (i !== todoLists.length - 1 - indexOfLookedList!) return {opacity: 1, display: 'block'};\r\n            return {to: false}\r\n        });\r\n    }, [todoLists, returnFromCloseLookState, indexOfLookedList, dispatch, setSprings, switchScrollBar, setCloseButtonAnimation,\r\n        setWrapperAnimation]);\r\n\r\n    return (\r\n        <>\r\n            <ClosingButton returnFromCloseLook={returnFromCloseLook} closeButtonAnimation={closeButtonAnimation}/>\r\n            {todoLists.length !== 0 && todoLists.map((list, i) =>\r\n                <TodoListContainer\r\n                    style={springs[todoLists.length - i - 1]} {...editable && {...gesture(i, todoLists.length - i - 1)}}\r\n                    onClick={() => closeLook(i)}\r\n                    $width={currWidth} key={list.id}>\r\n                    <TodoList id={list.id} paletteIndex={(todoLists.length - 1 - i) % neumorphColors.length}\r\n                              deleteList={deleteList} setNewHeights={setNewHeights} closeLook={i === indexOfLookedList}\r\n                              listTitle={list.title} listTasks={list.tasks}/>\r\n                </TodoListContainer>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AllListsContainer, isEqual)","export const swap = (arr: Array<any>, index1: number, index2: number) => arr.map((val, idx) => {\n    if (idx === index1) return arr[index2];\n    if (idx === index2) return arr[index1];\n    return val;\n});\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from \"react-use-gesture\";\r\nimport {isMobile} from 'react-device-detect'\r\nimport ScrollBar from \"./ScrollBar\";\r\nimport ScrollableWrapper from \"./ScrollableWrapper\";\r\nimport AllListsContainer from \"../DruggedLists/AllListsContainer\";\r\nimport {initialization} from \"../../../redux/stateReducer\";\r\nimport {interfaceActions} from \"../../../redux/interfaceReducer\";\r\n\r\nconst ScrollContainer: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.interface.currentPaletteIndex, shallowEqual);\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const height = useSelector((store: AppStateType) => store.interface.height, shallowEqual);\r\n    const width = useSelector((store: AppStateType) => store.interface.width, shallowEqual);\r\n    const initialLoadingState = useSelector((store: AppStateType) => store.interface.initialLoadingState, shallowEqual);\r\n    const closeLook = useSelector((store: AppStateType) => store.interface.closeLookState, shallowEqual);\r\n    const interfaceHeight = useSelector((state: AppStateType) => state.interface.interfaceHeight, shallowEqual);\r\n    const scrollableState = useSelector((state: AppStateType) => state.interface.scrollableState, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization());\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => dispatch(interfaceActions.setWidth(measuredRef.current!.offsetWidth)), 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const [{border, scrollBarHeight}, setBorders] = useState({border: 0, scrollBarHeight: 0});\r\n    const [drugged, setDrugged] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n\r\n    const measuredRef = useRef<HTMLDivElement>(null);\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(interfaceActions.setWidth(measuredRef.current!.offsetWidth))\r\n    }, [dispatch]);\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        x: '-100vw',\r\n        rotateX: 45,\r\n        rotateZ: 45,\r\n        y: 275,\r\n        config: {tension: 90, clamp: true},\r\n    }));\r\n    useEffect(() => {\r\n        if (!initialLoadingState) setWrapperAnimation({\r\n            x: window.innerWidth <= 1210 ? '-5vw' : '-15vw',\r\n        })\r\n    }, [initialLoadingState, setWrapperAnimation])\r\n\r\n    //scroll logic\r\n    const scrolledY = useRef<number>(0);\r\n    const scrolledPercent = useRef<number>(0);\r\n    const addedScrollConst = useRef<number>(window.innerWidth <= 1210 ? -window.innerHeight / 2 : 0);\r\n    const memoizedData = useRef<Array<number>>([]);\r\n    const [scrollingAnimation, setScroll] = useSpring(() => ({\r\n        y: addedScrollConst.current,\r\n        top: `0%`,\r\n        height: 0,\r\n        immediate: false\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const newScrollBarHeight = !height ? 0 : (window.innerHeight - (editable ? interfaceHeight : 0)) / height * 100;\r\n        if (window.innerWidth <= 1210 && !closeLook) {\r\n            const newBorder = editable ? (height - window.innerHeight < 0 ? 0 : height - window.innerHeight + interfaceHeight)\r\n                : height;\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight});\r\n        } else if (window.innerWidth > 1210 && !closeLook) {\r\n            const newBorder = editable ? (height - window.innerHeight < 0 ? 0 : height - window.innerHeight + interfaceHeight)\r\n                : (height - window.innerHeight < 0 ? 0.5 * height : height - window.innerHeight / 2);\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight});\r\n        }\r\n        addedScrollConst.current = editable || closeLook ? 0 : window.innerWidth <= 1210 ? -window.innerHeight / 2 : 0;\r\n        setScroll({height, y: -scrolledY.current - addedScrollConst.current});\r\n        if (!initialLoadingState) setWrapperAnimation({\r\n            x: editable || closeLook ? (window.innerWidth <= 1210 ? '5vw' : '15vw') : (window.innerWidth <= 1210 ? '-5vw' : '-15vw'),\r\n            rotateX: editable || closeLook ? 0 : 45,\r\n            rotateZ: editable || closeLook ? 0 : 45,\r\n            y: editable || closeLook ? 0 : 275,\r\n        });\r\n        if (height < window.innerHeight) setVisible(false)\r\n        else setVisible(true)\r\n        console.log('debuggg')\r\n    }, [height, width, editable, setScroll, setWrapperAnimation, closeLook, interfaceHeight, initialLoadingState]);\r\n\r\n    const visibilityOfScrollBar = useSpring({\r\n        from: {opacity: 0, right: -50, display: 'none'},\r\n        to: async animate => {\r\n            await animate(visible ? {display: 'block'} : {opacity: 0, right: -50});\r\n            await animate(visible ? {opacity: 1, right: 0} : {display: 'none'})\r\n        }\r\n    });\r\n\r\n    useWheel(({delta: [, y]}) => {\r\n        if (!visible) return;\r\n        scrolledY.current = scrolledY.current + y < border && scrolledY.current + y > 0 ? scrolledY.current + y\r\n            : scrolledY.current + y <= 0 ? 0 : border;\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current - addedScrollConst.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window});\r\n    useDrag(({delta: [, y], active, swipe: [, swipeY]}) => {\r\n        if (!visible || (!isMobile && !scrollableState)) return;\r\n        if (swipeY !== 0) {\r\n            const scrolledHeight = (window.innerHeight - interfaceHeight) * swipeY;\r\n            scrolledY.current = scrolledY.current - scrolledHeight < border && scrolledY.current - scrolledHeight > 0 ?\r\n                scrolledY.current - scrolledHeight : scrolledY.current - scrolledHeight <= 0 ? 0 : border;\r\n        }\r\n        if (active) {\r\n            const posY = -y;\r\n            scrolledY.current = scrolledY.current + posY < border && scrolledY.current + posY > 0 ? scrolledY.current + posY\r\n                : scrolledY.current + posY <= 0 ? 0 : border;\r\n        }\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current - addedScrollConst.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window, filterTaps: true, eventOptions: {passive: false}});\r\n\r\n    //scroller\r\n    const bindDraggedScrollBar = useDrag(({delta: [, y], event, first, down}) => {\r\n        event?.stopPropagation();\r\n        if (first) setDrugged(true);\r\n        const absY = y / (editable ? window.innerHeight - interfaceHeight : window.innerHeight) * 100;\r\n        scrolledPercent.current = scrolledPercent.current + absY > 0 && scrolledPercent.current + absY < 100 - scrollBarHeight ?\r\n            scrolledPercent.current + absY : scrolledPercent.current + absY <= 0 ? 0 : 100 - scrollBarHeight;\r\n        scrolledY.current = border * scrolledPercent.current / (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current - addedScrollConst.current,\r\n            top: `${scrolledPercent.current}%`,\r\n            immediate: (prop) => prop === 'top'\r\n        });\r\n        if (!down) setDrugged(false)\r\n    });\r\n\r\n    const scrollByListDrugging = useCallback((direction: string) => {\r\n        if (direction === 'bottom' && scrolledY.current < border) {\r\n            scrolledY.current = scrolledY.current + 5 < border ? scrolledY.current + 5 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n        if (direction === 'top' && scrolledY.current > 0) {\r\n            scrolledY.current = scrolledY.current - 5 > 0 ? scrolledY.current - 5 : 0;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, [border, scrollBarHeight, setScroll])\r\n\r\n    const setCloseLookState = useCallback((elementHeight: number) => {\r\n        const newBorder = elementHeight > window.innerHeight - (isMobile ? 100 : 250) ?\r\n            elementHeight - (window.innerHeight - (isMobile ? 100 : 250)) : 0;\r\n        if (newBorder > 0) {\r\n            memoizedData.current = [scrolledY.current, scrolledPercent.current, border, scrollBarHeight];\r\n            const newScrollBarHeight = (window.innerHeight - (isMobile ? 100 : 250)) / elementHeight * 100\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight})\r\n            scrolledY.current = 0;\r\n            scrolledPercent.current = 0;\r\n            setScroll({\r\n                y: 0,\r\n                top: `${0}%`,\r\n            });\r\n            setVisible(true);\r\n        }\r\n        if (newBorder === 0) {\r\n            memoizedData.current = [scrolledY.current, scrolledPercent.current, border, scrollBarHeight];\r\n            setBorders({border: 0, scrollBarHeight: 0})\r\n            scrolledY.current = 0;\r\n            scrolledPercent.current = 0;\r\n            setScroll({\r\n                y: 0,\r\n                top: `${0}%`,\r\n            });\r\n        }\r\n    }, [border, scrollBarHeight, setScroll]);\r\n\r\n    const returnFromCloseLookState = useCallback(() => {\r\n        if (memoizedData.current.length !== 0) {\r\n            scrolledY.current = memoizedData.current[0];\r\n            scrolledPercent.current = memoizedData.current[1];\r\n            setBorders({border: memoizedData.current[2], scrollBarHeight: memoizedData.current[3]})\r\n            setScroll({\r\n                y: -memoizedData.current[0],\r\n                top: `${memoizedData.current[1]}%`,\r\n            });\r\n        }\r\n        setVisible(true);\r\n    }, [setScroll]);\r\n\r\n    const switchScrollBar = useCallback((visibility: boolean) => setVisible(visibility), []);\r\n\r\n    return (\r\n        <>\r\n            <ScrollableWrapper height={scrollingAnimation.height} visible={visible} closeLook={closeLook}\r\n                               editable={editable}\r\n                               y={scrollingAnimation.y} interfaceHeight={interfaceHeight} measuredRef={measuredRef}\r\n                               wrapperAnimation={wrapperAnimation}>\r\n                <AllListsContainer setWrapperAnimation={setWrapperAnimation} scrollByListDrugging={scrollByListDrugging}\r\n                                  setCloseLookState={setCloseLookState}\r\n                                  returnFromCloseLookState={returnFromCloseLookState}\r\n                                  switchScrollBar={switchScrollBar}/>\r\n            </ScrollableWrapper>\r\n            <ScrollBar palette={currentPalette} visible={visible} visibilityOfScrollBar={visibilityOfScrollBar}\r\n                       editable={editable}\r\n                       interfaceHeight={interfaceHeight} drugged={drugged} top={scrollingAnimation.top}\r\n                       bindDraggedScrollBar={bindDraggedScrollBar} scrollBarHeight={scrollBarHeight}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollContainer;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport AnimatedBackground from \"./MainInterface/AnimatedBackground\";\r\nimport MainInterfaceContainer from \"./MainInterface/MainInterfaceContainer\";\r\nimport ScrollContainer from \"./AppAnimatedWrappers/ScrollableElements/ScrollContainer\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n      box-sizing: border-box;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      touch-action: none;\r\n    };\r\n  body {\r\n    background-color: white;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    outline: none;\r\n    &::-webkit-scrollbar { \r\n      display: none;\r\n    };\r\n  };\r\n  html {\r\n    -ms-overflow-style: none; \r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n    useEffect(() => {\r\n        const reloadFunction = () => document.location.reload()\r\n        window.addEventListener(\"orientationchange\", reloadFunction)\r\n        return () => window.removeEventListener(\"orientationchange\", reloadFunction)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <AnimatedBackground/>\r\n            <Wrapper>\r\n                <MainInterfaceContainer/>\r\n                <ScrollContainer/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport interfaceReducer from \"./interfaceReducer\";\r\nimport stateReducer from \"./stateReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: stateReducer,\r\n    interface: interfaceReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport './App.css';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n/// <reference types=\"react-dom/experimental\"\r\n/*ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));*/\r\n\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n// @ts-ignore\r\nReactDOM.unstable_createRoot(root).render( <Provider store={store}>\r\n    <App/>\r\n</Provider>);\r\n\r\n"],"sourceRoot":""}