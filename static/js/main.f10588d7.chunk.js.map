{"version":3,"sources":["redux/api.ts","hooks/movePos.ts","Components/neumorphColors.ts","redux/functionalReducer.ts","Components/tasks/TaskButtons.tsx","hooks/validate.ts","Components/tasks/TaskCheckbox.tsx","Components/tasks/TodoListTask.tsx","Components/tasks/TodoListTasks.tsx","Components/todolists/TodoListTitle.tsx","Components/todolists/ContextButtons.tsx","Components/todolists/TodoList.tsx","Components/todolists/CloseButton.tsx","Components/todolists/MappedLists.tsx","hooks/swap.ts","Components/todolists/ScrollWrapper.tsx","Components/AnimatedBackground.tsx","Components/MainInterface.tsx","Components/App.tsx","redux/store.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","headers","API-KEY","loginInstance","api","get","then","res","response","regenerator_default","a","async","_context","prev","next","status","awrap","sent","abrupt","data","stop","requestObject","email","password","rememberMe","post","_context2","_context3","title","_context4","todoListId","concat","_context5","_context6","taskId","newTask","put","_context7","delete","_context8","_context9","newTitle","_context10","swappedTask","beforeSwappedTask","putAfterItemId","_context11","swappedList","beforeSwappedList","_context12","movePos","array","moveIndex","toIndex","item","length","diff","Object","toConsumableArray","slice","neumorphColors","background","concaveBackground","shadows","innerShadows","littleShadows","innerLittleShadows","progressBarColor","color","defaultPalette","default","interfacePalette","initialState","todoLists","deepCopy","editable","listsOrder","tasksOrder","newListsId","newTasksId","errorsNumber","focusedStatus","currentPaletteIndex","initialLoadingState","pendingState","swapState","fetchingState","closeLookState","height","width","interfaceHeight","allTasks","completedTasks","actions","newTodoList","type","task","todoListTitle","newTasksOrder","newListsOrder","newTodoLists","palette","tasks","restore","state","getStateFromServer","initial","dispatch","lists","listsWithTasks","getTasks","map","id","index","findIndex","list","objectSpread2","items","Promise","all","setTimeout","functionalReducer","arguments","undefined","action","filter","newSwappedTasks","i","cloneDeep","TaskButtonWrapper","styled","div","withConfig","displayName","componentId","Button","props","$palette","React","memo","_ref","deleteTask","editTask","react_default","createElement","onClick","react_fontawesome_index_es","icon","validate","value","test","CheckboxWrapper","$editable","Checkbox","input","Svg","svg","changeDoneStatus","checked","disabled","onChange","e","d","TaskWrapper","animated","$editorState","TaskBackground","TaskText","useDispatch","useSelector","todoList","shallowEqual","_useState","useState","_useState2","slicedToArray","editorState","setEditorState","useCallback","textRef","useRef","useEffect","current","focus","useLayoutEffect","textContent","currentTarget","onBlurHandler","taskTitle","console","log","onKeyPressHandler","key","preventDefault","blur","priority","tasks_TaskButtons","tasks_TaskCheckbox","contentEditable","onKeyPress","ref","onBlur","isEqual","TasksWrapper","$height","setHeight","setHoveredStatus","store","settings","order","down","originalIndex","y","calcY","bounds","scale","zIndex","initialYofDragged","opacity","immediate","prop","initialY","indexOf","memoizedOrder","memoizedTasksId","heights","elementsBorder","elementsRef","setCurrentHeight","_useSprings","useSprings","_useSprings2","springs","setSprings","_useState3","_useState4","forceRerender","rerender","createRef","_","offsetHeight","deletedTaskIndex","deletedOrder","calcPositions","heightsSum","reduce","sum","heightsArray","total","topBorder","center","bottomBorder","getNewIndex","newIndex","Math","abs","gesture","useDrag","_ref2","_ref2$args","args","trueIndex","movement","event","first","stopPropagation","curIndex","curRow","newOrder","newHeights","filterTaps","hovering","useHover","_ref3","assign","TodoListTasks_TaskWrapper","style","tasks_TodoListTask","ListTitle","listTitle","isTitleEditable","deleteTodoList","switchTitleMode","ButtonWrapper","styles","colors","addTask","editList","ContextButtons_Button","SingleListWrapper","SingleListBottomLayer","$closeLookState","$focusedStatus","$isTasksHovered","listTasks","paletteIndex","setNewHeights","deleteList","closeLook","isTasksHovered","setTasksHoveredStatus","currHeight","filterValue","replace","c","r","random","toString","t","bind","_useState5","_useState6","setTitleEditMode","todolists_ContextButtons","todolists_TodoListTitle","tasks_TodoListTasks","CloseButton","ClosingButton","currentPalette","TodoListContainer","$width","CloseButtonAnimatedWrapper","setWrapperAnimation","scrollByListDrugging","setCloseLookState","returnFromCloseLookState","switchScrollBar","columns","useMemo","currWidth","recalculateMeasures","currentSettings","gridItems","find","x","temporaryValue","findHeight","newHeightsArray","display","Array","fill","heightInMeasuredArray","column","rightX","botY","horizontalCenter","verticalCenter","max","apply","deletedListIndex","deletedList","reorder","oldIndex","arr","index1","index2","val","idx","calculatePositions","xPos","currItem","yPos","setActualSprings","springsIndex","n","left","right","top","bottom","pageTop","pageBottom","eventCoords","virtualY","addedY","timeoutId","getBounds","window","innerHeight","offsetX","offsetY","clientY","_ref2$movement","active","draggedList","clientX","clearTimeout","awaitScroll","promise","resolve","indexOfLookedList","setIndexOfLookedList","to","animate","rotateX","rotateZ","setCloseButtonAnimation","returnFromCloseLook","_useSpring","useSpring","_useSpring2","closeButtonAnimation","Fragment","todolists_CloseButton","todolists_TodoList","AllLists","$closeLook","$interfaceHeight","ScrollableWrapper","ScrollBarWrapper","ScrollBarThing","$drugged","ScrollWrapper","authState","isMounted","resizeListener","measuredRef","offsetWidth","addEventListener","removeEventListener","border","scrollBarHeight","_useState2$","setBorders","drugged","setDrugged","visible","setVisible","config","tension","clamp","wrapperAnimation","innerWidth","scrolledY","scrolledPercent","memoizedData","_useSpring3","_useSpring4","scrollingAnimation","setScroll","visibilityOfScrollBar","from","useWheel","delta","domTarget","offset","isMobile","posY","eventOptions","passive","bindDraggedScrollBar","absY","direction","elementHeight","newBorder","newScrollBarHeight","visibility","translateX","todolists_MappedLists","$visible","library","add","far","fas","Background","AnimatedBackground","animateBackground","setBackground","RotatedBackground","Wrapper","ButtonsWrapper","EditButton","ProgressBackground","Progress","InnerBackground","$altBackground","InnerEditButtonText","SmallerButton","MediumButton","InnerSmallerButtonText","MainInterface","initialLoading","fetching","newHeight","sqrt","pow","backgroundHeight","spring","setSpring","clipPath1","clipPath2","progressBarrAnimation","setProgressBar","progress","progress1","progress2","friction","actionMessage","textTransition","useTransition","enter","leave","getState","oldTodoLists","todoListsWithNewId","addedLists","deletedLists","editedLists","addedTasks","editedTasks","deletedTasks","createAndChangeIdOfTasksInOrderList","listPromises","currentOrder","swapOrder","addedTasksInLists","currentListsStateOnServer","requiredOrder","_currentOrder","_swapOrder","groupedSwapOrder","swapOrderPending","oldList","newList","push","oldTask","resultCode","tasksPromises","newId","oldId","tasksWithNewId","newListId","t0","thisListPosId","swappedId","beforeSwappedId","listId","currentList","listsToUpdate","listsOnServer","getListOrder","t1","orderFromCurrentState","itemWithUpdatedState","curItem","forEach","currOrder","newTaskPosId","consistentSwapOrder","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_order","Symbol","iterator","done","return","finish","clipPath","translateY","GlobalStyles","createGlobalStyle","_templateObject","App","Components_AnimatedBackground","App_Wrapper","Components_MainInterface","todolists_ScrollWrapper","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","root","document","getElementById","ReactDOM","unstable_createRoot","render","es","Components_App"],"mappings":"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","file":"static/js/main.f10588d7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/todo-lists\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1/auth\",\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4801660-f864-43f9-8acc-579713cc64df'}\r\n});\r\n\r\ntype CommonResponseType<T> = {\r\n    resultCode: number;\r\n    messages: string[];\r\n    data: T\r\n};\r\ntype RestoreTasksResponseType = {\r\n    items: TaskType[];\r\n    totalCount: number;\r\n    error?: string\r\n};\r\ntype GetMeType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n};\r\n\r\nexport const api = {\r\n    getAuthState: () => {\r\n        return loginInstance.get<CommonResponseType<GetMeType>>('/me').then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await loginInstance.get<CommonResponseType<GetMeType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    logIn: () => {\r\n        const requestObject = {email: \"npikolist@gmail.com\", password: \"512347\", rememberMe: false};\r\n        return loginInstance.post<CommonResponseType<{userId: string}>>('/login', requestObject)\r\n            .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await loginInstance.post<CommonResponseType<{userId: string}>>\r\n                    ('', requestObject)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreState: () => {\r\n        return instance.get<Array<TodoListType>>('') .then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<Array<TodoListType>>('')\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTodoList: (title: string) => {\r\n        return instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title}).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.post<CommonResponseType<{item: TodoListType}>>(\"\", {title})\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    restoreTasks: (todoListId: string) => {\r\n        return instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.get<RestoreTasksResponseType>(`/${todoListId}/tasks`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    addTask: (title: string, todoListId: string) => {\r\n        return instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.post<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks`, {title})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTask: (todoListId: string, taskId: string, newTask: TaskType) => {\r\n        return instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`, newTask)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    deleteTodoList: (todoListId: string) => {\r\n        return instance.delete<CommonResponseType<{}>>(`/${todoListId}`).then(async res => {\r\n            if (res.status !== 200) {\r\n                let response = res;\r\n                while (response.status !== 200) {\r\n                    response = await instance.delete<CommonResponseType<{}>>(`/${todoListId}`)\r\n                }\r\n                return response.data\r\n            }\r\n            return res.data\r\n        })\r\n    },\r\n    deleteTask: (todoListId: string, taskId: string) => {\r\n        return instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.delete<CommonResponseType<{item: TaskType}>>(`/${todoListId}/tasks/${taskId}`)\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    changeTodoListTitle: (todoListId:string, newTitle: string) => {\r\n        return instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<TodoListType>>(`/${todoListId}`, {title: newTitle})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTasks: (todoListId: string, swappedTask: string, beforeSwappedTask: string | null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`, {putAfterItemId: beforeSwappedTask})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${todoListId}/tasks/${swappedTask}/reorder`,\r\n                            {putAfterItemId: beforeSwappedTask})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    },\r\n    swapTodoList: (swappedList: string, beforeSwappedList: string| null) => {\r\n        return instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`, {putAfterItemId: beforeSwappedList})\r\n            .then(async res => {\r\n                if (res.status !== 200) {\r\n                    let response = res;\r\n                    while (response.status !== 200) {\r\n                        response = await instance.put<CommonResponseType<{}>>(`/${swappedList}/reorder`,\r\n                            {putAfterItemId: beforeSwappedList})\r\n                    }\r\n                    return response.data\r\n                }\r\n                return res.data\r\n            })\r\n    }\r\n};\r\n","export const movePos  = (array: Array<any>, moveIndex: number, toIndex: number) => {\r\n    /* #move - Moves an array item from one position in an array to another.\r\n\r\n       Note: This is a pure function so a new array will be returned, instead\r\n       of altering the array argument.\r\n\r\n      Arguments:\r\n      1. array     (String) : Array in which to move an item.         (required)\r\n      2. moveIndex (Object) : The index of the item to move.          (required)\r\n      3. toIndex   (Object) : The index to move item at moveIndex to. (required)\r\n    */\r\n    let item = array[moveIndex];\r\n    let length = array.length;\r\n    let diff = moveIndex - toIndex;\r\n\r\n    if (diff > 0) {\r\n        // move left\r\n        return [\r\n            ...array.slice(0, toIndex),\r\n            item,\r\n            ...array.slice(toIndex, moveIndex),\r\n            ...array.slice(moveIndex + 1, length)\r\n        ];\r\n    } else if (diff < 0) {\r\n        // move right\r\n        return [\r\n            ...array.slice(0, moveIndex),\r\n            ...array.slice(moveIndex + 1, toIndex + 1),\r\n            item,\r\n            ...array.slice(toIndex + 1, length)\r\n        ];\r\n    }\r\n    return array;\r\n}","/*export const neumorphColors = [\r\n    {\r\n        background: '#1a0b3b',\r\n        backgroundOuter: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n        shadows: '22px 22px 49px #0a0418, -22px -22px 49px #2a125e',\r\n        shadowsFocused: 'inset 11px 11px 23px #0a0418, inset -11px -11px 23px #2a125e',\r\n        shadowsHovered: '22px 22px 49px #0a0418',\r\n        innerShadows: '11px 11px 23px #0a0418, -11px -11px 23px #2a125e',\r\n        color: 'rgb(108, 98, 131)',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: 'rgb(30, 13, 55)',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#f6f7fa',\r\n        backgroundOuter: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadows: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsFocused: 'inset 11px 11px 23px #a2a3a5, inset -11px -11px 23px #ffffff',\r\n        shadowsHovered: '22px 22px 49px #a2a3a5',\r\n        innerShadows: '11px 11px 23px #a2a3a5, -11px -11px 23px #ffffff',\r\n        color: '#ff9605',\r\n        hoveredAltBackground: '#ff9605',\r\n        hoveredColor: '#f6f7fa',\r\n        backgroundAltInner: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadowsAlt: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a86303, inset -22px -22px 49px #ffc907',\r\n    },\r\n    {\r\n        background: '#ff9605',\r\n        backgroundOuter: 'linear-gradient(145deg, #ffa105, #e68705)',\r\n        shadows: '22px 22px 49px #a86303, -22px -22px 49px #ffc907',\r\n        shadowsFocused: 'inset 11px 11px 23px #a86303, inset -11px -11px 23px #ffc907',\r\n        shadowsHovered: '22px 22px 49px #a86303',\r\n        innerShadows: '11px 11px 23px #a86303, -11px -11px 23px #ffc907',\r\n        color: '#f6f7fa',\r\n        hoveredAltBackground: '#f6f7fa',\r\n        hoveredColor: '#ff9605',\r\n        backgroundAltInner: 'linear-gradient(145deg, #dddee1, #ffffff)',\r\n        shadowsAlt: '22px 22px 49px #a2a3a5, -22px -22px 49px #ffffff',\r\n        shadowsHoveredAlt: 'inset 22px 22px 49px #a2a3a5, inset -22px -22px 49px #ffffff',\r\n    }\r\n];*/\r\n\r\nexport const neumorphColors: Array<NeumorphColorsType> = [\r\n    {\r\n        background: '#B5838D',\r\n        concaveBackground: 'linear-gradient(145deg, #a3767f, #c28c97)',\r\n        shadows: '20px 20px 40px #9a6f78, -20px -20px 40px #d097a2',\r\n        innerShadows: 'inset 20px 20px 40px #9a6f78, inset -20px -20px 40px #d097a2',\r\n        littleShadows: '5px 5px 10px #9a6f78, -5px -5px 10px #d097a2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #9a6f78, inset -5px -5px 10px #d097a2',\r\n        progressBarColor: '#d097a2',\r\n        color: 'white',\r\n    },{\r\n        background: '#E5989B',\r\n        concaveBackground: 'linear-gradient(145deg, #ce898c, #f5a3a6)',\r\n        shadows: '20px 20px 40px #c38184, -20px -20px 40px #ffafb2',\r\n        innerShadows: 'inset 20px 20px 40px #c38184, inset -20px -20px 40px #ffafb2',\r\n        littleShadows: '5px 5px 10px #c38184, -5px -5px 10px #ffafb2;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #c38184, inset -5px -5px 10px #ffafb2',\r\n        progressBarColor: '#ffafb2',\r\n        color: 'white',\r\n    },{\r\n        background: '#FFB4A2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6a292, #ffc1ad)',\r\n        shadows: '20px 20px 40px #d49586, -20px -20px 40px #ffd3be',\r\n        innerShadows: 'inset 20px 20px 40px #d49586, inset -20px -20px 40px #ffd3be',\r\n        littleShadows: '5px 5px 10px #d49586, -5px -5px 10px #ffd3be;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d49586, inset -5px -5px 10px #ffd3be',\r\n        progressBarColor: '#ffd3be',\r\n        color: 'white',\r\n    }, {\r\n        background: '#FFCDB2',\r\n        concaveBackground: 'linear-gradient(145deg, #e6b9a0, #ffdbbe)',\r\n        shadows: '20px 20px 40px #d4aa94, -20px -20px 40px #fff0d0',\r\n        innerShadows: 'inset 20px 20px 40px #d4aa94, inset -20px -20px 40px #fff0d0',\r\n        littleShadows: '5px 5px 10px #d4aa94, -5px -5px 10px #fff0d0;',\r\n        innerLittleShadows: 'inset 5px 5px 10px #d4aa94, inset -5px -5px 10px #fff0d0',\r\n        progressBarColor: '#fff0d0',\r\n        color: 'white'\r\n    }\r\n];\r\n\r\nexport const defaultPalette: NeumorphColorsType = {\r\n    background: '#6D6875',\r\n    concaveBackground: 'linear-gradient(145deg, #625e69, #756f7d)',\r\n    shadows: '20px 20px 40px #5e5965, -20px -20px 40px #7c7785',\r\n    innerShadows: 'inset 20px 20px 40px #5e5965, inset -20px -20px 40px #7c7785',\r\n    littleShadows: '5px 5px 10px #5d5863, -5px -5px 10px #7d7887',\r\n    innerLittleShadows: 'inset 5px 5px 10px #5d5863, inset -5px -5px 10px #7d7887',\r\n    progressBarColor: '#7c7785',\r\n    color: 'white',\r\n    default: true\r\n};\r\n\r\nexport const interfacePalette: NeumorphColorsType = {\r\n    background: '#1a0b3b',\r\n    concaveBackground: 'linear-gradient(145deg, #170a35, #1c0c3f)',\r\n    shadows: '20px 20px 40px #0a0418, -20px -20px 40px #2a125e',\r\n    innerShadows: '20px 20px 40px #0a0418, -20px -20px 40px #2a125e',\r\n    littleShadows: '5px 5px 10px #0a0418, -5px -5px 10px #2a125e',\r\n    color: 'white',\r\n    innerLittleShadows: 'inset 5px 5px 10px #0a0418, inset -5px -5px 10px #2a125e',\r\n    progressBarColor: '#1a0b3b',\r\n}\r\n\r\n\r\nexport type NeumorphColorsType = {\r\n    background: string,\r\n    concaveBackground: string,\r\n    shadows: string,\r\n    innerShadows: string,\r\n    littleShadows: string,\r\n    innerLittleShadows: string,\r\n    progressBarColor: string,\r\n    color: string,\r\n    default?: boolean\r\n};","import {api} from \"./api\";\r\nimport {TaskType, TodoListType} from \"./entities\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport cloneDeep from \"lodash-es/cloneDeep\";\r\nimport {movePos} from \"../hooks/movePos\";\r\nimport {act} from \"react-dom/test-utils\";\r\nimport {defaultPalette, neumorphColors, NeumorphColorsType} from \"../Components/neumorphColors\";\r\n\r\ntype InitialStateType = {\r\n    todoLists: Array<TodoListType>,\r\n    deepCopy: Array<TodoListType>,\r\n    editable: boolean,\r\n    listsOrder: Array<string>,\r\n    tasksOrder: Array<{ todoListId: string, newTasksOrder: Array<string> }>,\r\n    newListsId: Array<{ oldId: string, newId: string }>,\r\n    newTasksId: Array<{ oldId: string, newId: string, todoListId: string }>,\r\n    errorsNumber: number,\r\n    focusedStatus: boolean,\r\n    currentPaletteIndex: NeumorphColorsType,\r\n    initialLoadingState: boolean,\r\n    pendingState: boolean,\r\n    swapState: boolean,\r\n    fetchingState: boolean,\r\n    height: number,\r\n    width: number,\r\n    interfaceHeight: number,\r\n    allTasks: number,\r\n    completedTasks: number,\r\n    closeLookState: boolean\r\n};\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n    deepCopy: [],\r\n    editable: false,\r\n    listsOrder: [],\r\n    tasksOrder: [],\r\n    newListsId: [],\r\n    newTasksId: [],\r\n    errorsNumber: 0,\r\n    focusedStatus: false,\r\n    currentPaletteIndex: defaultPalette,\r\n    initialLoadingState: true,\r\n    pendingState: false,\r\n    swapState: false,\r\n    fetchingState: false,\r\n    closeLookState: false,\r\n    height: 0,\r\n    width: 0,\r\n    interfaceHeight: 0,\r\n    allTasks: 0,\r\n    completedTasks: 0\r\n};\r\n\r\nconst functionalReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'functionalReducer/SET_TODO_LISTS':\r\n            return {\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        case 'functionalReducer/SET_TASKS':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: action.tasks}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/ADD_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: [action.newTodoList, ...state.todoLists],\r\n            };\r\n        case 'functionalReducer/ADD_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: [action.newTask, ...list.tasks]}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.task.todoListId) {\r\n                        return {\r\n                            ...list, tasks: list.tasks.map(task => {\r\n                                if (task.id === action.task.id) {\r\n                                    return {...action.task}\r\n                                } else return task;\r\n                            })\r\n                        }\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/DELETE_TODO_LIST':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter(list => list.id !== action.todoListId),\r\n            };\r\n        case 'functionalReducer/DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, tasks: list.tasks.filter(task => task.id !== action.taskId)}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case 'functionalReducer/CHANGE_TODO_LIST_TITLE':\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map(list => {\r\n                    if (list.id === action.todoListId) {\r\n                        return {...list, title: action.todoListTitle}\r\n                    } else return list\r\n                }),\r\n            };\r\n        case \"functionalReducer/SWAP_TODO_LISTS\":\r\n            return {\r\n                ...state,\r\n                listsOrder: action.newListsOrder\r\n            }\r\n        case \"functionalReducer/SWAP_TASKS\":\r\n            const index = state.tasksOrder.findIndex(item => item.todoListId === action.todoListId);\r\n            const newSwappedTasks = index !== -1 ? state.tasksOrder.map((item, i) => {\r\n                if (i === index) return {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}\r\n                return item\r\n            }) : [...state.tasksOrder, {todoListId: action.todoListId, newTasksOrder: action.newTasksOrder}]\r\n            return {\r\n                ...state,\r\n                tasksOrder: newSwappedTasks\r\n            }\r\n        case \"functionalReducer/ENABLE_EDIT_MODE\": //глянуть\r\n            return {\r\n                ...state,\r\n                editable: true,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n                errorsNumber: 0,\r\n                deepCopy: cloneDeep(state.todoLists)\r\n            };\r\n        case \"functionalReducer/DISABLE_EDIT_MODE\":\r\n            return {\r\n                ...state,\r\n                editable: false\r\n            }\r\n        case \"functionalReducer/SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorsNumber: state.errorsNumber + 1\r\n            };\r\n        case \"functionalReducer/SET_FOCUSED_STATUS\":\r\n            return {\r\n                ...state,\r\n                focusedStatus: action.status\r\n            };\r\n        case \"functionalReducer/SET_NEW_ID\":\r\n            return {\r\n                ...state,\r\n                todoLists: action.newTodoLists\r\n            };\r\n        case \"functionalReducer/SET_CURRENT_PALETTE_INDEX\":\r\n            return {\r\n                ...state,\r\n                currentPaletteIndex: action.palette\r\n            }\r\n        case \"functionalReducer/REJECT_ALL_CHANGES\":\r\n            return {\r\n                ...state,\r\n                todoLists: state.deepCopy,\r\n                editable: false,\r\n                listsOrder: [],\r\n                tasksOrder: [],\r\n            }\r\n        case \"functionalReducer/COMPLETE_INITIAL_LOADING_STATE\":\r\n            return {\r\n                ...state,\r\n                initialLoadingState: false\r\n            }\r\n        case \"functionalReducer/SET_PENDING_STATE\":\r\n            return {\r\n                ...state,\r\n                pendingState: action.pendingState\r\n            }\r\n        case \"functionalReducer/SET_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case \"functionalReducer/SET_WIDTH\":\r\n            return {\r\n                ...state,\r\n                width: action.width\r\n            }\r\n        case \"functionalReducer/SET_INTERFACE_HEIGHT\":\r\n            return {\r\n                ...state,\r\n                interfaceHeight: action.height\r\n            }\r\n        case \"functionalReducer/SET_ALL_TASKS\":\r\n            return {\r\n                ...state,\r\n                allTasks: action.tasks\r\n            }\r\n        case \"functionalReducer/SET_COMPLETED_TASK\":\r\n            return {\r\n                ...state,\r\n                completedTasks: action.restore ? 0 : state.completedTasks+1\r\n            }\r\n        case \"functionalReducer/SET_SWAP_STATE\":\r\n            return {\r\n                ...state,\r\n                swapState: action.state\r\n            }\r\n        case \"functionalReducer/SET_CLOSE_LOOK_STATE\":\r\n            return {\r\n                ...state,\r\n                closeLookState: action.state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n    addTodoList: (newTodoList: TodoListType) => ({type: 'functionalReducer/ADD_TODO_LIST', newTodoList} as const),\r\n    addTask: (newTask: TaskType, todoListId: string) => ({type: 'functionalReducer/ADD_TASK', newTask, todoListId} as const),\r\n    changeTask: (task: TaskType) => ({type: 'functionalReducer/CHANGE_TASK', task} as const),\r\n    deleteTodoList: (todoListId: string) => ({type: 'functionalReducer/DELETE_TODO_LIST', todoListId} as const),\r\n    deleteTask: (todoListId: string, taskId: string) => ({type: 'functionalReducer/DELETE_TASK', taskId, todoListId} as const),\r\n    restoreTodoList: (todoLists: TodoListType[]) => ({type: 'functionalReducer/SET_TODO_LISTS', todoLists} as const),\r\n    restoreTasks: (tasks: TaskType[], todoListId: string) => ({\r\n        type: 'functionalReducer/SET_TASKS',\r\n        tasks,\r\n        todoListId\r\n    } as const),\r\n    changeTodoListTitle: (todoListId: string, todoListTitle: string) => ({\r\n        type: 'functionalReducer/CHANGE_TODO_LIST_TITLE',\r\n        todoListId,\r\n        todoListTitle\r\n    } as const),\r\n    enableEditMode: () => ({type: 'functionalReducer/ENABLE_EDIT_MODE'} as const),\r\n    disableEditMode: () => ({type: 'functionalReducer/DISABLE_EDIT_MODE'} as const),\r\n    setError: () => ({type: 'functionalReducer/SET_ERROR'} as const),\r\n    setFocusedStatus: (status: boolean) => ({type: 'functionalReducer/SET_FOCUSED_STATUS', status} as const),\r\n    swapTasks: (todoListId: string, newTasksOrder: Array<string>) => ({\r\n        type: 'functionalReducer/SWAP_TASKS', todoListId, newTasksOrder\r\n    } as const),\r\n    swapTodoLists: (newListsOrder: Array<string>) => ({type: 'functionalReducer/SWAP_TODO_LISTS', newListsOrder} as const),\r\n    setTodoLists: (newTodoLists: Array<TodoListType>) => ({type: 'functionalReducer/SET_NEW_ID', newTodoLists} as const),\r\n    setPalette: (palette: NeumorphColorsType) => ({type: 'functionalReducer/SET_CURRENT_PALETTE_INDEX', palette} as const),\r\n    rejectAllChanges: () => ({type: 'functionalReducer/REJECT_ALL_CHANGES'} as const),\r\n    completeInitialLoadingState: () => ({type: 'functionalReducer/COMPLETE_INITIAL_LOADING_STATE'} as const),\r\n    setPendingState: (pendingState: boolean) => ({type: 'functionalReducer/SET_PENDING_STATE', pendingState} as const),\r\n    setHeight: (height: number) => ({type: 'functionalReducer/SET_HEIGHT', height} as const),\r\n    setWidth: (width: number) => ({type: 'functionalReducer/SET_WIDTH', width} as const),\r\n    setInterfaceHeight: (height: number) => ({type: 'functionalReducer/SET_INTERFACE_HEIGHT', height} as const),\r\n    setAllTasks: (tasks: number) => ({type: 'functionalReducer/SET_ALL_TASKS', tasks} as const),\r\n    setCompletedTask: (restore: boolean) => ({type: 'functionalReducer/SET_COMPLETED_TASK', restore} as const),\r\n    setSwapState: (state: boolean) => ({type: 'functionalReducer/SET_SWAP_STATE', state} as const),\r\n    setFetchingState: (state: boolean) => ({type: 'functionalReducer/SET_FETCHING_STATE', state} as const),\r\n    setCloseLookState: (state: boolean) => ({type: 'functionalReducer/SET_CLOSE_LOOK_STATE', state} as const),\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsTypes>;\r\ntype ThunkActionType = ThunkDispatch<AppStateType, unknown, ActionsTypes>;\r\n\r\nexport const loadTodoListsTC = (): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreState().then(data => {\r\n        dispatch(actions.restoreTodoList(data))\r\n    })\r\n};\r\nexport const addTodoListTC = (title: string): ThunkType => (dispatch: ThunkActionType) => {//done\r\n    api.addTodoList(title).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTodoList(data.data.item))\r\n    })\r\n};\r\nexport const addTaskTC = (newTask: string, todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.addTask(newTask, todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.addTask(data.data.item, todoListId))\r\n    })\r\n};\r\nexport const changeTaskTC = (todoListId: string, taskId: string, newTask: TaskType): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTask(todoListId, taskId, newTask).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTask(data.data.item))\r\n    })\r\n};\r\nexport const deleteTodoListTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTodoList(todoListId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTodoList(todoListId))\r\n    })\r\n};\r\nexport const deleteTaskTC = (todoListId: string, taskId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.deleteTask(todoListId, taskId).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.deleteTask(todoListId, taskId))\r\n    })\r\n};\r\nexport const restoreTasksTC = (todoListId: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.restoreTasks(todoListId).then(data => {\r\n        dispatch(actions.restoreTasks(data.items, todoListId))\r\n    })\r\n};\r\nexport const changeTodoListTitleTC = (todoListId: string, todoListTitle: string): ThunkType => (dispatch: ThunkActionType) => {\r\n    api.changeTodoListTitle(todoListId, todoListTitle).then(data => {\r\n        if (data.resultCode === 0) dispatch(actions.changeTodoListTitle(todoListId, todoListTitle))\r\n    })\r\n};\r\n\r\n/*export const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n        const deletedLists = getState().todoList.deletedLists;\r\n        const addedLists = getState().todoList.addedLists;\r\n        const clearedAddedLists = getState().todoList.addedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const changedLists = getState().todoList.changedLists.filter(item => deletedLists\r\n            .findIndex(i => i === item.id) === -1);\r\n        const clearlyDeletedLists = deletedLists.filter(list => addedLists\r\n            .findIndex(item => item.id === list) === -1);\r\n        /!*const addedSwappedLists = getState().todoList.swappedLists.filter(item => clearedAddedLists\r\n            .findIndex(i => i.id === (item[0].id || item[1].id)) !== -1);\r\n        const clearlySwappedLists = getState().todoList.swappedLists.filter(item => addedSwappedLists\r\n            .findIndex(i => i[0] === item[0] && i[1] === item[1]) === -1);*!/\r\n\r\n        const deletedTasksWithList = getState().todoList.deletedTasksWithList;\r\n        const deletedTasks = getState().todoList.deletedTasks.filter(item => deletedTasksWithList\r\n            .findIndex(i => i.taskId === item.taskId) === -1);\r\n        const allDeletedTasks = [...deletedTasks, ...deletedTasksWithList];\r\n        const changedTasks = getState().todoList.changedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const addedTasks = getState().todoList.addedTasks.filter(item => allDeletedTasks\r\n            .findIndex(i => i.taskId === item.id) === -1);\r\n        const clearedSwappedTasks = getState().todoList.swappedTasks.filter(item => deletedLists\r\n            .findIndex(i => i === item.todoListId) === -1).map(item => item.swappedTasks\r\n            .map(taskArray => [...taskArray, item.todoListId])).map(item => {\r\n            const newArray: Array<string> = [];\r\n            return newArray.concat(...item)\r\n        })\r\n        //очистка от удалённых\r\n\r\n        const clearlyAddedLists = clearedAddedLists.map(list => {\r\n            const sameList = changedLists.find(item => item.id === list.id);\r\n            if (sameList) {\r\n                return sameList\r\n            } else return list\r\n        });\r\n        const clearlyChangedLists = changedLists.filter(list => clearlyAddedLists\r\n            .findIndex(item => item.id === list.id) === -1);\r\n        //очистка одинаковых листов\r\n\r\n        const clearedNewTasks = addedTasks.map(task => {\r\n            const sameTask = changedTasks.find(item => item.id === task.id)\r\n            if (sameTask) {\r\n                return sameTask\r\n            } else return task\r\n        });\r\n        const clearlyChangedTasks = changedTasks.filter(task => clearedNewTasks\r\n            .findIndex(item => item.id === task.id) === -1);\r\n        const addedInNewListsTasks = clearedNewTasks.filter(task => clearlyAddedLists\r\n            .findIndex(list => list.id === task.todoListId) !== -1);\r\n        const clearlyAddedTasks = clearedNewTasks.filter(task => addedInNewListsTasks\r\n            .findIndex(item => item.id === task.id) !== 1);\r\n        const addedSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            clearlyAddedTasks.findIndex(i => i.id === task) !== -1));\r\n        const addedInNewListsSwappedTasks = clearedSwappedTasks.map(item => item.filter(task =>\r\n            addedInNewListsTasks.findIndex(i => i.id === task) !== -1));\r\n        const clearlySwappedTasks = clearedSwappedTasks.map(item => item.filter(task => (\r\n            addedSwappedTasks.findIndex(i => (i[0] || i[1]) === task) === -1 || addedInNewListsSwappedTasks\r\n                .findIndex(i => (i[0] || i[1]) === task) === -1)));\r\n        //очистка тасок\r\n\r\n        //запросы\r\n        if (clearlyAddedLists.length !== 0) {\r\n            let newLists: Array<{ newId: string, oldId: string }> = [];\r\n            const promises = clearlyAddedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) newLists.push({newId: data.data.item.id, oldId: list.id})\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedInNewListsTasks.length !== 0) {\r\n                let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n                const promises = addedInNewListsTasks.map(async (task) => {\r\n                    let newListId = newLists.find(list => list.oldId === task.todoListId)!.newId;\r\n                    return await api.addTask(task.title, newListId).then(data => {\r\n                        if (data.resultCode === 0) newTasks.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            listId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n                await Promise.all(promises);\r\n                if (addedInNewListsSwappedTasks.length !== 0) {\r\n                    const newIdSwappedTasks = addedInNewListsSwappedTasks.map(tasks => tasks.map(task => {\r\n                        const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                        return {newId: currentTask.newId, listId: currentTask.listId}\r\n                    }))\r\n                    newIdSwappedTasks.map(tasks => {\r\n                        api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        if (clearlyAddedTasks.length !== 0) {\r\n            let newTasks: Array<{ newId: string, oldId: string, listId: string }> = [];\r\n            const promises = clearlyAddedTasks.map(async (task) => {\r\n                api.addTask(task.title, task.todoListId).then(data => {\r\n                    if (data.resultCode === 0) newTasks.push({\r\n                        newId: data.data.item.id,\r\n                        oldId: task.id,\r\n                        listId: data.data.item.todoListId\r\n                    })\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n            await Promise.all(promises);\r\n            if (addedSwappedTasks.length !== 0) {\r\n                const newIdSwappedTasks = addedSwappedTasks.map(tasks => tasks.map(task => {\r\n                    const currentTask = newTasks.find(newTask => task === newTask.oldId)!;\r\n                    return {newId: currentTask.newId, listId: currentTask.listId}\r\n                }))\r\n                newIdSwappedTasks.map(tasks => {\r\n                    api.swapTasks(tasks[0].listId, tasks[0].newId, tasks[1].newId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        if (clearlySwappedTasks.length !== 0) {\r\n            clearlySwappedTasks.forEach(tasks => {\r\n                api.swapTasks(tasks[2], tasks[0], tasks[1]).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyDeletedLists.length !== 0) {\r\n            clearlyDeletedLists.forEach(list => {\r\n                api.deleteTodoList(list).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedLists.length !== 0) {\r\n            clearlyChangedLists.forEach(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (clearlyChangedTasks.length !== 0) {\r\n            clearlyChangedTasks.forEach(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.forEach(task => {\r\n                api.deleteTask(task.todoListId, task.taskId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                })\r\n            })\r\n        }\r\n        dispatch(actions.disableEditMode())\r\n    };*/\r\n\r\n\r\nexport const initialization = (): ThunkType => async (dispatch: ThunkActionType) => {\r\n    const authState = await api.getAuthState();\r\n    console.log(authState)\r\n    if (!authState.data.id) {\r\n        await api.logIn()\r\n    }\r\n    dispatch(getStateFromServer(true));\r\n};\r\n\r\nconst getStateFromServer = (initial: boolean): ThunkType => async (dispatch: ThunkActionType) => {\r\n    if (!initial) dispatch(actions.setFetchingState(true));\r\n    const lists = await api.restoreState();\r\n    let listsWithTasks = lists;\r\n    if (lists.length !== 0) {\r\n        dispatch(actions.setAllTasks(lists.length));\r\n        dispatch(actions.setCompletedTask(true))\r\n        const getTasks = lists.map(async (item) => {\r\n            return await api.restoreTasks(item.id).then(data => {\r\n                const index = listsWithTasks.findIndex(list => item.id === list.id);\r\n                listsWithTasks[index] = {...item, tasks: data.items};\r\n                dispatch(actions.setCompletedTask(false))\r\n            })\r\n        });\r\n        await Promise.all(getTasks)\r\n    }\r\n    dispatch(actions.setTodoLists(listsWithTasks));\r\n    if (initial) setTimeout(() => dispatch(actions.completeInitialLoadingState()), 600);\r\n};\r\n\r\nexport const submitAllChanges = (): ThunkType =>\r\n    async (dispatch: ThunkActionType, getState: () => AppStateType) => {\r\n\r\n        dispatch(actions.disableEditMode());\r\n        dispatch(actions.setPendingState(true))\r\n        /*dispatch(actions.setPendingState(true))*/\r\n\r\n        const oldTodoLists = getState().todoList.deepCopy;\r\n        const newTodoLists = getState().todoList.todoLists;\r\n        let listsOrder = getState().todoList.listsOrder;\r\n        let tasksOrder = getState().todoList.tasksOrder;\r\n\r\n        const newListsId: Array<{ oldId: string, newId: string }> = [];\r\n        const newTasksId: Array<{ oldId: string, newId: string, todoListId: string }> = [];\r\n        let todoListsWithNewId: Array<TodoListType> = [];\r\n\r\n        //added items\r\n        const addedLists = newTodoLists.filter(list => oldTodoLists.findIndex(oldList => oldList.id === list.id) === -1);\r\n        const deletedLists = oldTodoLists.filter(list => newTodoLists.findIndex(newList => newList.id === list.id) === -1);\r\n        const editedLists: Array<TodoListType> = []\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList && list.title !== oldList.title) {\r\n                editedLists.push(list)\r\n            }\r\n        })\r\n\r\n        let addedTasks: Array<TaskType> = [];\r\n        const editedTasks: Array<TaskType> = [];\r\n        newTodoLists.map(list => {\r\n            const oldList = oldTodoLists.find(oldList => oldList.id === list.id);\r\n            if (oldList) {\r\n                list.tasks.map(task => {\r\n                    const oldTask = oldList.tasks.find(oldTask => oldTask.id === task.id)\r\n                    if (!oldTask) {\r\n                        addedTasks.push(task);\r\n                        return\r\n                    }\r\n                    if (oldTask && oldTask.title !== task.title) {\r\n                        editedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n            if (!oldList && list.tasks.length !== 0) {\r\n                list.tasks.map(task => addedTasks.push(task))\r\n            }\r\n        })\r\n        const deletedTasks: Array<TaskType> = [];\r\n        oldTodoLists.map(list => {\r\n            const newList = newTodoLists.find(newList => newList.id === list.id);\r\n            if (newList) {\r\n                list.tasks.map(task => {\r\n                    const newTask = newList.tasks.find(newTask => newTask.id === task.id)\r\n                    if (!newTask) {\r\n                        deletedTasks.push(task)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        //progress bar logic\r\n        let allTasks = 0;\r\n        if (deletedLists.length !== 0) allTasks = allTasks + deletedLists.length;\r\n        if (deletedTasks.length !== 0) allTasks = allTasks + deletedTasks.length;\r\n        if (addedLists.length !== 0) allTasks = allTasks + addedLists.length;\r\n        if (addedTasks.length !== 0) allTasks = allTasks + addedTasks.length;\r\n        if (editedLists.length !== 0) allTasks = allTasks + editedLists.length;\r\n        if (editedTasks.length !== 0) allTasks = allTasks + editedTasks.length;\r\n        dispatch(actions.setAllTasks(allTasks));\r\n\r\n        //queries\r\n        dispatch(actions.setCompletedTask(true))\r\n        if (deletedLists.length !== 0) {\r\n            deletedLists.map(list => {\r\n                api.deleteTodoList(list.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (deletedTasks.length !== 0) {\r\n            deletedTasks.map(task => {\r\n                api.deleteTask(task.todoListId, task.id).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedLists.length !== 0) {\r\n            editedLists.map(list => {\r\n                api.changeTodoListTitle(list.id, list.title).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n        if (editedTasks.length !== 0) {\r\n            editedTasks.map(task => {\r\n                api.changeTask(task.todoListId, task.id, task).then(data => {\r\n                    if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                })\r\n            })\r\n        }\r\n\r\n        const createAndChangeIdOfTasksInOrderList = async () => {\r\n            if (addedTasks.length !== 0) {\r\n                const tasksPromises = addedTasks.map(async (task) => {\r\n                    return await api.addTask(task.title, task.todoListId).then(data => {\r\n                        if (data.resultCode === 0) newTasksId.push({\r\n                            newId: data.data.item.id,\r\n                            oldId: task.id,\r\n                            todoListId: data.data.item.todoListId\r\n                        })\r\n                        if (data.resultCode === 0) dispatch(actions.setCompletedTask(false))\r\n                    });\r\n                })\r\n                await Promise.all(tasksPromises);\r\n                if (tasksOrder.length !== 0) {\r\n                    tasksOrder = tasksOrder.map(item => {\r\n                        const newList = newListsId.find(list => list.oldId === item.todoListId)\r\n                        const tasksWithNewId = item.newTasksOrder.map(taskId => {\r\n                            const newTask = newTasksId.find(newTask => newTask.oldId === taskId);\r\n                            if (newTask) return newTask.newId;\r\n                            return taskId\r\n                        })\r\n                        return {todoListId: newList ? newList.newId : item.todoListId, newTasksOrder: tasksWithNewId}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        if (addedLists.length !== 0) {\r\n            const listPromises = addedLists.map(async (list) => {\r\n                return await api.addTodoList(list.title).then(data => {\r\n                    if (data.resultCode === 0) {\r\n                        newListsId.push({newId: data.data.item.id, oldId: list.id});\r\n                        dispatch(actions.setCompletedTask(false))\r\n                    }\r\n                })\r\n\r\n            })\r\n            await Promise.all(listPromises);\r\n            if (addedTasks.length !== 0) {\r\n                addedTasks = addedTasks.map(task => {\r\n                    const newListId = newListsId.find(list => list.oldId === task.todoListId);\r\n                    if (newListId) return {...task, todoListId: newListId.newId}\r\n                    return task\r\n                })\r\n            }\r\n            if (listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.map(item => {\r\n                    const newList = newListsId.find(list => list.oldId === item)\r\n                    if (newList) return newList.newId;\r\n                    return item\r\n                })\r\n            }\r\n            await createAndChangeIdOfTasksInOrderList()\r\n        } else await createAndChangeIdOfTasksInOrderList();\r\n\r\n        //swap progress\r\n        dispatch(actions.setPendingState(false));\r\n        dispatch(actions.setSwapState(true))\r\n\r\n        //changing id\r\n        if (newListsId.length !== 0) {\r\n            todoListsWithNewId = newTodoLists.map(list => {\r\n                const newList = newListsId.find(item => item.oldId === list.id)\r\n                if (newList) return {...list, id: newList.newId};\r\n                return list\r\n            })\r\n        } else todoListsWithNewId = newTodoLists;\r\n        if (newTasksId.length !== 0) {\r\n            todoListsWithNewId = todoListsWithNewId.map(list => {\r\n                const tasks = list.tasks.map(task => {\r\n                    const newTask = newTasksId.find(item => item.oldId === task.id)\r\n                    if (newTask) return {...task, id: newTask.newId}\r\n                    return task\r\n                })\r\n                return {...list, tasks}\r\n            })\r\n        }\r\n\r\n        //swap items\r\n        if (listsOrder.length !== 0 || addedLists.length > 1) {\r\n            if (deletedLists.length !== 0 && listsOrder.length !== 0) {\r\n                listsOrder = listsOrder.filter(list => todoListsWithNewId.findIndex(item => item.id === list) !== -1)\r\n            }\r\n            let currentOrder = addedLists.length > 1 ? await api.restoreState().then(data => data.map(item => item.id))\r\n                : todoListsWithNewId.map(list => list.id);\r\n            const swapOrder: Array<{ swappedId: string, beforeSwappedId: string | null }> = [];\r\n            const order = listsOrder.length !== 0 ? listsOrder : todoListsWithNewId.map(list => list.id);\r\n            order.map((thisListPosId, index) => {\r\n                if (thisListPosId !== currentOrder[index]) {\r\n                    if (index === 0) swapOrder.push({swappedId: thisListPosId, beforeSwappedId: null})\r\n                    else swapOrder.push({swappedId: thisListPosId, beforeSwappedId: listsOrder[index - 1]});\r\n                    const oldIndex = currentOrder.findIndex(listId => listId === thisListPosId)\r\n                    currentOrder = movePos(currentOrder, oldIndex, index)\r\n                }\r\n            });\r\n            swapOrder.map(item => {\r\n                api.swapTodoList(item.swappedId, item.beforeSwappedId).then(data => {\r\n                    if (data.resultCode !== 0) dispatch(actions.setError())\r\n                });\r\n            })\r\n        }\r\n\r\n        if (tasksOrder.length !== 0 || addedTasks.length > 1) {\r\n            if (deletedTasks.length !== 0 && tasksOrder.length !== 0) {\r\n                tasksOrder = tasksOrder.map(item => {\r\n                    const currentList = todoListsWithNewId.find(list => list.id === item.todoListId)\r\n                    if (currentList) {\r\n                        const newTasksOrder = item.newTasksOrder.filter(taskId => currentList.tasks.findIndex(task =>\r\n                            task.id === taskId) !== -1)\r\n                        return {...item, newTasksOrder}\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            let addedTasksInLists: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            const currentListsStateOnServer = newTasksId.length > 1 ? await (async () => {\r\n                newTasksId.map(task => {\r\n                    const list = addedTasksInLists.length !== 0 ?\r\n                        addedTasksInLists.find(list => list.todoListId === task.todoListId) : undefined;\r\n                    if (list) {\r\n                        const index = addedTasksInLists.findIndex(list => list.todoListId === task.todoListId);\r\n                        addedTasksInLists[index] = {...list, tasks: [...list.tasks, task.newId]}\r\n                    } else addedTasksInLists.push({todoListId: task.todoListId, tasks: [task.newId]})\r\n                })\r\n                let listsToUpdate: Array<string> = [];\r\n                addedTasksInLists.map(item => {\r\n                    if (item.tasks.length > 1) listsToUpdate.push(item.todoListId)\r\n                })\r\n                if (listsToUpdate.length !== 0) {\r\n                    let listsOnServer: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n                    const getListOrder = listsToUpdate.map(async (item) => {\r\n                        return await api.restoreTasks(item).then(res => {\r\n                            const tasks = res.items.map(item => item.id);\r\n                            listsOnServer.push({todoListId: item, tasks})\r\n                        });\r\n                    });\r\n                    await Promise.all(getListOrder);\r\n                    return listsOnServer\r\n                } else return undefined\r\n            })() : undefined;\r\n\r\n            /*console.log(currentListsStateOnServer,\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.id),\r\n                todoListsWithNewId.find(item => item.id === currentListsStateOnServer![0].todoListId)!\r\n                    .tasks.map(item => item.title))*/\r\n\r\n            let requiredOrder: Array<{ todoListId: string, tasks: Array<string> }> = [];\r\n            if (currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const isItemInOrder = tasksOrder.find(currItem =>\r\n                        currItem.todoListId === item.todoListId);\r\n                    if (isItemInOrder) return;\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n                tasksOrder.map(item => requiredOrder.push({todoListId: item.todoListId, tasks: item.newTasksOrder}))\r\n            } else if (!currentListsStateOnServer && tasksOrder.length !== 0) {\r\n                requiredOrder = tasksOrder.map(item => ({todoListId: item.todoListId, tasks: item.newTasksOrder}));\r\n            } else if (currentListsStateOnServer && tasksOrder.length === 0) {\r\n                currentListsStateOnServer.map(item => {\r\n                    const orderFromCurrentState = todoListsWithNewId.find(list => item.todoListId === list.id)!;\r\n                    requiredOrder.push({\r\n                        todoListId: orderFromCurrentState.id,\r\n                        tasks: orderFromCurrentState.tasks.map(task => task.id)\r\n                    })\r\n                });\r\n            }\r\n\r\n            const currentOrder = requiredOrder.map(item => {\r\n                const itemWithUpdatedState = currentListsStateOnServer ? currentListsStateOnServer\r\n                    .find(list => list.todoListId === item.todoListId) : undefined;\r\n                const curItem = todoListsWithNewId.find(list => list.id === item.todoListId)!;\r\n                if (itemWithUpdatedState) return itemWithUpdatedState;\r\n                return {todoListId: curItem.id, tasks: curItem.tasks.map(task => task.id)}\r\n            });\r\n\r\n            const swapOrder: Array<{ todoListId: string, swappedId: string, beforeSwappedId: string | null }> = [];\r\n            requiredOrder.forEach(newOrder => {\r\n                let currOrder = currentOrder.find(item => item.todoListId === newOrder.todoListId)!.tasks;\r\n                newOrder.tasks.forEach((newTaskPosId, index) => {\r\n                    if (newTaskPosId !== currOrder[index]) {\r\n                        if (index === 0) swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId, beforeSwappedId: null\r\n                        });\r\n                        else swapOrder.push({\r\n                            todoListId: newOrder.todoListId, swappedId: newTaskPosId,\r\n                            beforeSwappedId: currOrder[index - 1]\r\n                        });\r\n                        const oldIndex = currOrder.findIndex(taskId => taskId === newTaskPosId)\r\n                        currOrder = movePos(currOrder, oldIndex, index)\r\n                    }\r\n                })\r\n            });\r\n            const groupedSwapOrder: Array<{todoListId: string, swapOrder: Array<{swappedId: string, beforeSwappedId: string | null}>}> = [];\r\n            swapOrder.forEach(task => {\r\n                const currentList = groupedSwapOrder.find(item => item.todoListId === task.todoListId);\r\n                if (currentList) groupedSwapOrder.map(item => item.todoListId === currentList.todoListId ?\r\n                    item.swapOrder.push({swappedId: task.swappedId, beforeSwappedId: task.todoListId}) : item\r\n                );\r\n                groupedSwapOrder.push({\r\n                    todoListId: task.todoListId,\r\n                    swapOrder: [{swappedId: task.swappedId, beforeSwappedId: task.beforeSwappedId}]\r\n                })\r\n            });\r\n            const swapOrderPending = groupedSwapOrder.map(async (item) => {\r\n                const consistentSwapOrder = item.swapOrder\r\n                for (let order of consistentSwapOrder) {\r\n                    await api.swapTasks(item.todoListId, order.swappedId, order.beforeSwappedId).then(data => {\r\n                        if (data.resultCode !== 0) dispatch(actions.setError())\r\n                    })\r\n                }\r\n            });\r\n            await Promise.all(swapOrderPending)\r\n        }\r\n        dispatch(actions.setSwapState(false));\r\n\r\n\r\n        if (addedLists.length !== 0 || addedTasks.length !== 0) {\r\n            dispatch(getStateFromServer(false))\r\n        }\r\n    };\r\n\r\nexport default functionalReducer","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {interfacePalette, NeumorphColorsType} from \"../neumorphColors\";\r\n\r\nexport const TaskButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    width: 0;\r\n    height: 0;\r\n    transform: translateX(-70%);\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Button = styled.div<{$palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    left: 10px;\r\n    font-size: 15px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.$palette.background};\r\n    box-shadow: ${props => props.$palette.littleShadows};\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${interfacePalette.background};\r\n        color: white;\r\n    }\r\n    &:first-child:nth-last-child(2),\r\n        &:first-child:nth-last-child(2) ~ * { \r\n            &:nth-child(1) {\r\n                top: 5px;\r\n            }\r\n            &:nth-child(2) {\r\n                bottom: 5px;\r\n            }\r\n        }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    deleteTask: () => void;\r\n    editTask: () => void;\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskButtons: React.FC<PropsType> = ({deleteTask, editTask, palette}) => {\r\n\r\n    return (\r\n        <TaskButtonWrapper>\r\n            <Button onClick={editTask} $palette={palette}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n            <Button onClick={deleteTask} $palette={palette}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n        </TaskButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskButtons);\r\n\r\n","\r\n\r\nexport const validate = (value: string | null): boolean => {\r\n    return value !== null && !/^\\s*$/.test(value) && value.length < 100\r\n};","import React from \"react\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\n\r\nconst CheckboxWrapper = styled.div<{$editable: boolean}>`\r\n    width: 31px;\r\n    height:31px;\r\n    position: relative;\r\n    padding-top: 10px;\r\n    padding-left: 10px;\r\n    opacity: ${props => props.$editable ? 0 : 1};\r\n    --background: #fff;\r\n    --border: #D1D6EE;\r\n    --border-hover: #BBC1E1;\r\n    --border-active: #1E2235;\r\n    --tick: #fff;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n    z-index: 9;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    position: relative;\r\n    outline: none;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: box-shadow .3s;\r\n    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));\r\n    &:hover {\r\n        --s: 2px;\r\n        --b: var(--border-hover);\r\n    }\r\n    &:checked {\r\n        --b: var(--border-active);\r\n        --s: 2px;\r\n        transition-delay: .4s;\r\n        & + svg {\r\n            --a: 16.1 86.12;\r\n            --o: 102.22;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n    z-index: 10;\r\n    width: 21px;\r\n    height: 21px;\r\n    display: block;\r\n    pointer-events: none;\r\n    fill: none;\r\n    stroke-width: 2px;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    stroke: var(--stroke, var(--border-active));\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    transform: scale(var(--scale, 1)) translateZ(0);\r\n    stroke-dasharray: var(--a, 86.12);\r\n    stroke-dashoffset: var(--o, 86.12);\r\n    transition: stroke-dasharray .6s, stroke-dashoffset .6s;\r\n`;\r\n\r\ntype PropsType = {\r\n    task: TaskType;\r\n    changeDoneStatus: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    editable: boolean,\r\n    palette: NeumorphColorsType\r\n}\r\n\r\nconst TaskCheckbox: React.FC<PropsType> = ({task, changeDoneStatus, editable, palette}) => {\r\n\r\n    return (\r\n        <CheckboxWrapper $editable={editable}>\r\n            <Checkbox type=\"checkbox\" checked={task.status === 2} disabled={editable}\r\n                      onChange={(e) => changeDoneStatus(e)}/>\r\n            <Svg>\r\n                <path\r\n                    d=\"M5,10.75 L8.5,14.25 L19.4,2.3 C18.8333333,1.43333333 18.0333333,1 17,1 L4,1 C2.35,1 1,2.35 1,4 L1,17 C1,18.65 2.35,20 4,20 L17,20 C18.65,20 20,18.65 20,17 L20,7.99769186\"/>\r\n            </Svg>\r\n        </CheckboxWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TaskCheckbox);\r\n\r\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport TaskButtons, {TaskButtonWrapper} from \"./TaskButtons\";\r\nimport {validate} from \"../../hooks/validate\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport TaskCheckbox from \"./TaskCheckbox\";\r\nimport {interfacePalette, NeumorphColorsType} from \"../neumorphColors\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst TaskWrapper = styled(animated.div)<{ $editable: boolean, $editorState: boolean}>`\r\n    position: relative;\r\n    text-align: left;\r\n    z-index: ${props => props.$editorState ? 2 : 1};\r\n    ${props => props.$editable &&\r\n    `&:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n       width: 4rem;\r\n       height: calc(100% + 10px);\r\n       left: -10px;\r\n       top: -5px\r\n     }`\r\n}\r\n`;\r\n\r\nconst TaskBackground = styled.div<{$palette: NeumorphColorsType, $editable: boolean, $editorState: boolean}>`\r\n    padding: 15px 0;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    display: flex;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    cursor: ${props => props.$editable ? \"grab\" : \"inherit\"};\r\n    z-index: 2;\r\n    transform: scale(${props => props.$editorState ? 1.3 : 1});\r\n    transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n    &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: -1;\r\n      box-shadow: ${props => props.$palette.littleShadows};\r\n      border: 3px solid transparent;\r\n      transition: border .3s linear;\r\n    };\r\n    ${props => props.$editable &&\r\n        `&:hover:before {\r\n             border: 3px solid ${interfacePalette.background}\r\n        };\r\n        &:hover ${TaskButtonWrapper},  ${TaskButtonWrapper}:focus-within {\r\n           width: 4rem;\r\n           height: 5rem;\r\n           left: -10px\r\n        }`\r\n    }\r\n`;\r\n\r\nconst TaskText = styled.div`\r\n    padding: 10px;\r\n    outline: none;\r\n    display: inline-block;\r\n    min-width: 100px;\r\n    overflow-wrap: break-word;\r\n    -webkit-line-break: after-white-space;\r\n    width: 100%;\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    task: TaskType,\r\n    todoListId: string,\r\n    palette: NeumorphColorsType,\r\n};\r\n\r\nconst TodoListTask: React.FC<PropsType> = ({task, todoListId, palette}) => {\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus, shallowEqual);\r\n\r\n    const [editorState, setEditorState] = useState<boolean>(false);\r\n    const editTask = useCallback(() => {\r\n        setEditorState(true);\r\n        dispatch(actions.setFocusedStatus(true))\r\n    }, []);\r\n\r\n    const textRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if (editorState) textRef.current!.focus()\r\n    }, [editorState]);\r\n\r\n    const deleteTask = useCallback(() => {\r\n        dispatch(actions.deleteTask(todoListId, task.id))\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        textRef.current!.textContent = task.title;\r\n        if (task.title === '') editTask()\r\n    }, [task]);\r\n\r\n    const changeDoneStatus = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newTask = {...task, status: e.currentTarget.checked ? 2 : 0};\r\n        dispatch(actions.changeTask(newTask))\r\n    }, [task]);\r\n\r\n    const onBlurHandler = useCallback(() => {\r\n        const taskTitle = textRef.current!.textContent;\r\n        console.log(validate(taskTitle))\r\n        if (validate(taskTitle)) {\r\n            let newTask = {...task, title: taskTitle!};\r\n            dispatch(actions.changeTask(newTask));\r\n            setEditorState(false);\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else if (!validate(taskTitle) && task.title !== '') {\r\n            textRef.current!.textContent = task.title;\r\n            setEditorState(false);\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(actions.setFocusedStatus(false));\r\n            deleteTask()\r\n        }\r\n    }, [task]);\r\n\r\n    const onKeyPressHandler = useCallback((e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            textRef.current!.blur()\r\n        }\r\n    }, []);\r\n\r\n    const priority = task.priority === 0 ? 'Low' : 1 ? 'Middle' : 2 ?\r\n        'High' : 3 ? 'Urgently' : 'Later';\r\n\r\n    return (\r\n        <TaskWrapper $editable={editable && !focusedStatus} $editorState={editorState}>\r\n            <TaskButtons editTask={editTask} deleteTask={deleteTask} palette={palette}/>\r\n            <TaskBackground $editable={editable} $palette={palette} $editorState={editorState}>\r\n                <TaskCheckbox task={task} changeDoneStatus={changeDoneStatus} editable={editable} palette={palette}/>\r\n                <TaskText contentEditable={editorState} onKeyPress={e => onKeyPressHandler(e)}\r\n                          ref={textRef} onBlur={onBlurHandler}/>\r\n            </TaskBackground>\r\n        </TaskWrapper>\r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTask, isEqual);\r\n\r\n","import React, {RefObject, useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport TodoListTask from \"./TodoListTask\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport {animated, useSprings, useSpring} from \"react-spring\";\r\nimport {useDrag, useHover} from \"react-use-gesture\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {movePos} from \"../../hooks/movePos\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {clamp} from \"lodash-es\";\r\n\r\nexport const TasksWrapper = styled.div<{ $height: number }>`\r\n  user-select: none;\r\n  position: relative;\r\n  height: ${props => props.$height}px;\r\n  transition: height 0.3s cubic-bezier(0.25, 0, 0, 1) 0.2s;\r\n`;\r\n\r\nconst TaskWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  overflow: visible;\r\n  padding: 10px 0;\r\n  pointer-events: auto;\r\n  text-align: center;\r\n  font-size: 14.5px;\r\n`;\r\n\r\ntype PropsType = {\r\n    todoListId: string;\r\n    tasks: TaskType[],\r\n    setHeight: (height: number) => void,\r\n    palette: NeumorphColorsType,\r\n    setHoveredStatus: (status: boolean) => void\r\n};\r\n\r\nconst TodoListTasks: React.FC<PropsType> = ({tasks, todoListId, setHeight, palette, setHoveredStatus}) => {\r\n\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const width = useSelector((store: AppStateType) => store.todoList.width, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = useCallback((order: Array<number>, down?: boolean, originalIndex?: number, y?: number): any => (index: number) => {\r\n            if (down && index === originalIndex && y !== undefined) {\r\n                const calcY = y > bounds.current[1] ? bounds.current[1] + (y - bounds.current[1]) * 0.1 : y < bounds.current[0] ?\r\n                    bounds.current[0] + (y - bounds.current[0]) * 0.1 : y;\r\n                return {\r\n                    scale: 1.2,\r\n                    zIndex: 2,\r\n                    y: initialYofDragged.current! + calcY,\r\n                    opacity: 1,\r\n                    immediate: (prop: string): boolean => prop === 'zIndex' || prop === 'y',\r\n                }\r\n            } else {\r\n                return {\r\n                    scale: 1,\r\n                    y: initialY.current.length < tasks.length ? initialY.current[order.indexOf(tasks.length-index-2)] || 0\r\n                        : initialY.current[order.indexOf(tasks.length-index-1)] || 0,\r\n                    zIndex: 'inherit',\r\n                    opacity: 1,\r\n                    immediate: false,\r\n                }\r\n            }\r\n        }, [tasks]);\r\n\r\n    const order = useRef<Array<number>>([]);\r\n    const initialYofDragged = useRef<number | null>(0);\r\n    const memoizedOrder = useRef<Array<number>>([]);\r\n    const memoizedTasksId = useRef<Array<string>>([]);\r\n    const initialY = useRef<Array<number>>([]);\r\n    const heights = useRef<Array<number>>([]);\r\n    const bounds = useRef<Array<number>>([]);\r\n    const elementsBorder = useRef<Array<{topBorder: number, center: number, bottomBorder: number}>>([]);\r\n    const elementsRef = useRef<Array<RefObject<HTMLDivElement>>>([]);\r\n    const [height, setCurrentHeight] = useState<number>(0)\r\n\r\n    const [springs, setSprings] = useSprings(tasks.length, settings(order.current), [tasks]);\r\n\r\n    const [forceRerender, rerender] = useState<number>(0);\r\n    useEffect(() => {\r\n        elementsRef.current = tasks.map(() => React.createRef());\r\n        rerender(forceRerender + 1);\r\n    }, [tasks]);\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        if (!editable && tasks.length !== 0) {\r\n            order.current = tasks.map((_, i) => i);\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        }\r\n        if (editable && tasks.length > memoizedTasksId.current.length) {\r\n            order.current = [0, ...order.current.map(item => item + 1)];\r\n            heights.current = [elementsRef.current[0].current!.offsetHeight, ...heights.current];\r\n        }\r\n        if (editable && tasks.length < memoizedTasksId.current.length) {\r\n            const deletedTaskIndex = memoizedTasksId.current.findIndex(taskId => tasks.findIndex(item => item.id === taskId) === -1);\r\n            const deletedOrder = order.current.indexOf(deletedTaskIndex);\r\n            order.current = order.current.filter(index => index !== deletedTaskIndex)\r\n                .map(item => item > deletedTaskIndex ? item - 1 : item);\r\n            heights.current = heights.current.filter((_, index) => index !== deletedOrder);\r\n        }\r\n        if (tasks.length === memoizedTasksId.current.length) {\r\n            heights.current = elementsRef.current.map(ref => ref.current!.offsetHeight);\r\n        }\r\n        calcPositions(heights.current);\r\n        setSprings(settings(order.current));\r\n        const heightsSum = heights.current.reduce((sum, current) => sum + current, 0);\r\n        setCurrentHeight(heightsSum);\r\n        setHeight(heightsSum);\r\n        memoizedTasksId.current = tasks.map(item => item.id);\r\n    }, [forceRerender, width]);\r\n\r\n    const calcPositions = useCallback((heightsArray: Array<number>) => {\r\n        initialY.current = heightsArray.map((height, index) => {\r\n            return heightsArray.reduce((total, item, i) => {\r\n                if (i !== 0 && i <= index) {\r\n                    total += heightsArray[i - 1]\r\n                }\r\n                return total\r\n            }, 0)\r\n        });\r\n        elementsBorder.current = initialY.current.map((item, i) => ({\r\n            topBorder: item,\r\n            center: item + heightsArray[i]/2,\r\n            bottomBorder: item + heightsArray[i]\r\n        }));\r\n    }, []);\r\n\r\n    const getNewIndex = useCallback((index: number, y: number) => {\r\n        if (y > 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (y > height + heights.current[index + 1] / 2) {\r\n                newIndex += 1;\r\n                height += heights.current[index + 1];\r\n            }\r\n            return newIndex > heights.current.length - 1 ? heights.current.length - 1 : newIndex;\r\n        }\r\n        if (y < 0) {\r\n            let newIndex = index;\r\n            let height = 0;\r\n            while (Math.abs(y) > height + heights.current[index - 1] / 2) {\r\n                newIndex -= 1;\r\n                height += heights.current[index - 1];\r\n            }\r\n            return newIndex < 0 ? 0 : newIndex;\r\n        }\r\n        return index\r\n    }, [])\r\n\r\n    const gesture = useDrag(({args: [originalIndex, trueIndex], down, movement: [, y], event, first}) => {\r\n        event!.stopPropagation();\r\n        const curIndex = order.current.indexOf(trueIndex);\r\n        if (first) {\r\n            initialYofDragged.current = initialY.current[curIndex];\r\n            bounds.current = [-initialYofDragged.current, initialY.current[tasks.length-1] - initialYofDragged.current];\r\n            dispatch(actions.setFocusedStatus(true))\r\n        }\r\n        if (!initialYofDragged.current) initialYofDragged.current = initialY.current[curIndex];\r\n        const curRow = getNewIndex(curIndex, y);//текущий новый индекс\r\n        const newOrder = movePos(order.current, curIndex, curRow);// новый порядок\r\n        const newHeights = movePos(heights.current, curIndex, curRow);//новый массив высот\r\n        calcPositions(newHeights);\r\n        setSprings(settings(newOrder, down, originalIndex, y));\r\n        if (!down) {\r\n            order.current = newOrder;\r\n            heights.current = newHeights;\r\n            initialYofDragged.current = null;\r\n            if (!isEqual(order.current, memoizedOrder.current)) {\r\n                const newOrder = order.current.map(item => tasks[item].id)\r\n                dispatch(actions.swapTasks(todoListId, newOrder))\r\n            }\r\n            dispatch(actions.setFocusedStatus(false))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const hovering = useHover(({hovering}) => {\r\n        if (hovering) setHoveredStatus(true);\r\n        if (!hovering) setHoveredStatus(false)\r\n    })\r\n\r\n    return (\r\n        <TasksWrapper $height={height} {...editable &&{...hovering()}}>\r\n            {tasks.map((task, i) =>\r\n                <TaskWrapper {...editable && {...gesture(tasks.length-i-1, i)}} key={task.id} style={springs[tasks.length-i-1]}\r\n                             ref={elementsRef.current[i]}>\r\n                    <TodoListTask task={task} todoListId={todoListId} palette={palette}/>\r\n                </TaskWrapper>)}\r\n        </TasksWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTasks, isEqual);\r\n\r\n","import React, {useEffect, useLayoutEffect, useRef} from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\nimport {validate} from \"../../hooks/validate\";\r\n\r\nconst ListTitle = styled.div<{$palette: NeumorphColorsType, contentEditable: boolean}>`\r\n  background-image: ${props => props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  position: relative;\r\n  font-size: 25px;\r\n  text-align: center;\r\n  padding: 15px 10px;\r\n  margin: 0 auto 10px auto;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  display: inline-block;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-break: after-white-space;\r\n  transform: scale(${props => props.contentEditable ? 1.3 : 1});\r\n  transition: transform .5s cubic-bezier(0.25, 0, 0, 1);\r\n  &:before {\r\n      border-radius: 10px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: ${props => props.$palette.innerShadows};\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    listTitle: string,\r\n    id: string,\r\n    switchTitleMode: (state: boolean) => void,\r\n    isTitleEditable: boolean,\r\n    palette: NeumorphColorsType,\r\n    deleteTodoList: () => void\r\n};\r\n\r\nconst TodoListTitle: React.FC<PropsType> = ({listTitle, id, isTitleEditable,\r\n                                                deleteTodoList, switchTitleMode, palette}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (ref.current && isTitleEditable) {\r\n            ref.current.focus();\r\n            dispatch(actions.setFocusedStatus(true))\r\n        }\r\n    }, [isTitleEditable]);\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    useLayoutEffect(() => {\r\n        if (ref.current) {\r\n            ref.current.textContent = listTitle;\r\n            if (listTitle === '') switchTitleMode(true)\r\n        }\r\n    }, [listTitle]);\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\" ) {\r\n            e.preventDefault();\r\n            ref.current!.blur()\r\n        }\r\n    };\r\n    const onBlurHandler = () => {\r\n        if (validate(ref.current!.textContent)) {\r\n            dispatch(actions.changeTodoListTitle(id, ref.current!.textContent!));\r\n            switchTitleMode(false);\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else if (!validate(ref.current!.textContent) && listTitle !== '') {\r\n            ref.current!.textContent = listTitle;\r\n            switchTitleMode(false);\r\n            dispatch(actions.setFocusedStatus(false));\r\n        } else {\r\n            dispatch(actions.setFocusedStatus(false));\r\n            deleteTodoList()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ListTitle contentEditable={isTitleEditable} ref={ref} onKeyPress={e => onKeyPressHandler(e)}\r\n                   onBlur={onBlurHandler} $palette={palette}/>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoListTitle);\r\n\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport styled from \"styled-components/macro\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { NeumorphColorsType } from \"../neumorphColors\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 7px;\r\n    left: 7px;\r\n    border-radius: 100%;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transform: translate(-50%, -50%);\r\n    transition: opacity .6s cubic-bezier(0.25, 0, 0, 1), width 0s linear .6s, height 0s linear .6s;\r\n`;\r\n\r\nexport const Button = styled.div<{ styles: NeumorphColorsType }>`\r\n    display: grid;\r\n    place-items: center;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.styles.background};\r\n    color: ${props => props.styles.color};\r\n    box-shadow: ${props => props.styles.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background-color: ${props => props.styles.background};\r\n        color: ${props => props.styles.color};\r\n    }\r\n    &:first-child:nth-last-child(3),\r\n        &:first-child:nth-last-child(3) ~ * {\r\n            &:nth-child(1) {\r\n                left: 50px;\r\n                top: 0;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 0;\r\n                top: 0;\r\n            }\r\n            &:nth-child(3) {\r\n                left: 0;\r\n                top: 50px;\r\n            }\r\n        }\r\n`;\r\n\r\ntype PropsType = {\r\n    colors: NeumorphColorsType,\r\n    deleteTodoList: () => void,\r\n    addTask: () => void,\r\n    editList: (state: boolean) => void,\r\n};\r\n\r\nconst ContextButtons: React.FC<PropsType> = ({colors, deleteTodoList, addTask, editList}) => {\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Button styles={colors}\r\n                    onClick={addTask}>\r\n                <FontAwesomeIcon icon=\"plus\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={deleteTodoList}>\r\n                <FontAwesomeIcon icon=\"trash\"/>\r\n            </Button>\r\n            <Button styles={colors}\r\n                    onClick={() => editList(true)}>\r\n                <FontAwesomeIcon icon=\"edit\"/>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(ContextButtons);\r\n\r\n","import React, {useCallback, useRef, useState} from \"react\";\r\nimport TodoListTasks, {TasksWrapper} from '../tasks/TodoListTasks';\r\nimport TodoListTitle from \"./TodoListTitle\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport {TaskType} from \"../../redux/entities\";\r\nimport styled from \"styled-components/macro\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {useHover} from \"react-use-gesture\";\r\nimport ContextButtons, {ButtonWrapper} from \"./ContextButtons\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport {defaultPalette, interfacePalette, neumorphColors} from \"../neumorphColors\";\r\n\r\nconst SingleListWrapper = styled.div`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 50%;\r\n  backface-visibility: hidden;\r\n  overflow: visible;\r\n  padding: 35px;\r\n  font-family: NunitoSans-Light;\r\n  &:hover {\r\n      z-index: 5;\r\n  }\r\n`;\r\n\r\nconst DetailsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 100%;\r\n  transform-origin: 50% 50%;\r\n  transform: rotateZ(-90deg) translateY(-50%);\r\n  transform-style: preserve-3d;\r\n  font-size: 25px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst SingleListBottomLayer = styled.div<{$palette: number, $editable: boolean, $closeLookState: boolean,\r\n    $isTasksHovered: boolean, $focusedStatus: boolean}>`\r\n  border-radius: 30px;\r\n  transform-style: preserve-3d;\r\n  transform-origin: 50% 100%;\r\n  padding: 25px;\r\n  background: ${props => neumorphColors[props.$palette].concaveBackground};\r\n  position: relative;\r\n  transform: translateZ(0);\r\n  transition: transform .6s cubic-bezier(0.25, 0, 0, 1);\r\n  ${props => !props.$editable &&\r\n    `&:hover {\r\n        transform: translateZ(100px)\r\n  }`}\r\n  &:before {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      border: 5px solid transparent;\r\n      transition: border, opacity .3s linear;\r\n      box-shadow: ${props => neumorphColors[props.$palette].shadows};\r\n      opacity: ${props => props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && !props.$focusedStatus && !props.$isTasksHovered &&\r\n      `&:hover:before {\r\n          border: 5px solid ${interfacePalette.background};\r\n          opacity: 1\r\n       };\r\n       ${TasksWrapper}:hover & {\r\n            border: 5px solid transparent;\r\n       };\r\n       &:hover ${ButtonWrapper},  ${ButtonWrapper}:hover {\r\n       width: 120px;\r\n       height: 120px;\r\n       opacity: 1;\r\n       transition: opacity .6s cubic-bezier(0.25, 0, 0, 1);\r\n    }\r\n  `};\r\n  &:after {\r\n      border-radius: 30px;\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: -1;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      box-shadow: 20px 20px 40px rgba(0, 0, 0, .4);\r\n      transition: opacity .3s linear;\r\n      opacity: ${props => !props.$closeLookState ? 1 : 0};\r\n  };\r\n  ${props => props.$editable && '&:hover:after {opacity: 0}'}\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    listTitle: string,\r\n    listTasks?: TaskType[],\r\n    paletteIndex: number,\r\n    setNewHeights: (height: number, id: string) => void,\r\n    deleteList: (id: string) => void,\r\n    closeLook: boolean\r\n};\r\n\r\nconst TodoList: React.FC<PropsType> = ({\r\n                                           id, listTitle, listTasks, paletteIndex,\r\n                                           setNewHeights, deleteList, closeLook\r\n                                       }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const focusedStatus = useSelector((state: AppStateType) => state.todoList.focusedStatus, shallowEqual);\r\n\r\n    const [isTasksHovered, setTasksHoveredStatus] = useState<boolean>(false);\r\n    const setHoveredStatus = useCallback((status: boolean) => {\r\n        setTasksHoveredStatus(status)\r\n    }, []);\r\n\r\n    const currHeight = useRef<number>(0);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const setHeight = useCallback((height: number) => {\r\n        if (currHeight.current === 0 && ref.current) {\r\n            currHeight.current = ref.current.offsetHeight\r\n        }\r\n        if (currHeight.current !== height) {\r\n            setNewHeights(height+currHeight.current, id);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const [filterValue, setFilterValue] = useState<string>('All');\r\n\r\n    const changeFilter = (newFilterValue: string) => {\r\n        setFilterValue(newFilterValue)\r\n    };\r\n\r\n    const addTask = useCallback(() => {\r\n        const taskId = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newTask = {\r\n            title: '',\r\n            id: taskId,\r\n            todoListId: id,\r\n        }\r\n        dispatch(actions.addTask(newTask, id));\r\n    }, []);\r\n\r\n    const deleteTodoList = useCallback(() => {\r\n        deleteList(id)\r\n        dispatch(actions.deleteTodoList(id))\r\n    }, []);\r\n\r\n    const tasks = listTasks ? listTasks.filter(t => {\r\n        if (filterValue === \"All\") {\r\n            return true;\r\n        }\r\n        if (filterValue === \"Active\") {\r\n            return t.status === 0;\r\n        }\r\n        if (filterValue === \"Completed\") {\r\n            return t.status === 2;\r\n        }\r\n    }) : [];\r\n\r\n    //hover Effect\r\n\r\n    const bind = useHover(({hovering}) => {\r\n        if (hovering) {\r\n            dispatch(actions.setPalette(neumorphColors[paletteIndex]));\r\n        }\r\n        if (!hovering) {\r\n            dispatch(actions.setPalette(defaultPalette));\r\n        }\r\n    });\r\n\r\n    //close look animations\r\n\r\n    const [isTitleEditable, setTitleEditMode] = useState<boolean>(false);\r\n    const switchTitleMode = useCallback((state: boolean) => {\r\n        setTitleEditMode(state)\r\n    }, []);\r\n\r\n    /*console.log(`${listTitle} render`)*/\r\n    return (\r\n        <SingleListWrapper {...!closeLook && {...bind()}} ref={ref}>\r\n            <SingleListBottomLayer $palette={paletteIndex} $editable={editable} $isTasksHovered={isTasksHovered}\r\n                                   $closeLookState={closeLook} $focusedStatus={focusedStatus}>\r\n                <ContextButtons colors={neumorphColors[paletteIndex]} deleteTodoList={deleteTodoList}\r\n                                addTask={addTask} editList={switchTitleMode}/>\r\n                <TodoListTitle listTitle={listTitle} id={id} isTitleEditable={isTitleEditable} deleteTodoList={deleteTodoList}\r\n                               switchTitleMode={switchTitleMode} palette={neumorphColors[paletteIndex]}/>\r\n                <TodoListTasks todoListId={id} tasks={tasks} setHeight={setHeight} palette={neumorphColors[paletteIndex]}\r\n                               setHoveredStatus={setHoveredStatus}/>\r\n                {/* <TodoListFooter filterValue={filterValue} changeFilter={changeFilter}/>*/}\r\n                {/*<DetailsWrapper>\r\n                    more details...\r\n                </DetailsWrapper>*/}\r\n            </SingleListBottomLayer>\r\n        </SingleListWrapper>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoList, isEqual);\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated} from \"react-spring\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {NeumorphColorsType} from \"../neumorphColors\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CloseButton = styled(animated.div)<{ $palette: NeumorphColorsType}>`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    background: ${props => props.$palette.background};\r\n    color: ${props => props.$palette.color};\r\n    box-shadow: ${props => props.$palette.littleShadows};;\r\n    transition: .25s cubic-bezier(0.25, 0, 0, 1);\r\n    &:hover {\r\n        background: ${props => props.$palette.background};\r\n        color: ${props => props.$palette.background};\r\n    }\r\n`;\r\n\r\nconst ClosingButton: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    return(\r\n        <CloseButton $palette={currentPalette}>\r\n            <FontAwesomeIcon icon=\"times\"/>\r\n        </CloseButton>\r\n    )\r\n};\r\n\r\nexport default ClosingButton","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport {animated, useSprings, SpringStartFn, useSpring} from \"react-spring\";\r\nimport {swap} from \"../../hooks/swap\";\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport {actions} from \"../../redux/functionalReducer\";\r\nimport styled from \"styled-components/macro\";\r\nimport TodoList from \"./TodoList\";\r\nimport {defaultPalette, neumorphColors} from \"../neumorphColors\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport isEqual from \"react-fast-compare\";\r\nimport ClosingButton from \"./CloseButton\";\r\n\r\n\r\nconst TodoListContainer = styled(animated.div)<{ $width: number }>` \r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  width: ${props => props.$width}px;\r\n`;\r\n\r\nconst CloseButtonAnimatedWrapper = styled(animated.div)`\r\n  position: absolute;\r\n  border-radius: 100%;\r\n`;\r\n\r\ntype PropsType = {\r\n    setWrapperAnimation: SpringStartFn<{ x: string, rotateX: number, rotateZ: number, y: number}>,\r\n    scrollByListDrugging: (direction: string) => void,\r\n    setCloseLookState: (height: number) => void,\r\n    returnFromCloseLookState: () => void,\r\n    switchScrollBar: (visibility: boolean) => void\r\n}\r\n\r\ntype GridItemsType = {\r\n    x: number,\r\n    y: number,\r\n    height: number,\r\n    id: string,\r\n    rightX: number,\r\n    botY: number,\r\n    horizontalCenter: number,\r\n    verticalCenter: number,\r\n    index: number,\r\n}\r\n\r\nconst MappedLists: React.FC<PropsType> = ({setWrapperAnimation, scrollByListDrugging,\r\n                                              setCloseLookState, returnFromCloseLookState, switchScrollBar}) => {\r\n//resize logic\r\n\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const todoLists = useSelector((store: AppStateType) => store.todoList.todoLists, isEqual);\r\n    const width = useSelector((store: AppStateType) => store.todoList.width, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const columns = useMemo(() => {\r\n        return width >= 1700 ? 4 : width >= 1100 ? 3 : width >= 700 ? 2 : 1\r\n    }, [width]);\r\n    const currWidth = useMemo(() => width / columns, [width]);\r\n    useEffect(() => {\r\n        recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        });\r\n    }, [width, columns, currWidth]);\r\n\r\n\r\n// child height calculation logic\r\n    const temporaryValue = useRef<Array<{ height: number, id: string }>>([]);\r\n    const setNewHeights = useCallback((height: number, id: string) => {\r\n        const findHeight = temporaryValue.current.findIndex(item => item.id === id);\r\n        const newHeightsArray = findHeight === -1 ? [...temporaryValue.current, {height, id}]\r\n            : temporaryValue.current.map((item, i) => {\r\n                if (i === findHeight) return {height, id};\r\n                return item\r\n            });\r\n        temporaryValue.current = newHeightsArray\r\n        if (newHeightsArray.length === todoLists.length) {\r\n            recalculateMeasures();\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y}\r\n            })\r\n        }\r\n    }, [todoLists, width, columns, currWidth])\r\n\r\n    const deleteList = useCallback((id: string) => {\r\n        temporaryValue.current = temporaryValue.current.filter(item => item.id !== id)\r\n    }, []);\r\n\r\n    const height = useRef<number>(0);\r\n    const gridItems = useRef<Array<GridItemsType>>([]);\r\n\r\n    const [springs, setSprings] = useSprings(todoLists.length, i => {\r\n        if (gridItems.current.length === 0) return {\r\n            x: 0, y: 0, zIndex: 3, opacity: 1, display: 'block'\r\n        };\r\n        const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i);\r\n        return {\r\n            x: currentSettings ? currentSettings.x : 0,\r\n            y: currentSettings ? currentSettings.y : 0,\r\n            opacity: 1,\r\n            zIndex: 3,\r\n            display: 'block',\r\n        }\r\n    }, [todoLists])\r\n\r\n\r\n//swap animation logic\r\n    useEffect(() => {\r\n        if (!editable && gridItems.current.length === 0) {\r\n            const newHeights = new Array(columns).fill(0);\r\n            gridItems.current = todoLists.map(\r\n                (item, i) => {\r\n                    const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n                    const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n                    const column = i % columns;\r\n                    const x = currWidth * column;\r\n                    const y = (newHeights[column] += height) - height\r\n                    const rightX = x + currWidth;\r\n                    const botY = y + height;\r\n                    const horizontalCenter = x + currWidth / 2;\r\n                    const verticalCenter = y + height / 2;\r\n                    const index = i;\r\n                    return {x, y, height, id: item.id, botY, rightX, horizontalCenter, verticalCenter, index}\r\n                });\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n        if (editable && gridItems.current.length < todoLists.length) {\r\n            gridItems.current = [{\r\n                x: 0, y: 0, height: 0, id: todoLists[0].id, botY: 0,\r\n                rightX: 0, horizontalCenter: 0, verticalCenter: 0, index: 0\r\n            }, ...gridItems.current].map((item, i) => {\r\n                if (i === 0) return item;\r\n                return {...item, index: item.index + 1}\r\n            })\r\n            recalculateMeasures()\r\n        }\r\n        if (editable && gridItems.current.length > todoLists.length) {\r\n            const deletedListIndex = gridItems.current.findIndex(item =>\r\n                todoLists.findIndex(list => list.id === item.id) === -1);\r\n            const deletedList = gridItems.current[deletedListIndex];\r\n            gridItems.current = gridItems.current.map((item) => {\r\n                const index = item.index > deletedList.index ? item.index - 1 : item.index;\r\n                return {...item, index}\r\n            }).filter((item, i) => i !== deletedListIndex);\r\n            recalculateMeasures()\r\n        }\r\n        if (gridItems.current.length === todoLists.length) recalculateMeasures();\r\n        setSprings(i => {\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length-1-i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    }, [todoLists]);\r\n\r\n    const recalculateMeasures = useCallback(() => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = gridItems.current.map((item, i) => {\r\n            const heightInMeasuredArray = temporaryValue.current.find(list => item.id === list.id);\r\n            const height = heightInMeasuredArray ? heightInMeasuredArray.height : 0;\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += height) - height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter, height}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }, [currWidth, columns]);\r\n\r\n    const reorder = useCallback((oldIndex: number, newIndex: number) => {\r\n        const newHeights = new Array(columns).fill(0);\r\n        gridItems.current = swap(gridItems.current, oldIndex, newIndex).map((item, i) => {\r\n            const column = i % columns;\r\n            const x = currWidth * column;\r\n            const y = (newHeights[column] += item.height) - item.height;\r\n            const rightX = x + currWidth;\r\n            const botY = y + item.height;\r\n            const horizontalCenter = x + currWidth / 2;\r\n            const verticalCenter = y + item.height / 2;\r\n            return {...item, x, y, rightX, botY, horizontalCenter, verticalCenter}\r\n        });\r\n        if (Math.max(...newHeights) !== height.current) {\r\n            height.current = Math.max(...newHeights);\r\n            dispatch(actions.setHeight(height.current));\r\n        }\r\n    }, [currWidth, columns]);\r\n\r\n    const calculatePositions = useCallback((x: number, y: number) => {\r\n        const xPos = currItem.current.horizontalCenter + x;\r\n        const yPos = currItem.current.verticalCenter + y;\r\n        let i = gridItems.current.findIndex(item => {\r\n            if (item.x < xPos && item.rightX > xPos && item.y < yPos && item.botY > yPos) return true\r\n        });\r\n        return i < todoLists.length && i >= 0 ? i : null;\r\n    }, [todoLists]);\r\n\r\n    const setActualSprings = useCallback((x: number, y: number, springsIndex: number) => {\r\n        setSprings(i => {\r\n            if (i === springsIndex) {\r\n                return {\r\n                    x: currItem.current.x + x,\r\n                    y: currItem.current.y + y,\r\n                    zIndex: 4,\r\n                    immediate: (n: string): boolean => n === 'zIndex'\r\n                }\r\n            }\r\n            const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n            return {x: currentSettings.x, y: currentSettings.y}\r\n        })\r\n    }, [todoLists]);\r\n\r\n    const currItem = useRef<GridItemsType>({\r\n        botY: 0,\r\n        height: 0,\r\n        horizontalCenter: 0,\r\n        id: \"\",\r\n        index: 0,\r\n        rightX: 0,\r\n        verticalCenter: 0,\r\n        x: 0,\r\n        y: 0\r\n    });\r\n    const bounds = useRef<{ left: number, right: number, top: number, bottom: number, pageTop: number, pageBottom: number }>({\r\n        left: 0, right: 0, top: 0, bottom: 0, pageTop: 0, pageBottom: 0\r\n    });\r\n    const eventCoords = useRef<{ offsetX: number, offsetY: number, clientX: number, clientY: number } | null>(null);\r\n    const virtualY = useRef<number>(0);\r\n    const addedY = useRef<number>(0);\r\n    const timeoutId = useRef<number | null>(null);\r\n\r\n    const getBounds = useCallback(() => {\r\n        const interfaceHeight = window.innerHeight*0.22 > 200 ? window.innerHeight*0.22 : 200;\r\n        const left = -currItem.current.x - 35 + eventCoords.current!.offsetX;\r\n        const right = width - currItem.current.rightX + 35 + (width / columns - eventCoords.current!.offsetX);\r\n        const top = -currItem.current.y - 35 - eventCoords.current!.offsetY - 35;\r\n        const bottom = height.current - currItem.current.y - 35 - (eventCoords.current!.offsetY + 35);\r\n        const pageTop = -eventCoords.current!.clientY + interfaceHeight + 35;\r\n        const pageBottom = window.innerHeight - window.innerHeight*0.1 + pageTop - interfaceHeight;\r\n        bounds.current = {left, right, top, bottom, pageTop, pageBottom}\r\n    }, [width, columns]);\r\n\r\n    const gesture = useDrag(({\r\n                                 args: [index, springsIndex], down, movement: [x, y],\r\n                                 active, first, event\r\n                             }) => {\r\n        event?.stopPropagation();\r\n        const draggedList = gridItems.current.findIndex(item => item.index === index);\r\n        if (first) {\r\n            dispatch(actions.setFocusedStatus(true))\r\n            currItem.current = gridItems.current[draggedList];\r\n            //@ts-ignore\r\n            eventCoords.current = {offsetX: event.offsetX, offsetY: event.offsetY, clientX: event.clientX, clientY: event.clientY};\r\n            getBounds();\r\n            virtualY.current = y;\r\n            addedY.current = 0;\r\n            console.log(bounds.current)\r\n        }\r\n        if (timeoutId.current !== null) {\r\n            clearTimeout(timeoutId.current);\r\n            timeoutId.current = null\r\n        }\r\n        console.log(virtualY.current)\r\n        if (active) {\r\n            if (y > bounds.current.pageBottom && virtualY.current < bounds.current.bottom) {\r\n                const awaitScroll = async () => {\r\n                    const promise = new Promise((resolve) => {\r\n                        timeoutId.current = window.setTimeout(() => {\r\n                                scrollByListDrugging('bottom');\r\n                                virtualY.current = virtualY.current + 5;\r\n                                addedY.current = addedY.current + 5;\r\n                                const newIndex = calculatePositions(x, virtualY.current);\r\n                                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                setActualSprings(x, virtualY.current, springsIndex)\r\n                                resolve()\r\n                            }\r\n                            , 10)\r\n                    });\r\n                    console.log(virtualY.current)\r\n                    await promise.then(res => {\r\n                        if (virtualY.current < bounds.current.bottom) awaitScroll()\r\n                    })\r\n                }\r\n                (async () => await awaitScroll())()\r\n            } else if (y < bounds.current.pageTop && virtualY.current > bounds.current.top) {\r\n                const awaitScroll = async () => {\r\n                    const promise = new Promise((resolve) => {\r\n                        timeoutId.current = window.setTimeout(() => {\r\n                                scrollByListDrugging('top');\r\n                                virtualY.current = virtualY.current - 5;\r\n                                addedY.current = addedY.current - 5;\r\n                                const newIndex = calculatePositions(x, virtualY.current);\r\n                                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                                setActualSprings(x, virtualY.current, springsIndex)\r\n                                resolve()\r\n                            }\r\n                            , 10)\r\n                    });\r\n                    console.log(virtualY.current)\r\n                    await promise.then(res => {\r\n                        if (virtualY.current > bounds.current.top) awaitScroll()\r\n                    })\r\n                }\r\n                (async () => await awaitScroll())()\r\n            } else {\r\n                virtualY.current = y + addedY.current;\r\n                const newIndex = calculatePositions(x, virtualY.current);\r\n                if (newIndex !== null && newIndex !== draggedList) reorder(draggedList, newIndex);\r\n                setActualSprings(x, virtualY.current, springsIndex)\r\n            }\r\n        }\r\n        if (!down) {\r\n            eventCoords.current = null;\r\n            setSprings(i => {\r\n                const currentSettings = gridItems.current.find((list) => list.index === todoLists.length - 1 - i)!;\r\n                return {x: currentSettings.x, y: currentSettings.y, zIndex: 3}\r\n            });\r\n            const newOrder = gridItems.current.map(item => item.id)\r\n            dispatch(actions.swapTodoLists(newOrder));\r\n            dispatch(actions.setFocusedStatus(false))\r\n        }\r\n    }, {filterTaps: true});\r\n\r\n    const [indexOfLookedList, setIndexOfLookedList] = useState<number | null>(null);\r\n    const closeLook = useCallback(async (index: number) => {\r\n        if (editable || indexOfLookedList !== null) return;\r\n        const currItem = gridItems.current.find(item => item.index === index)!;\r\n        switchScrollBar(false);\r\n        dispatch(actions.setCloseLookState(true));\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-index) return {\r\n                to: async animate => {\r\n                    await animate({opacity: 0});\r\n                    await animate({display: 'none'})\r\n                }\r\n            };\r\n            return {to: false}\r\n        });\r\n        dispatch(actions.setHeight(currItem.height));\r\n        setWrapperAnimation({\r\n            rotateX: 0,\r\n            rotateZ: 0,\r\n            y: 0,\r\n        });\r\n        setCloseLookState(currItem.height);\r\n        dispatch(actions.setPalette(neumorphColors[(todoLists.length-1-index) % neumorphColors.length]));\r\n        setIndexOfLookedList(index);\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-index) return {to: false};\r\n            return {\r\n                y: window.innerHeight / 2 - currItem.height / 2,\r\n                x: width / 2 - (width / columns) / 2\r\n            }\r\n        });\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({\r\n                    y: window.innerHeight / 2 - currItem.height / 2 - 25,\r\n                    x: width / 2 + (width / columns) / 2 - 10,\r\n                    display: 'block',\r\n                    immediate: true\r\n                });\r\n                await animate({opacity: 1, immediate: false})\r\n            }\r\n        })\r\n    }, [todoLists, setCloseLookState, indexOfLookedList]);\r\n\r\n    const returnFromCloseLook = useCallback(async () => {\r\n        switchScrollBar(false)\r\n        setCloseButtonAnimation({\r\n            to: async animate => {\r\n                await animate({opacity: 0});\r\n                await animate({display: 'none'})\r\n            }\r\n        });\r\n        await setSprings(i => {\r\n            if (i !== todoLists.length-1-indexOfLookedList!) return {to: false};\r\n            const currItem = gridItems.current.find(item => item.index === indexOfLookedList)!\r\n            return {x: currItem.x, y: currItem.y}\r\n        });\r\n        dispatch(actions.setCloseLookState(false));\r\n        returnFromCloseLookState();\r\n        dispatch(actions.setHeight(height.current));\r\n        await setWrapperAnimation({\r\n            rotateX: 45,\r\n            rotateZ: 45,\r\n            y: 275,\r\n        });\r\n        dispatch(actions.setPalette(defaultPalette));\r\n        setIndexOfLookedList(null);\r\n        setSprings(i => {\r\n            if (i !== todoLists.length-1-indexOfLookedList!) return {opacity: 1, display: 'block'};\r\n            return {to: false}\r\n        });\r\n    }, [todoLists, returnFromCloseLookState, indexOfLookedList]);\r\n\r\n    const [closeButtonAnimation, setCloseButtonAnimation] = useSpring(() => ({\r\n        x: 0,\r\n        y: 0,\r\n        opacity: 0,\r\n        display: 'none'\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <CloseButtonAnimatedWrapper onClick={returnFromCloseLook} style={closeButtonAnimation}>\r\n                <ClosingButton/>\r\n            </CloseButtonAnimatedWrapper>\r\n            {todoLists.length !== 0 && todoLists.map((list, i) =>\r\n                <TodoListContainer\r\n                    style={springs[todoLists.length - i - 1]} {...editable && {...gesture(i, todoLists.length-i-1)}}\r\n                    onClick={() => closeLook(i)}\r\n                    $width={currWidth} key={list.id}>\r\n                    <TodoList id={list.id} paletteIndex={(todoLists.length-1-i) % neumorphColors.length}\r\n                              deleteList={deleteList} setNewHeights={setNewHeights} closeLook={i === indexOfLookedList}\r\n                              listTitle={list.title} listTasks={list.tasks}/>\r\n                </TodoListContainer>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MappedLists, isEqual)","export const swap = (arr: Array<any>, index1: number, index2: number) => arr.map((val, idx) => {\r\n    if (idx === index1) return arr[index2];\r\n    if (idx === index2) return arr[index1];\r\n    return val;\r\n});\r\n","import React, {useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport {actions, initialization} from \"../../redux/functionalReducer\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from \"react-use-gesture\";\r\nimport MappedLists from \"./MappedLists\";\r\nimport {NeumorphColorsType, interfacePalette} from \"../neumorphColors\";\r\nimport {isMobile} from 'react-device-detect'\r\n\r\nconst AllLists = styled(animated.div)<{$editable: boolean, $closeLook: boolean, $interfaceHeight: number}>`\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  width: 70vw;\r\n  top: ${props => props.$editable && !props.$closeLook  ? props.$interfaceHeight : 0}px;\r\n  height: calc(100vh - 280px);\r\n  transform-origin: 50% 100%;\r\n  @media screen and (max-width: 1210px) {\r\n    transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n    top: ${props => props.$editable ? `${props.$interfaceHeight}px` : props.$closeLook ? \r\n        '0px' : '-38vh'};\r\n    width: 90vw\r\n  }\r\n`;\r\n\r\nconst ScrollableWrapper = styled(animated.div)<{top: number}>`\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n  z-index: 1;\r\n  left: 50%;\r\n  top: ${props => props.top}px;\r\n  transition: top 0.5s cubic-bezier(0.25, 0, 0, 1);\r\n  max-width: 2000px;\r\n`;\r\n\r\nconst ScrollBarWrapper = styled(animated.div)<{ $palette: NeumorphColorsType, $visible: boolean, $editable: boolean, $interfaceHeight: number}>`\r\n  position: absolute;\r\n  width: 30px;\r\n  border-radius: 10px;\r\n  height: ${props => props.$editable ? window.innerHeight - props.$interfaceHeight : window.innerHeight}px;\r\n  top: ${props => props.$editable ? props.$interfaceHeight : 0}px;\r\n  right: 0;\r\n  overflow: hidden;\r\n  transition: .6s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$palette.progressBarColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ScrollBarThing = styled(animated.div)<{ $palette: NeumorphColorsType, $height: number, $drugged: boolean }>`\r\n  position: absolute;\r\n  width: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  height: ${props => props.$height}%;\r\n  border-radius: 10px;\r\n  transition: background-image 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n  background: ${props => props.$drugged ? interfacePalette.background : props.$palette.background};\r\n  &:before {\r\n      transition: opacity 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      border-radius: 10px;\r\n      background-color: ${props => props.$palette.default ? interfacePalette.background : 'rgba(0, 0, 0, 0.3)'};\r\n      opacity: 0;\r\n  }\r\n  &:hover:before {\r\n      opacity: 1;\r\n   }\r\n`;\r\n\r\n\r\nconst ScrollWrapper: React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n    const editable = useSelector((store: AppStateType) => store.todoList.editable, shallowEqual);\r\n    const height = useSelector((store: AppStateType) => store.todoList.height, shallowEqual);\r\n    const width = useSelector((store: AppStateType) => store.todoList.width, shallowEqual);\r\n    const initialLoadingState = useSelector((store: AppStateType) => store.todoList.initialLoadingState, shallowEqual);\r\n    const closeLook = useSelector((store: AppStateType) => store.todoList.closeLookState, shallowEqual);\r\n    const interfaceHeight = useSelector((state: AppStateType) => state.todoList.interfaceHeight, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initialization());\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => dispatch(actions.setWidth(measuredRef.current!.offsetWidth)), 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, []);\r\n\r\n    const [{border, scrollBarHeight}, setBorders] = useState({border: 0, scrollBarHeight: 0});\r\n    const [drugged, setDrugged] = useState<boolean>(false);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        if (height < window.innerHeight) setVisible(false)\r\n        else setVisible(true);\r\n        if (!closeLook) {\r\n            const border = editable ? (height - window.innerHeight < 0 ? 0 : height - window.innerHeight + interfaceHeight)\r\n                : (height - window.innerHeight < 0 ? 0.5 * height : height - window.innerHeight / 2);\r\n            const scrollBarHeight = !height ? 0 : (window.innerHeight - (editable ? interfaceHeight : 0)) / height * 100;\r\n            setBorders({border, scrollBarHeight})\r\n        }\r\n    }, [height, editable, width]);\r\n\r\n    const measuredRef = useRef<HTMLDivElement>(null);\r\n\r\n    useLayoutEffect(() => {\r\n        dispatch(actions.setWidth(measuredRef.current!.offsetWidth))\r\n    }, []);\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        x: '-100vw',\r\n        rotateX: 45,\r\n        rotateZ: 45,\r\n        y: 275,\r\n        config: {tension: 90, clamp: true},\r\n    }));\r\n    useEffect(() => {\r\n        if (!initialLoadingState) setWrapperAnimation({\r\n            x: window.innerWidth <= 1210 ? '-5vw' : '-15vw',\r\n        })\r\n    }, [initialLoadingState])\r\n\r\n    useEffect(() => {\r\n        if (!initialLoadingState) setWrapperAnimation({\r\n            x: editable ? (window.innerWidth <= 1210 ? '5vw' : '15vw') : (window.innerWidth <= 1210 ? '-5vw' : '-15vw'),\r\n            rotateX: editable ? 0 : 45,\r\n            rotateZ: editable ? 0 : 45,\r\n            y: editable ? 0 : 275,\r\n        })\r\n    }, [editable]);\r\n\r\n    //scroll logic\r\n    const scrolledY = useRef<number>(0);\r\n    const scrolledPercent = useRef<number>(0);\r\n    const memoizedData = useRef<Array<number>>([]);\r\n    const [scrollingAnimation, setScroll] = useSpring(() => ({\r\n        y: 0,\r\n        top: `0%`,\r\n        height: 0,\r\n        immediate: false\r\n    }));\r\n    useEffect(() => {\r\n        setScroll({height});\r\n        if (!initialLoadingState) setWrapperAnimation({\r\n            x: editable || closeLook ? (window.innerWidth <= 1210 ? '5vw' : '15vw') : (window.innerWidth <= 1210 ? '-5vw' : '-15vw')\r\n        })\r\n    }, [height, width]);\r\n\r\n    const visibilityOfScrollBar = useSpring({\r\n        from: {opacity: 0, right: -50, display: 'none'},\r\n        to: async animate => {\r\n            await animate(visible ? {display: 'block'} : {opacity: 0, right: -50});\r\n            await animate(visible ? {opacity: 1, right: 0} : {display: 'none'})\r\n        }\r\n    });\r\n\r\n    useWheel(({delta: [, y]}) => {\r\n        if (!visible) return;\r\n        scrolledY.current = scrolledY.current + y < border && scrolledY.current + y > 0 ? scrolledY.current + y\r\n            : scrolledY.current + y <= 0 ? 0 : border;\r\n        scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`\r\n        });\r\n    }, {domTarget: window});\r\n    useDrag(({offset: [, y], active, event}) => {\r\n        if (!isMobile || !visible) return;\r\n        event?.preventDefault();\r\n        if (active) {\r\n            const posY = -y;\r\n            scrolledY.current = posY < border && posY > 0 ? posY : posY <= 0 ? 0 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, {domTarget: window, filterTaps: true, eventOptions: {passive: false}});\r\n\r\n    //scroller\r\n    const bindDraggedScrollBar = useDrag(({delta: [, y], event, first, down}) => {\r\n        event?.stopPropagation();\r\n        if (first) setDrugged(true);\r\n        const absY = y / (editable ? window.innerHeight - interfaceHeight : window.innerHeight) * 100;\r\n        scrolledPercent.current = scrolledPercent.current + absY > 0 && scrolledPercent.current + absY < 100 - scrollBarHeight ?\r\n            scrolledPercent.current + absY : scrolledPercent.current + absY <= 0 ? 0 : 100 - scrollBarHeight;\r\n        scrolledY.current = border * scrolledPercent.current / (100 - scrollBarHeight);\r\n        setScroll({\r\n            y: -scrolledY.current,\r\n            top: `${scrolledPercent.current}%`,\r\n            immediate: (prop) => prop === 'top'\r\n        });\r\n        if (!down) setDrugged(false)\r\n    });\r\n\r\n    const scrollByListDrugging = useCallback((direction: string) => {\r\n        if (direction === 'bottom' && scrolledY.current < border) {\r\n            scrolledY.current = scrolledY.current + 5 < border ? scrolledY.current + 5 : border;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n        if (direction === 'top' && scrolledY.current > 0) {\r\n            scrolledY.current = scrolledY.current - 5 > 0 ? scrolledY.current - 5 : 0;\r\n            scrolledPercent.current = scrolledY.current / border * (100 - scrollBarHeight);\r\n            setScroll({\r\n                y: -scrolledY.current,\r\n                top: `${scrolledPercent.current}%`\r\n            });\r\n        }\r\n    }, [border, scrollBarHeight])\r\n\r\n    const setCloseLookState = useCallback((elementHeight: number) => {\r\n        const newBorder = elementHeight > window.innerHeight - (isMobile ? 100 : 250) ?\r\n            elementHeight - (window.innerHeight - (isMobile ? 100 : 250)) : 0;\r\n        if (newBorder > 0) {\r\n            memoizedData.current = [scrolledY.current, scrolledPercent.current, border, scrollBarHeight];\r\n            const newScrollBarHeight = (window.innerHeight - (isMobile ? 100 : 250)) / elementHeight * 100\r\n            setBorders({border: newBorder, scrollBarHeight: newScrollBarHeight})\r\n            scrolledY.current = 0;\r\n            scrolledPercent.current = 0;\r\n            setScroll({\r\n                y: 0,\r\n                top: `${0}%`\r\n            });\r\n            setVisible(true);\r\n        }\r\n    }, [border, scrollBarHeight]);\r\n\r\n    const returnFromCloseLookState = useCallback(() => {\r\n        if (memoizedData.current.length !== 0) {\r\n            scrolledY.current = memoizedData.current[0];\r\n            scrolledPercent.current = memoizedData.current[1];\r\n            setBorders({border: memoizedData.current[2], scrollBarHeight: memoizedData.current[3]})\r\n            setScroll({\r\n                y: -memoizedData.current[0],\r\n                top: `${memoizedData.current[1]}%`\r\n            });\r\n        }\r\n        setVisible(true);\r\n    }, []);\r\n\r\n    const switchScrollBar = useCallback((visibility: boolean) => setVisible(visibility), []);\r\n\r\n    return (\r\n        <>\r\n            <AllLists style={wrapperAnimation} $editable={editable} $closeLook={closeLook} $interfaceHeight={interfaceHeight}>\r\n                <ScrollableWrapper style={{y: scrollingAnimation.y, height: scrollingAnimation.height, translateX: '-50%'}}\r\n                                   ref={measuredRef} //here\r\n                                   top={closeLook && visible && isMobile ? 50 : closeLook && visible && !isMobile ? 125 : 25}>\r\n                    <MappedLists setWrapperAnimation={setWrapperAnimation} scrollByListDrugging={scrollByListDrugging}\r\n                                 setCloseLookState={setCloseLookState} returnFromCloseLookState={returnFromCloseLookState}\r\n                                 switchScrollBar={switchScrollBar}/>\r\n                </ScrollableWrapper>\r\n            </AllLists>\r\n            <ScrollBarWrapper $palette={currentPalette} $visible={visible} style={visibilityOfScrollBar}\r\n                              $editable={editable} $interfaceHeight={interfaceHeight}>\r\n                <ScrollBarThing $palette={currentPalette} $drugged={drugged}\r\n                                style={{top: scrollingAnimation.top}} {...!isMobile && {...bindDraggedScrollBar()}}\r\n                                $height={scrollBarHeight}/>\r\n            </ScrollBarWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScrollWrapper;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../redux/store\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {neumorphColors} from \"./neumorphColors\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst Background = styled(animated.div)` \r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AnimatedBackground:React.FC = () => {\r\n\r\n    const currentPalette = useSelector((store: AppStateType) => store.todoList.currentPaletteIndex, shallowEqual);\r\n\r\n    const [animateBackground, setBackground] = useSpring(() => ({\r\n        background: currentPalette.background\r\n    }));\r\n    useEffect(() => {\r\n        setBackground({background: currentPalette.background})\r\n    }, [currentPalette])\r\n\r\n    return <Background style={animateBackground}/>\r\n}\r\n\r\nexport default AnimatedBackground;\r\n\r\n","import React, {useEffect, useLayoutEffect, useMemo} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {actions, submitAllChanges} from \"../redux/functionalReducer\";\r\nimport {animated, useSpring, useTransition} from \"react-spring\";\r\nimport {interfacePalette, NeumorphColorsType} from \"./neumorphColors\";\r\n\r\nconst RotatedBackground = styled(animated.div)<{ $palette: NeumorphColorsType }>`\r\n   position: absolute;\r\n   z-index: 998;\r\n   background-color: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n   width: 300%;\r\n   transform-origin: 50% 0;\r\n   left: -150%;\r\n   transition: background-color 0.3s cubic-bezier(0.25, 0, 0, 1);\r\n   &:before {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      content: '';\r\n      background-color: ${props => props.$palette.default ? interfacePalette.background : 'rgba(0, 0, 0, 0.3)'};\r\n   }\r\n`;\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  font-family: NunitoSans-ExtraLight, sans-serif;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n  min-width: 150px;\r\n  min-height: 150px;\r\n`;\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  position: absolute;\r\n  width: 16vw;\r\n  height: 16vw;\r\n  max-width: 210px;\r\n  min-width: 130px;\r\n  max-height: 210px;\r\n  min-height: 130px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst EditButton = styled.div<{ $palette: NeumorphColorsType }>`\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 15vw;\r\n  height: 15vw;\r\n  max-width: 210px;\r\n  min-width: 130px;\r\n  max-height: 210px;\r\n  min-height: 130px;\r\n  border-radius: 50%;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.shadows : props.$palette.shadows} ;\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n`;\r\n\r\nconst ProgressBackground = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  background-color: red;\r\n  position: absolute;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Progress = styled(animated.div)`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  background-color: black;\r\n`;\r\n\r\nconst InnerBackground = styled.div<{ $palette: NeumorphColorsType, $altBackground: boolean }>`\r\n  width: 90%;\r\n  height: 90%;\r\n  top: 5%;\r\n  left: 5%;\r\n  position: absolute;\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  display: grid;\r\n  place-items: center;\r\n  border-radius: 50%;\r\n  ${props => !props.$altBackground &&\r\n    `&:hover {\r\n        background: ${props.$palette.background};\r\n        color: ${props.$palette.color};\r\n  }`}\r\n`;\r\n\r\n//calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));\r\nconst InnerEditButtonText = styled(animated.div)`\r\n  z-index: 12;\r\n  text-align: center;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  font-size: calc(15px + (50 - 15) * ((100vw - 300px) / (2000 - 300)));\r\n`;\r\n\r\nconst SmallerButton = styled.div<{ $palette: NeumorphColorsType, $editable: boolean }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 2;\r\n  width: 7vw;\r\n  height: 7vw;\r\n  max-width: 105px;\r\n  min-width: 70px;\r\n  max-height: 105px;\r\n  min-height: 70px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: ${props => props.$editable ? '-20%' : '50%'};\r\n  transition: left 0.4s cubic-bezier(0.25, 0, 0, 1) 0.3s, background, color 0.4s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst MediumButton = styled(animated.div)<{ $palette: NeumorphColorsType, $editable: boolean }>`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  z-index: 1;\r\n  width: 10vw;\r\n  height: 10vw;\r\n  max-width: 160px;\r\n  min-width: 100px;\r\n  max-height: 160px;\r\n  min-height: 100px;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  place-items: center;\r\n  box-shadow: ${props => props.$palette.default ? interfacePalette.littleShadows : props.$palette.littleShadows};\r\n  background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n  color: ${props => props.$palette.color};\r\n  transform: translate(-50%, -50%);\r\n  top: 50%;\r\n  left: ${props => props.$editable ? '130%' : '50%'};\r\n  transition: left 0.4s cubic-bezier(0.25, 0, 0, 1) 0.3s, background, color 0.4s cubic-bezier(0.25, 0, 0, 1);\r\n  &:hover {\r\n    background: ${props => props.$palette.default ? interfacePalette.background : props.$palette.background};\r\n    color: ${props => props.$palette.default ? interfacePalette.color : props.$palette.color};\r\n  }\r\n`;\r\n\r\nconst InnerSmallerButtonText = styled.div`\r\n  text-align: center;\r\n  font-size: calc(10px + (20 - 10) * ((100vw - 300px) / (2000 - 300)));\r\n`;\r\n\r\nconst MainInterface = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const editable = useSelector((state: AppStateType) => state.todoList.editable, shallowEqual);\r\n    const currentPalette = useSelector((state: AppStateType) => state.todoList.currentPaletteIndex, shallowEqual);\r\n    const pendingState = useSelector((state: AppStateType) => state.todoList.pendingState, shallowEqual);\r\n    const initialLoading = useSelector((state: AppStateType) => state.todoList.initialLoadingState, shallowEqual);\r\n    const swapState = useSelector((state: AppStateType) => state.todoList.swapState, shallowEqual);\r\n    const allTasks = useSelector((state: AppStateType) => state.todoList.allTasks, shallowEqual);\r\n    const completedTasks = useSelector((state: AppStateType) => state.todoList.completedTasks, shallowEqual);\r\n    const fetching = useSelector((state: AppStateType) => state.todoList.fetchingState, shallowEqual);\r\n    const closeLook = useSelector((state: AppStateType) => state.todoList.closeLookState, shallowEqual);\r\n    const interfaceHeight = useSelector((state: AppStateType) => state.todoList.interfaceHeight, shallowEqual);\r\n\r\n    const switchEditMode = () => {\r\n        if (!editable) dispatch(actions.enableEditMode());\r\n        if (editable) dispatch(submitAllChanges());\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        let timeoutId: number | undefined = undefined;\r\n        const resizeListener = () => {\r\n            if (isMounted) {\r\n                clearTimeout(timeoutId);\r\n                timeoutId = window.setTimeout(() => {\r\n                    const newHeight = editable ? (window.innerWidth * 0.17 > 230 ? window.innerWidth * 0.17 :\r\n                        window.innerWidth * 0.17 < 150 ? 150 : window.innerWidth * 0.17) :\r\n                        (Math.sqrt((window.innerHeight*0.23) ** 2 + (window.innerWidth*0.23) ** 2) > 300 ? 300 :\r\n                            Math.sqrt((window.innerHeight*0.23) ** 2 + (window.innerWidth*0.23) ** 2))\r\n                    dispatch(actions.setInterfaceHeight(newHeight))\r\n                }, 150);\r\n            }\r\n        };\r\n        window.addEventListener('resize', resizeListener);\r\n        return () => {\r\n            isMounted = false;\r\n            window.removeEventListener('resize', resizeListener);\r\n        }\r\n    }, []);\r\n    console.log(Math.sqrt((window.innerHeight*0.25) ** 2 + (window.innerWidth*0.25) ** 2), (window.innerWidth * 0.17 > 230 ? window.innerWidth * 0.17 :\r\n        window.innerWidth * 0.17 < 150 ? 150 : window.innerWidth * 0.17))\r\n\r\n    useLayoutEffect(() => {\r\n        const newHeight = editable ? (window.innerWidth * 0.17 > 230 ? window.innerWidth * 0.17 :\r\n            window.innerWidth * 0.17 < 150 ? 150 : window.innerWidth * 0.17) :\r\n            Math.sqrt((window.innerHeight*0.23) ** 2 + (window.innerWidth*0.23) ** 2)\r\n        dispatch(actions.setInterfaceHeight(newHeight))\r\n    }, [editable])\r\n\r\n    const addTodoList = () => {\r\n        const id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n            .replace(/[xy]/g, (c, r) => ('x' == c ? (r = Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16));\r\n        const newList = {\r\n            id,\r\n            title: '',\r\n            tasks: []\r\n        }\r\n        dispatch(actions.addTodoList(newList));\r\n    };\r\n\r\n    const rejectAllChanges = () => {\r\n        dispatch(actions.rejectAllChanges())\r\n    };\r\n\r\n    //animation logic\r\n    const [spring, setSpring] = useSpring(() => ({\r\n        height: '100%',\r\n        width: '100%',\r\n        backgroundHeight: Math.sqrt(window.innerHeight ** 2 + window.innerWidth ** 2),\r\n        rotateZ: -35\r\n    }));\r\n\r\n    const [progressBarrAnimation, setProgressBar] = useSpring(() => ({\r\n        clipPath1: `polygon( 50% 0%, 100% 0%, 100% 200%, 50% 200%)`,\r\n        clipPath2: `polygon( 0% 0%, 50% 0%, 50% 200%, 0% 200%)`,\r\n        opacity: 1\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const progress = allTasks === 0 ? 0 : completedTasks / allTasks;\r\n        const progress1 = 200 - (200 - progress * 200);\r\n        const progress2 = 200 - progress * 200;\r\n        setProgressBar(() => {\r\n            if (progress === 1) return {\r\n                to: async animate => {\r\n                    await animate({\r\n                        clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n                        clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`\r\n                    });\r\n                    await animate({opacity: 0})\r\n                }\r\n            }\r\n            return {\r\n                clipPath1: `polygon( 50% ${progress1}%, 100% ${progress1}%, 100% 200%, 50% 200%)`,\r\n                clipPath2: `polygon( 0% 0%, 50% 0%, 50% ${progress2}%, 0% ${progress2}%)`,\r\n                opacity: 1,\r\n                immediate: (props) => props === 'opacity'\r\n            }\r\n        })\r\n    }, [allTasks, completedTasks]);\r\n\r\n    useEffect(() => {\r\n        if (!initialLoading && !editable) {\r\n            setSpring({\r\n                height: '20%',\r\n                width: '20%',\r\n                backgroundHeight: interfaceHeight,\r\n                rotateZ: -35,\r\n                config: {friction: 50}\r\n            })\r\n        } else if (editable) {\r\n            setSpring({\r\n                backgroundHeight: interfaceHeight,\r\n                height: '20%',\r\n                width: '100%',\r\n                rotateZ: 0,\r\n            })\r\n        } else if (closeLook) {\r\n            setSpring({\r\n                height: '20%',\r\n                width: '20%',\r\n                rotateZ: 0,\r\n            })\r\n        }\r\n    }, [editable, pendingState, initialLoading, swapState, fetching, closeLook, interfaceHeight]);\r\n\r\n    const actionMessage = useMemo(() =>\r\n            initialLoading ? 'Loading' : editable ? 'Submit' : pendingState ? 'Sending data'\r\n                : 'Edit'\r\n        , [editable, pendingState, initialLoading, swapState, fetching]);\r\n\r\n    const textTransition = useTransition(actionMessage, {\r\n        from: {opacity: 1, y: '-100%'},\r\n        enter: {opacity: 1, y: '0%'},\r\n        leave: {opacity: 0, y: '100%'},\r\n\r\n    })\r\n\r\n    /*console.log('interface render')*/\r\n\r\n    return (\r\n        <>\r\n            <RotatedBackground $palette={currentPalette} style={{\r\n                height: spring.backgroundHeight,\r\n                rotateZ: spring.rotateZ /*translateX: '-50%'*/\r\n            }}/>\r\n            <Wrapper style={{width: spring.width, height: spring.height}}>\r\n                <ButtonsWrapper>\r\n                    <EditButton onClick={switchEditMode} $palette={currentPalette}>\r\n                        <ProgressBackground style={{opacity: progressBarrAnimation.opacity}}>\r\n                            <Progress style={{clipPath: progressBarrAnimation.clipPath1}}/>\r\n                            <Progress style={{clipPath: progressBarrAnimation.clipPath2}}/>\r\n                        </ProgressBackground>\r\n                        <InnerBackground $palette={currentPalette}\r\n                                         $altBackground={pendingState || initialLoading || swapState || fetching}>\r\n                            {textTransition((style) =>\r\n                                <InnerEditButtonText style={{...style, translateY: '-50%'}}>\r\n                                    {actionMessage}\r\n                                </InnerEditButtonText>)}\r\n                        </InnerBackground>\r\n                    </EditButton>\r\n                    <SmallerButton onClick={addTodoList} $palette={currentPalette} $editable={editable}>\r\n                        <InnerSmallerButtonText>\r\n                            Add list\r\n                        </InnerSmallerButtonText>\r\n                    </SmallerButton>\r\n                    <MediumButton onClick={rejectAllChanges} $palette={currentPalette} $editable={editable}>\r\n                        <InnerSmallerButtonText>\r\n                            remove changes\r\n                        </InnerSmallerButtonText>\r\n                    </MediumButton>\r\n                </ButtonsWrapper>\r\n            </Wrapper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MainInterface","import React from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ScrollWrapper from \"./todolists/ScrollWrapper\";\r\nimport AnimatedBackground from \"./AnimatedBackground\";\r\nimport MainInterface from \"./MainInterface\";\r\n\r\nlibrary.add(far, fas);\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  * {\r\n      box-sizing: border-box;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      touch-action: none;\r\n    };\r\n  body {\r\n    background-color: white;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    outline: none;\r\n    &::-webkit-scrollbar { \r\n      display: none;\r\n    };\r\n  };\r\n  html {\r\n    -ms-overflow-style: none; \r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <AnimatedBackground/>\r\n            <Wrapper>\r\n                <MainInterface/>\r\n                <ScrollWrapper/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport functionalReducer from \"./functionalReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: functionalReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport './App.css';\r\nimport store from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n/// <reference types=\"react-dom/experimental\"\r\n/*ReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));*/\r\n\r\nconst root = document.getElementById(\"root\") as HTMLElement;\r\n// @ts-ignore\r\nReactDOM.unstable_createRoot(root).render( <Provider store={store}>\r\n    <App/>\r\n</Provider>);\r\n\r\n"],"sourceRoot":""}